	.file	"main.cpp"
	.text
	.section	.text$_ZSt23__is_constant_evaluatedv,"x"
	.linkonce discard
	.globl	std::__is_constant_evaluated()
	.def	std::__is_constant_evaluated();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__is_constant_evaluated()
std::__is_constant_evaluated():
.LFB1:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movl	$0, %eax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZnwyPv,"x"
	.linkonce discard
	.globl	operator new(unsigned long long, void*)
	.def	operator new(unsigned long long, void*);	.scl	2;	.type	32;	.endef
	.seh_proc	operator new(unsigned long long, void*)
operator new(unsigned long long, void*):
.LFB86:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZdlPvS_,"x"
	.linkonce discard
	.globl	operator delete(void*, void*)
	.def	operator delete(void*, void*);	.scl	2;	.type	32;	.endef
	.seh_proc	operator delete(void*, void*)
operator delete(void*, void*):
.LFB88:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt11char_traitsIcE6lengthEPKc,"x"
	.linkonce discard
	.globl	std::char_traits<char>::length(char const*)
	.def	std::char_traits<char>::length(char const*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::char_traits<char>::length(char const*)
std::char_traits<char>::length(char const*):
.LFB165:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	call	std::__is_constant_evaluated()
	testb	%al, %al
	je	.L7
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	__gnu_cxx::char_traits<char>::length(char const*)
	jmp	.L8
.L7:
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	strlen
	nop
.L8:
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
.lcomm std::__ioinit,1,1
	.section	.text$_ZNSt9_Any_data9_M_accessEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_Any_data::_M_access()
	.def	std::_Any_data::_M_access();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_Any_data::_M_access()
std::_Any_data::_M_access():
.LFB2027:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt9_Any_data9_M_accessEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_Any_data::_M_access() const
	.def	std::_Any_data::_M_access() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::_Any_data::_M_access() const
std::_Any_data::_M_access() const:
.LFB2028:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt14_Function_baseD2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::_Function_base::~_Function_base()
	.def	std::_Function_base::~_Function_base();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_Function_base::~_Function_base()
std::_Function_base::~_Function_base():
.LFB2043:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.L15
	movq	16(%rbp), %rax
	movq	16(%rax), %r9
	movq	16(%rbp), %rdx
	movq	16(%rbp), %rax
	movl	$3, %r8d
	movq	%rax, %rcx
	call	*%r9
.L15:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.def	__gxx_personality_seh0;	.scl	2;	.type	32;	.endef
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA2043:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE2043-.LLSDACSB2043
.LLSDACSB2043:
.LLSDACSE2043:
	.section	.text$_ZNSt14_Function_baseD2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt14_Function_base8_M_emptyEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_Function_base::_M_empty() const
	.def	std::_Function_base::_M_empty() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::_Function_base::_M_empty() const
std::_Function_base::_M_empty() const:
.LFB2045:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	sete	%al
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt8__detail17_List_node_headerC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__detail::_List_node_header::_List_node_header()
	.def	std::__detail::_List_node_header::_List_node_header();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__detail::_List_node_header::_List_node_header()
std::__detail::_List_node_header::_List_node_header():
.LFB3268:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__detail::_List_node_header::_M_init()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt8__detail17_List_node_header7_M_initEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__detail::_List_node_header::_M_init()
	.def	std::__detail::_List_node_header::_M_init();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__detail::_List_node_header::_M_init()
std::__detail::_List_node_header::_M_init():
.LFB3273:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rdx, 8(%rax)
	movq	16(%rbp), %rax
	movq	8(%rax), %rdx
	movq	16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	16(%rbp), %rax
	movq	$0, 16(%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	main::{lambda()#1}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1}::operator()() const
main::{lambda()#1}::operator()() const:
.LFB3436:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	(%rax), %eax
	cmpl	$2, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#2}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2}::operator()() const
main::{lambda()#2}::operator()() const:
.LFB3439:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	(%rax), %eax
	cmpl	$1, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#3}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3}::operator()() const
main::{lambda()#3}::operator()() const:
.LFB3442:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$1, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#4}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4}::operator()() const
main::{lambda()#4}::operator()() const:
.LFB3445:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$6, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#5}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5}::operator()() const
main::{lambda()#5}::operator()() const:
.LFB3448:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$2, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#6}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6}::operator()() const
main::{lambda()#6}::operator()() const:
.LFB3451:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$3, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#7}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7}::operator()() const
main::{lambda()#7}::operator()() const:
.LFB3454:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$1, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#8}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8}::operator()() const
main::{lambda()#8}::operator()() const:
.LFB3457:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$2, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#9}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9}::operator()() const
main::{lambda()#9}::operator()() const:
.LFB3460:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$3, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#10}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10}::operator()() const
main::{lambda()#10}::operator()() const:
.LFB3463:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$12, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#11}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11}::operator()() const
main::{lambda()#11}::operator()() const:
.LFB3466:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$13, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#12}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12}::operator()() const
main::{lambda()#12}::operator()() const:
.LFB3469:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$14, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#13}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13}::operator()() const
main::{lambda()#13}::operator()() const:
.LFB3472:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$15, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#14}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14}::operator()() const
main::{lambda()#14}::operator()() const:
.LFB3475:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$16, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#15}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15}::operator()() const
main::{lambda()#15}::operator()() const:
.LFB3478:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$17, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#16}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16}::operator()() const
main::{lambda()#16}::operator()() const:
.LFB3481:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$18, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#17}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17}::operator()() const
main::{lambda()#17}::operator()() const:
.LFB3484:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$19, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#18}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18}::operator()() const
main::{lambda()#18}::operator()() const:
.LFB3487:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$21, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#19}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19}::operator()() const
main::{lambda()#19}::operator()() const:
.LFB3490:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$22, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#20}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20}::operator()() const
main::{lambda()#20}::operator()() const:
.LFB3493:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$23, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#21}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21}::operator()() const
main::{lambda()#21}::operator()() const:
.LFB3496:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$1, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#22}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22}::operator()() const
main::{lambda()#22}::operator()() const:
.LFB3499:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$6, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#23}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23}::operator()() const
main::{lambda()#23}::operator()() const:
.LFB3502:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$12, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#24}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24}::operator()() const
main::{lambda()#24}::operator()() const:
.LFB3505:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$13, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#25}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25}::operator()() const
main::{lambda()#25}::operator()() const:
.LFB3508:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$14, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#26}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26}::operator()() const
main::{lambda()#26}::operator()() const:
.LFB3511:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$7, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#27}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27}::operator()() const
main::{lambda()#27}::operator()() const:
.LFB3514:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$11, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#28}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28}::operator()() const
main::{lambda()#28}::operator()() const:
.LFB3517:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$4, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#29}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29}::operator()() const
main::{lambda()#29}::operator()() const:
.LFB3520:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$4, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#30}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30}::operator()() const
main::{lambda()#30}::operator()() const:
.LFB3523:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$5, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#31}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31}::operator()() const
main::{lambda()#31}::operator()() const:
.LFB3526:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$6, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#32}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32}::operator()() const
main::{lambda()#32}::operator()() const:
.LFB3529:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$7, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#33}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33}::operator()() const
main::{lambda()#33}::operator()() const:
.LFB3532:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$5, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#34}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34}::operator()() const
main::{lambda()#34}::operator()() const:
.LFB3535:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$7, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#35}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35}::operator()() const
main::{lambda()#35}::operator()() const:
.LFB3538:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$8, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#36}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36}::operator()() const
main::{lambda()#36}::operator()() const:
.LFB3541:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$9, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#37}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37}::operator()() const
main::{lambda()#37}::operator()() const:
.LFB3544:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$10, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#38}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38}::operator()() const
main::{lambda()#38}::operator()() const:
.LFB3547:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$9, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#39}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39}::operator()() const
main::{lambda()#39}::operator()() const:
.LFB3550:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$10, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#40}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40}::operator()() const
main::{lambda()#40}::operator()() const:
.LFB3553:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$11, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#41}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41}::operator()() const
main::{lambda()#41}::operator()() const:
.LFB3556:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$20, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#42}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42}::operator()() const
main::{lambda()#42}::operator()() const:
.LFB3559:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	4(%rax), %eax
	cmpl	$15, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#43}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43}::operator()() const
main::{lambda()#43}::operator()() const:
.LFB3562:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	8(%rax), %eax
	cmpl	$26, %eax
	sete	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt8functionIFbvEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::function<bool ()>::~function()
	.def	std::function<bool ()>::~function();	.scl	2;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::~function()
std::function<bool ()>::~function():
.LFB3747:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::~_Function_base()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair();	.scl	2;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair():
.LFB3749:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	addq	$32, %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8]):
.LFB3751:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [8]>(std::remove_reference<char const (&) [8]>::type&)) [8]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB0:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE0:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L111
.L110:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB1:
	call	_Unwind_Resume
	nop
.LEHE1:
.L111:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3751:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3751-.LLSDACSB3751
.LLSDACSB3751:
	.uleb128 .LEHB0-.LFB3751
	.uleb128 .LEHE0-.LEHB0
	.uleb128 .L110-.LFB3751
	.uleb128 0
	.uleb128 .LEHB1-.LFB3751
	.uleb128 .LEHE1-.LEHB1
	.uleb128 0
	.uleb128 0
.LLSDACSE3751:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10]):
.LFB3754:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [10]>(std::remove_reference<char const (&) [10]>::type&)) [10]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB2:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE2:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L115
.L114:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB3:
	call	_Unwind_Resume
	nop
.LEHE3:
.L115:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3754:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3754-.LLSDACSB3754
.LLSDACSB3754:
	.uleb128 .LEHB2-.LFB3754
	.uleb128 .LEHE2-.LEHB2
	.uleb128 .L114-.LFB3754
	.uleb128 0
	.uleb128 .LEHB3-.LFB3754
	.uleb128 .LEHE3-.LEHB3
	.uleb128 0
	.uleb128 0
.LLSDACSE3754:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15]):
.LFB3757:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [15]>(std::remove_reference<char const (&) [15]>::type&)) [15]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB4:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE4:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L119
.L118:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB5:
	call	_Unwind_Resume
	nop
.LEHE5:
.L119:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3757:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3757-.LLSDACSB3757
.LLSDACSB3757:
	.uleb128 .LEHB4-.LFB3757
	.uleb128 .LEHE4-.LEHB4
	.uleb128 .L118-.LFB3757
	.uleb128 0
	.uleb128 .LEHB5-.LFB3757
	.uleb128 .LEHE5-.LEHB5
	.uleb128 0
	.uleb128 0
.LLSDACSE3757:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21]):
.LFB3760:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB6:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE6:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L123
.L122:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB7:
	call	_Unwind_Resume
	nop
.LEHE7:
.L123:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3760:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3760-.LLSDACSB3760
.LLSDACSB3760:
	.uleb128 .LEHB6-.LFB3760
	.uleb128 .LEHE6-.LEHB6
	.uleb128 .L122-.LFB3760
	.uleb128 0
	.uleb128 .LEHB7-.LFB3760
	.uleb128 .LEHE7-.LEHB7
	.uleb128 0
	.uleb128 0
.LLSDACSE3760:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17]):
.LFB3763:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB8:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE8:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L127
.L126:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB9:
	call	_Unwind_Resume
	nop
.LEHE9:
.L127:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3763:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3763-.LLSDACSB3763
.LLSDACSB3763:
	.uleb128 .LEHB8-.LFB3763
	.uleb128 .LEHE8-.LEHB8
	.uleb128 .L126-.LFB3763
	.uleb128 0
	.uleb128 .LEHB9-.LFB3763
	.uleb128 .LEHE9-.LEHB9
	.uleb128 0
	.uleb128 0
.LLSDACSE3763:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18]):
.LFB3766:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB10:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE10:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L131
.L130:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB11:
	call	_Unwind_Resume
	nop
.LEHE11:
.L131:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3766:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3766-.LLSDACSB3766
.LLSDACSB3766:
	.uleb128 .LEHB10-.LFB3766
	.uleb128 .LEHE10-.LEHB10
	.uleb128 .L130-.LFB3766
	.uleb128 0
	.uleb128 .LEHB11-.LFB3766
	.uleb128 .LEHE11-.LEHB11
	.uleb128 0
	.uleb128 0
.LLSDACSE3766:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26]):
.LFB3769:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB12:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE12:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L135
.L134:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB13:
	call	_Unwind_Resume
	nop
.LEHE13:
.L135:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3769:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3769-.LLSDACSB3769
.LLSDACSB3769:
	.uleb128 .LEHB12-.LFB3769
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L134-.LFB3769
	.uleb128 0
	.uleb128 .LEHB13-.LFB3769
	.uleb128 .LEHE13-.LEHB13
	.uleb128 0
	.uleb128 0
.LLSDACSE3769:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27]):
.LFB3772:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [27]>(std::remove_reference<char const (&) [27]>::type&)) [27]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB14:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE14:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L139
.L138:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB15:
	call	_Unwind_Resume
	nop
.LEHE15:
.L139:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3772:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3772-.LLSDACSB3772
.LLSDACSB3772:
	.uleb128 .LEHB14-.LFB3772
	.uleb128 .LEHE14-.LEHB14
	.uleb128 .L138-.LFB3772
	.uleb128 0
	.uleb128 .LEHB15-.LFB3772
	.uleb128 .LEHE15-.LEHB15
	.uleb128 0
	.uleb128 0
.LLSDACSE3772:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31]):
.LFB3775:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [31]>(std::remove_reference<char const (&) [31]>::type&)) [31]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB16:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE16:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L143
.L142:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB17:
	call	_Unwind_Resume
	nop
.LEHE17:
.L143:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3775:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3775-.LLSDACSB3775
.LLSDACSB3775:
	.uleb128 .LEHB16-.LFB3775
	.uleb128 .LEHE16-.LEHB16
	.uleb128 .L142-.LFB3775
	.uleb128 0
	.uleb128 .LEHB17-.LFB3775
	.uleb128 .LEHE17-.LEHB17
	.uleb128 0
	.uleb128 0
.LLSDACSE3775:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29]):
.LFB3778:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB18:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE18:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L147
.L146:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB19:
	call	_Unwind_Resume
	nop
.LEHE19:
.L147:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3778:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3778-.LLSDACSB3778
.LLSDACSB3778:
	.uleb128 .LEHB18-.LFB3778
	.uleb128 .LEHE18-.LEHB18
	.uleb128 .L146-.LFB3778
	.uleb128 0
	.uleb128 .LEHB19-.LFB3778
	.uleb128 .LEHE19-.LEHB19
	.uleb128 0
	.uleb128 0
.LLSDACSE3778:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26]):
.LFB3781:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB20:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE20:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L151
.L150:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB21:
	call	_Unwind_Resume
	nop
.LEHE21:
.L151:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3781:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3781-.LLSDACSB3781
.LLSDACSB3781:
	.uleb128 .LEHB20-.LFB3781
	.uleb128 .LEHE20-.LEHB20
	.uleb128 .L150-.LFB3781
	.uleb128 0
	.uleb128 .LEHB21-.LFB3781
	.uleb128 .LEHE21-.LEHB21
	.uleb128 0
	.uleb128 0
.LLSDACSE3781:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28]):
.LFB3784:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB22:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE22:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L155
.L154:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB23:
	call	_Unwind_Resume
	nop
.LEHE23:
.L155:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3784:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3784-.LLSDACSB3784
.LLSDACSB3784:
	.uleb128 .LEHB22-.LFB3784
	.uleb128 .LEHE22-.LEHB22
	.uleb128 .L154-.LFB3784
	.uleb128 0
	.uleb128 .LEHB23-.LFB3784
	.uleb128 .LEHE23-.LEHB23
	.uleb128 0
	.uleb128 0
.LLSDACSE3784:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26]):
.LFB3787:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB24:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE24:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L159
.L158:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB25:
	call	_Unwind_Resume
	nop
.LEHE25:
.L159:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3787:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3787-.LLSDACSB3787
.LLSDACSB3787:
	.uleb128 .LEHB24-.LFB3787
	.uleb128 .LEHE24-.LEHB24
	.uleb128 .L158-.LFB3787
	.uleb128 0
	.uleb128 .LEHB25-.LFB3787
	.uleb128 .LEHE25-.LEHB25
	.uleb128 0
	.uleb128 0
.LLSDACSE3787:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33]):
.LFB3790:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [33]>(std::remove_reference<char const (&) [33]>::type&)) [33]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB26:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE26:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L163
.L162:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB27:
	call	_Unwind_Resume
	nop
.LEHE27:
.L163:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3790:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3790-.LLSDACSB3790
.LLSDACSB3790:
	.uleb128 .LEHB26-.LFB3790
	.uleb128 .LEHE26-.LEHB26
	.uleb128 .L162-.LFB3790
	.uleb128 0
	.uleb128 .LEHB27-.LFB3790
	.uleb128 .LEHE27-.LEHB27
	.uleb128 0
	.uleb128 0
.LLSDACSE3790:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30]):
.LFB3793:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB28:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE28:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L167
.L166:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB29:
	call	_Unwind_Resume
	nop
.LEHE29:
.L167:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3793:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3793-.LLSDACSB3793
.LLSDACSB3793:
	.uleb128 .LEHB28-.LFB3793
	.uleb128 .LEHE28-.LEHB28
	.uleb128 .L166-.LFB3793
	.uleb128 0
	.uleb128 .LEHB29-.LFB3793
	.uleb128 .LEHE29-.LEHB29
	.uleb128 0
	.uleb128 0
.LLSDACSE3793:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34]):
.LFB3796:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB30:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE30:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L171
.L170:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB31:
	call	_Unwind_Resume
	nop
.LEHE31:
.L171:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3796:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3796-.LLSDACSB3796
.LLSDACSB3796:
	.uleb128 .LEHB30-.LFB3796
	.uleb128 .LEHE30-.LEHB30
	.uleb128 .L170-.LFB3796
	.uleb128 0
	.uleb128 .LEHB31-.LFB3796
	.uleb128 .LEHE31-.LEHB31
	.uleb128 0
	.uleb128 0
.LLSDACSE3796:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34]):
.LFB3799:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB32:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE32:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L175
.L174:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB33:
	call	_Unwind_Resume
	nop
.LEHE33:
.L175:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3799:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3799-.LLSDACSB3799
.LLSDACSB3799:
	.uleb128 .LEHB32-.LFB3799
	.uleb128 .LEHE32-.LEHB32
	.uleb128 .L174-.LFB3799
	.uleb128 0
	.uleb128 .LEHB33-.LFB3799
	.uleb128 .LEHE33-.LEHB33
	.uleb128 0
	.uleb128 0
.LLSDACSE3799:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30]):
.LFB3802:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB34:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE34:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L179
.L178:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB35:
	call	_Unwind_Resume
	nop
.LEHE35:
.L179:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3802:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3802-.LLSDACSB3802
.LLSDACSB3802:
	.uleb128 .LEHB34-.LFB3802
	.uleb128 .LEHE34-.LEHB34
	.uleb128 .L178-.LFB3802
	.uleb128 0
	.uleb128 .LEHB35-.LFB3802
	.uleb128 .LEHE35-.LEHB35
	.uleb128 0
	.uleb128 0
.LLSDACSE3802:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28]):
.LFB3805:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB36:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE36:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L183
.L182:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB37:
	call	_Unwind_Resume
	nop
.LEHE37:
.L183:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3805:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3805-.LLSDACSB3805
.LLSDACSB3805:
	.uleb128 .LEHB36-.LFB3805
	.uleb128 .LEHE36-.LEHB36
	.uleb128 .L182-.LFB3805
	.uleb128 0
	.uleb128 .LEHB37-.LFB3805
	.uleb128 .LEHE37-.LEHB37
	.uleb128 0
	.uleb128 0
.LLSDACSE3805:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29]):
.LFB3808:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB38:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE38:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L187
.L186:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB39:
	call	_Unwind_Resume
	nop
.LEHE39:
.L187:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3808:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3808-.LLSDACSB3808
.LLSDACSB3808:
	.uleb128 .LEHB38-.LFB3808
	.uleb128 .LEHE38-.LEHB38
	.uleb128 .L186-.LFB3808
	.uleb128 0
	.uleb128 .LEHB39-.LFB3808
	.uleb128 .LEHE39-.LEHB39
	.uleb128 0
	.uleb128 0
.LLSDACSE3808:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23]):
.LFB3811:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB40:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE40:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L191
.L190:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB41:
	call	_Unwind_Resume
	nop
.LEHE41:
.L191:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3811:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3811-.LLSDACSB3811
.LLSDACSB3811:
	.uleb128 .LEHB40-.LFB3811
	.uleb128 .LEHE40-.LEHB40
	.uleb128 .L190-.LFB3811
	.uleb128 0
	.uleb128 .LEHB41-.LFB3811
	.uleb128 .LEHE41-.LEHB41
	.uleb128 0
	.uleb128 0
.LLSDACSE3811:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26]):
.LFB3814:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB42:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE42:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L195
.L194:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB43:
	call	_Unwind_Resume
	nop
.LEHE43:
.L195:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3814:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3814-.LLSDACSB3814
.LLSDACSB3814:
	.uleb128 .LEHB42-.LFB3814
	.uleb128 .LEHE42-.LEHB42
	.uleb128 .L194-.LFB3814
	.uleb128 0
	.uleb128 .LEHB43-.LFB3814
	.uleb128 .LEHE43-.LEHB43
	.uleb128 0
	.uleb128 0
.LLSDACSE3814:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24]):
.LFB3817:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB44:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE44:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L199
.L198:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB45:
	call	_Unwind_Resume
	nop
.LEHE45:
.L199:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3817:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3817-.LLSDACSB3817
.LLSDACSB3817:
	.uleb128 .LEHB44-.LFB3817
	.uleb128 .LEHE44-.LEHB44
	.uleb128 .L198-.LFB3817
	.uleb128 0
	.uleb128 .LEHB45-.LFB3817
	.uleb128 .LEHE45-.LEHB45
	.uleb128 0
	.uleb128 0
.LLSDACSE3817:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29]):
.LFB3820:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB46:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE46:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L203
.L202:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB47:
	call	_Unwind_Resume
	nop
.LEHE47:
.L203:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3820:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3820-.LLSDACSB3820
.LLSDACSB3820:
	.uleb128 .LEHB46-.LFB3820
	.uleb128 .LEHE46-.LEHB46
	.uleb128 .L202-.LFB3820
	.uleb128 0
	.uleb128 .LEHB47-.LFB3820
	.uleb128 .LEHE47-.LEHB47
	.uleb128 0
	.uleb128 0
.LLSDACSE3820:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23]):
.LFB3823:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB48:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE48:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L207
.L206:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB49:
	call	_Unwind_Resume
	nop
.LEHE49:
.L207:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3823:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3823-.LLSDACSB3823
.LLSDACSB3823:
	.uleb128 .LEHB48-.LFB3823
	.uleb128 .LEHE48-.LEHB48
	.uleb128 .L206-.LFB3823
	.uleb128 0
	.uleb128 .LEHB49-.LFB3823
	.uleb128 .LEHE49-.LEHB49
	.uleb128 0
	.uleb128 0
.LLSDACSE3823:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26]):
.LFB3826:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB50:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE50:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L211
.L210:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB51:
	call	_Unwind_Resume
	nop
.LEHE51:
.L211:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3826:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3826-.LLSDACSB3826
.LLSDACSB3826:
	.uleb128 .LEHB50-.LFB3826
	.uleb128 .LEHE50-.LEHB50
	.uleb128 .L210-.LFB3826
	.uleb128 0
	.uleb128 .LEHB51-.LFB3826
	.uleb128 .LEHE51-.LEHB51
	.uleb128 0
	.uleb128 0
.LLSDACSE3826:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23]):
.LFB3829:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB52:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE52:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L215
.L214:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB53:
	call	_Unwind_Resume
	nop
.LEHE53:
.L215:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3829:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3829-.LLSDACSB3829
.LLSDACSB3829:
	.uleb128 .LEHB52-.LFB3829
	.uleb128 .LEHE52-.LEHB52
	.uleb128 .L214-.LFB3829
	.uleb128 0
	.uleb128 .LEHB53-.LFB3829
	.uleb128 .LEHE53-.LEHB53
	.uleb128 0
	.uleb128 0
.LLSDACSE3829:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19]):
.LFB3832:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB54:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE54:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L219
.L218:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB55:
	call	_Unwind_Resume
	nop
.LEHE55:
.L219:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3832:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3832-.LLSDACSB3832
.LLSDACSB3832:
	.uleb128 .LEHB54-.LFB3832
	.uleb128 .LEHE54-.LEHB54
	.uleb128 .L218-.LFB3832
	.uleb128 0
	.uleb128 .LEHB55-.LFB3832
	.uleb128 .LEHE55-.LEHB55
	.uleb128 0
	.uleb128 0
.LLSDACSE3832:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29]):
.LFB3835:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB56:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE56:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L223
.L222:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB57:
	call	_Unwind_Resume
	nop
.LEHE57:
.L223:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3835:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3835-.LLSDACSB3835
.LLSDACSB3835:
	.uleb128 .LEHB56-.LFB3835
	.uleb128 .LEHE56-.LEHB56
	.uleb128 .L222-.LFB3835
	.uleb128 0
	.uleb128 .LEHB57-.LFB3835
	.uleb128 .LEHE57-.LEHB57
	.uleb128 0
	.uleb128 0
.LLSDACSE3835:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28]):
.LFB3838:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB58:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE58:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L227
.L226:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB59:
	call	_Unwind_Resume
	nop
.LEHE59:
.L227:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3838:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3838-.LLSDACSB3838
.LLSDACSB3838:
	.uleb128 .LEHB58-.LFB3838
	.uleb128 .LEHE58-.LEHB58
	.uleb128 .L226-.LFB3838
	.uleb128 0
	.uleb128 .LEHB59-.LFB3838
	.uleb128 .LEHE59-.LEHB59
	.uleb128 0
	.uleb128 0
.LLSDACSE3838:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28]):
.LFB3841:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB60:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE60:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L231
.L230:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB61:
	call	_Unwind_Resume
	nop
.LEHE61:
.L231:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3841:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3841-.LLSDACSB3841
.LLSDACSB3841:
	.uleb128 .LEHB60-.LFB3841
	.uleb128 .LEHE60-.LEHB60
	.uleb128 .L230-.LFB3841
	.uleb128 0
	.uleb128 .LEHB61-.LFB3841
	.uleb128 .LEHE61-.LEHB61
	.uleb128 0
	.uleb128 0
.LLSDACSE3841:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19]):
.LFB3844:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB62:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE62:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L235
.L234:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB63:
	call	_Unwind_Resume
	nop
.LEHE63:
.L235:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3844:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3844-.LLSDACSB3844
.LLSDACSB3844:
	.uleb128 .LEHB62-.LFB3844
	.uleb128 .LEHE62-.LEHB62
	.uleb128 .L234-.LFB3844
	.uleb128 0
	.uleb128 .LEHB63-.LFB3844
	.uleb128 .LEHE63-.LEHB63
	.uleb128 0
	.uleb128 0
.LLSDACSE3844:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19]):
.LFB3847:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB64:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE64:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L239
.L238:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB65:
	call	_Unwind_Resume
	nop
.LEHE65:
.L239:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3847:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3847-.LLSDACSB3847
.LLSDACSB3847:
	.uleb128 .LEHB64-.LFB3847
	.uleb128 .LEHE64-.LEHB64
	.uleb128 .L238-.LFB3847
	.uleb128 0
	.uleb128 .LEHB65-.LFB3847
	.uleb128 .LEHE65-.LEHB65
	.uleb128 0
	.uleb128 0
.LLSDACSE3847:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35]):
.LFB3850:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB66:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE66:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L243
.L242:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB67:
	call	_Unwind_Resume
	nop
.LEHE67:
.L243:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3850:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3850-.LLSDACSB3850
.LLSDACSB3850:
	.uleb128 .LEHB66-.LFB3850
	.uleb128 .LEHE66-.LEHB66
	.uleb128 .L242-.LFB3850
	.uleb128 0
	.uleb128 .LEHB67-.LFB3850
	.uleb128 .LEHE67-.LEHB67
	.uleb128 0
	.uleb128 0
.LLSDACSE3850:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35]):
.LFB3853:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB68:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE68:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L247
.L246:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB69:
	call	_Unwind_Resume
	nop
.LEHE69:
.L247:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3853:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3853-.LLSDACSB3853
.LLSDACSB3853:
	.uleb128 .LEHB68-.LFB3853
	.uleb128 .LEHE68-.LEHB68
	.uleb128 .L246-.LFB3853
	.uleb128 0
	.uleb128 .LEHB69-.LFB3853
	.uleb128 .LEHE69-.LEHB69
	.uleb128 0
	.uleb128 0
.LLSDACSE3853:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35]):
.LFB3856:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB70:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE70:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L251
.L250:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB71:
	call	_Unwind_Resume
	nop
.LEHE71:
.L251:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3856:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3856-.LLSDACSB3856
.LLSDACSB3856:
	.uleb128 .LEHB70-.LFB3856
	.uleb128 .LEHE70-.LEHB70
	.uleb128 .L250-.LFB3856
	.uleb128 0
	.uleb128 .LEHB71-.LFB3856
	.uleb128 .LEHE71-.LEHB71
	.uleb128 0
	.uleb128 0
.LLSDACSE3856:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35]):
.LFB3859:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB72:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE72:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L255
.L254:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB73:
	call	_Unwind_Resume
	nop
.LEHE73:
.L255:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3859:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3859-.LLSDACSB3859
.LLSDACSB3859:
	.uleb128 .LEHB72-.LFB3859
	.uleb128 .LEHE72-.LEHB72
	.uleb128 .L254-.LFB3859
	.uleb128 0
	.uleb128 .LEHB73-.LFB3859
	.uleb128 .LEHE73-.LEHB73
	.uleb128 0
	.uleb128 0
.LLSDACSE3859:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19]):
.LFB3862:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB74:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE74:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L259
.L258:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB75:
	call	_Unwind_Resume
	nop
.LEHE75:
.L259:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3862:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3862-.LLSDACSB3862
.LLSDACSB3862:
	.uleb128 .LEHB74-.LFB3862
	.uleb128 .LEHE74-.LEHB74
	.uleb128 .L258-.LFB3862
	.uleb128 0
	.uleb128 .LEHB75-.LFB3862
	.uleb128 .LEHE75-.LEHB75
	.uleb128 0
	.uleb128 0
.LLSDACSE3862:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19]):
.LFB3865:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB76:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE76:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L263
.L262:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB77:
	call	_Unwind_Resume
	nop
.LEHE77:
.L263:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3865:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3865-.LLSDACSB3865
.LLSDACSB3865:
	.uleb128 .LEHB76-.LFB3865
	.uleb128 .LEHE76-.LEHB76
	.uleb128 .L262-.LFB3865
	.uleb128 0
	.uleb128 .LEHB77-.LFB3865
	.uleb128 .LEHE77-.LEHB77
	.uleb128 0
	.uleb128 0
.LLSDACSE3865:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29]):
.LFB3868:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB78:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE78:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L267
.L266:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB79:
	call	_Unwind_Resume
	nop
.LEHE79:
.L267:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3868:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3868-.LLSDACSB3868
.LLSDACSB3868:
	.uleb128 .LEHB78-.LFB3868
	.uleb128 .LEHE78-.LEHB78
	.uleb128 .L266-.LFB3868
	.uleb128 0
	.uleb128 .LEHB79-.LFB3868
	.uleb128 .LEHE79-.LEHB79
	.uleb128 0
	.uleb128 0
.LLSDACSE3868:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29]):
.LFB3871:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB80:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE80:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L271
.L270:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB81:
	call	_Unwind_Resume
	nop
.LEHE81:
.L271:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3871:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3871-.LLSDACSB3871
.LLSDACSB3871:
	.uleb128 .LEHB80-.LFB3871
	.uleb128 .LEHE80-.LEHB80
	.uleb128 .L270-.LFB3871
	.uleb128 0
	.uleb128 .LEHB81-.LFB3871
	.uleb128 .LEHE81-.LEHB81
	.uleb128 0
	.uleb128 0
.LLSDACSE3871:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19]):
.LFB3874:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB82:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE82:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L275
.L274:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB83:
	call	_Unwind_Resume
	nop
.LEHE83:
.L275:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3874:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3874-.LLSDACSB3874
.LLSDACSB3874:
	.uleb128 .LEHB82-.LFB3874
	.uleb128 .LEHE82-.LEHB82
	.uleb128 .L274-.LFB3874
	.uleb128 0
	.uleb128 .LEHB83-.LFB3874
	.uleb128 .LEHE83-.LEHB83
	.uleb128 0
	.uleb128 0
.LLSDACSE3874:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29]):
.LFB3877:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB84:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE84:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L279
.L278:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB85:
	call	_Unwind_Resume
	nop
.LEHE85:
.L279:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA3877:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3877-.LLSDACSB3877
.LLSDACSB3877:
	.uleb128 .LEHB84-.LFB3877
	.uleb128 .LEHE84-.LEHB84
	.uleb128 .L278-.LFB3877
	.uleb128 0
	.uleb128 .LEHB85-.LFB3877
	.uleb128 .LEHE85-.LEHB85
	.uleb128 0
	.uleb128 0
.LLSDACSE3877:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29])
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list():
.LFB3881:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	main::{lambda()#44}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44}::operator()() const
main::{lambda()#44}::operator()() const:
.LFB3882:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#45}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45}::operator()() const
main::{lambda()#45}::operator()() const:
.LFB3885:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	%eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#46}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46}::operator()() const
main::{lambda()#46}::operator()() const:
.LFB3888:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$2, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#47}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47}::operator()() const
main::{lambda()#47}::operator()() const:
.LFB3891:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$3, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#48}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48}::operator()() const
main::{lambda()#48}::operator()() const:
.LFB3894:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$4, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#49}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49}::operator()() const
main::{lambda()#49}::operator()() const:
.LFB3897:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$5, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#50}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50}::operator()() const
main::{lambda()#50}::operator()() const:
.LFB3900:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$6, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#51}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51}::operator()() const
main::{lambda()#51}::operator()() const:
.LFB3903:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$7, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#52}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52}::operator()() const
main::{lambda()#52}::operator()() const:
.LFB3906:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$8, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#53}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53}::operator()() const
main::{lambda()#53}::operator()() const:
.LFB3909:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$9, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#54}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54}::operator()() const
main::{lambda()#54}::operator()() const:
.LFB3912:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$10, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#55}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55}::operator()() const
main::{lambda()#55}::operator()() const:
.LFB3915:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$11, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#56}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56}::operator()() const
main::{lambda()#56}::operator()() const:
.LFB3918:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$12, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#57}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57}::operator()() const
main::{lambda()#57}::operator()() const:
.LFB3921:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$13, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#58}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58}::operator()() const
main::{lambda()#58}::operator()() const:
.LFB3924:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$14, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#59}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59}::operator()() const
main::{lambda()#59}::operator()() const:
.LFB3927:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$15, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#60}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60}::operator()() const
main::{lambda()#60}::operator()() const:
.LFB3930:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$16, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#61}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61}::operator()() const
main::{lambda()#61}::operator()() const:
.LFB3933:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$17, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#62}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62}::operator()() const
main::{lambda()#62}::operator()() const:
.LFB3936:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$18, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#63}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63}::operator()() const
main::{lambda()#63}::operator()() const:
.LFB3939:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$19, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#64}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64}::operator()() const
main::{lambda()#64}::operator()() const:
.LFB3942:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$20, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#65}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65}::operator()() const
main::{lambda()#65}::operator()() const:
.LFB3945:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$21, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#66}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66}::operator()() const
main::{lambda()#66}::operator()() const:
.LFB3948:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$22, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#67}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67}::operator()() const
main::{lambda()#67}::operator()() const:
.LFB3951:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$23, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#68}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68}::operator()() const
main::{lambda()#68}::operator()() const:
.LFB3954:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$24, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#69}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69}::operator()() const
main::{lambda()#69}::operator()() const:
.LFB3957:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$25, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#70}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70}::operator()() const
main::{lambda()#70}::operator()() const:
.LFB3960:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$26, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#71}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71}::operator()() const
main::{lambda()#71}::operator()() const:
.LFB3963:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$27, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#72}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72}::operator()() const
main::{lambda()#72}::operator()() const:
.LFB3966:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$28, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#73}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73}::operator()() const
main::{lambda()#73}::operator()() const:
.LFB3969:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$29, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#74}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74}::operator()() const
main::{lambda()#74}::operator()() const:
.LFB3972:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	sarl	$30, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#75}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75}::operator()() const
main::{lambda()#75}::operator()() const:
.LFB3975:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_model(%rip), %rax
	movl	12(%rax), %eax
	shrl	$31, %eax
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#76}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76}::operator()() const
main::{lambda()#76}::operator()() const:
.LFB3978:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_features2(%rip), %rax
	movl	(%rax), %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#77}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77}::operator()() const
main::{lambda()#77}::operator()() const:
.LFB3981:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_features2(%rip), %rax
	movl	(%rax), %eax
	sarl	%eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#78}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78}::operator()() const
main::{lambda()#78}::operator()() const:
.LFB3984:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_features2(%rip), %rax
	movl	(%rax), %eax
	sarl	$2, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#79}::operator()() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79}::operator()() const
main::{lambda()#79}::operator()() const:
.LFB3987:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	.refptr.__cpu_features2(%rip), %rax
	movl	(%rax), %eax
	sarl	$3, %eax
	andl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17]):
.LFB4135:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB86:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE86:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L356
.L355:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB87:
	call	_Unwind_Resume
	nop
.LEHE87:
.L356:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4135:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4135-.LLSDACSB4135
.LLSDACSB4135:
	.uleb128 .LEHB86-.LFB4135
	.uleb128 .LEHE86-.LEHB86
	.uleb128 .L355-.LFB4135
	.uleb128 0
	.uleb128 .LEHB87-.LFB4135
	.uleb128 .LEHE87-.LEHB87
	.uleb128 0
	.uleb128 0
.LLSDACSE4135:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17]):
.LFB4138:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB88:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE88:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L360
.L359:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB89:
	call	_Unwind_Resume
	nop
.LEHE89:
.L360:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4138:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4138-.LLSDACSB4138
.LLSDACSB4138:
	.uleb128 .LEHB88-.LFB4138
	.uleb128 .LEHE88-.LEHB88
	.uleb128 .L359-.LFB4138
	.uleb128 0
	.uleb128 .LEHB89-.LFB4138
	.uleb128 .LEHE89-.LEHB89
	.uleb128 0
	.uleb128 0
.LLSDACSE4138:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19]):
.LFB4141:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB90:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE90:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L364
.L363:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB91:
	call	_Unwind_Resume
	nop
.LEHE91:
.L364:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4141:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4141-.LLSDACSB4141
.LLSDACSB4141:
	.uleb128 .LEHB90-.LFB4141
	.uleb128 .LEHE90-.LEHB90
	.uleb128 .L363-.LFB4141
	.uleb128 0
	.uleb128 .LEHB91-.LFB4141
	.uleb128 .LEHE91-.LEHB91
	.uleb128 0
	.uleb128 0
.LLSDACSE4141:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17]):
.LFB4144:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB92:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE92:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L368
.L367:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB93:
	call	_Unwind_Resume
	nop
.LEHE93:
.L368:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4144:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4144-.LLSDACSB4144
.LLSDACSB4144:
	.uleb128 .LEHB92-.LFB4144
	.uleb128 .LEHE92-.LEHB92
	.uleb128 .L367-.LFB4144
	.uleb128 0
	.uleb128 .LEHB93-.LFB4144
	.uleb128 .LEHE93-.LEHB93
	.uleb128 0
	.uleb128 0
.LLSDACSE4144:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18]):
.LFB4147:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB94:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE94:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L372
.L371:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB95:
	call	_Unwind_Resume
	nop
.LEHE95:
.L372:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4147:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4147-.LLSDACSB4147
.LLSDACSB4147:
	.uleb128 .LEHB94-.LFB4147
	.uleb128 .LEHE94-.LEHB94
	.uleb128 .L371-.LFB4147
	.uleb128 0
	.uleb128 .LEHB95-.LFB4147
	.uleb128 .LEHE95-.LEHB95
	.uleb128 0
	.uleb128 0
.LLSDACSE4147:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18]):
.LFB4150:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB96:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE96:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L376
.L375:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB97:
	call	_Unwind_Resume
	nop
.LEHE97:
.L376:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4150:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4150-.LLSDACSB4150
.LLSDACSB4150:
	.uleb128 .LEHB96-.LFB4150
	.uleb128 .LEHE96-.LEHB96
	.uleb128 .L375-.LFB4150
	.uleb128 0
	.uleb128 .LEHB97-.LFB4150
	.uleb128 .LEHE97-.LEHB97
	.uleb128 0
	.uleb128 0
.LLSDACSE4150:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19]):
.LFB4153:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB98:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE98:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L380
.L379:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB99:
	call	_Unwind_Resume
	nop
.LEHE99:
.L380:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4153:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4153-.LLSDACSB4153
.LLSDACSB4153:
	.uleb128 .LEHB98-.LFB4153
	.uleb128 .LEHE98-.LEHB98
	.uleb128 .L379-.LFB4153
	.uleb128 0
	.uleb128 .LEHB99-.LFB4153
	.uleb128 .LEHE99-.LEHB99
	.uleb128 0
	.uleb128 0
.LLSDACSE4153:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20]):
.LFB4156:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB100:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE100:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L384
.L383:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB101:
	call	_Unwind_Resume
	nop
.LEHE101:
.L384:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4156:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4156-.LLSDACSB4156
.LLSDACSB4156:
	.uleb128 .LEHB100-.LFB4156
	.uleb128 .LEHE100-.LEHB100
	.uleb128 .L383-.LFB4156
	.uleb128 0
	.uleb128 .LEHB101-.LFB4156
	.uleb128 .LEHE101-.LEHB101
	.uleb128 0
	.uleb128 0
.LLSDACSE4156:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20]):
.LFB4159:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB102:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE102:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L388
.L387:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB103:
	call	_Unwind_Resume
	nop
.LEHE103:
.L388:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4159:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4159-.LLSDACSB4159
.LLSDACSB4159:
	.uleb128 .LEHB102-.LFB4159
	.uleb128 .LEHE102-.LEHB102
	.uleb128 .L387-.LFB4159
	.uleb128 0
	.uleb128 .LEHB103-.LFB4159
	.uleb128 .LEHE103-.LEHB103
	.uleb128 0
	.uleb128 0
.LLSDACSE4159:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17]):
.LFB4162:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB104:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE104:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L392
.L391:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB105:
	call	_Unwind_Resume
	nop
.LEHE105:
.L392:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4162:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4162-.LLSDACSB4162
.LLSDACSB4162:
	.uleb128 .LEHB104-.LFB4162
	.uleb128 .LEHE104-.LEHB104
	.uleb128 .L391-.LFB4162
	.uleb128 0
	.uleb128 .LEHB105-.LFB4162
	.uleb128 .LEHE105-.LEHB105
	.uleb128 0
	.uleb128 0
.LLSDACSE4162:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18]):
.LFB4165:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB106:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE106:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L396
.L395:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB107:
	call	_Unwind_Resume
	nop
.LEHE107:
.L396:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4165:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4165-.LLSDACSB4165
.LLSDACSB4165:
	.uleb128 .LEHB106-.LFB4165
	.uleb128 .LEHE106-.LEHB106
	.uleb128 .L395-.LFB4165
	.uleb128 0
	.uleb128 .LEHB107-.LFB4165
	.uleb128 .LEHE107-.LEHB107
	.uleb128 0
	.uleb128 0
.LLSDACSE4165:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19]):
.LFB4168:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB108:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE108:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L400
.L399:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB109:
	call	_Unwind_Resume
	nop
.LEHE109:
.L400:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4168:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4168-.LLSDACSB4168
.LLSDACSB4168:
	.uleb128 .LEHB108-.LFB4168
	.uleb128 .LEHE108-.LEHB108
	.uleb128 .L399-.LFB4168
	.uleb128 0
	.uleb128 .LEHB109-.LFB4168
	.uleb128 .LEHE109-.LEHB109
	.uleb128 0
	.uleb128 0
.LLSDACSE4168:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18]):
.LFB4171:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB110:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE110:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L404
.L403:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB111:
	call	_Unwind_Resume
	nop
.LEHE111:
.L404:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4171:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4171-.LLSDACSB4171
.LLSDACSB4171:
	.uleb128 .LEHB110-.LFB4171
	.uleb128 .LEHE110-.LEHB110
	.uleb128 .L403-.LFB4171
	.uleb128 0
	.uleb128 .LEHB111-.LFB4171
	.uleb128 .LEHE111-.LEHB111
	.uleb128 0
	.uleb128 0
.LLSDACSE4171:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17]):
.LFB4174:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB112:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE112:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L408
.L407:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB113:
	call	_Unwind_Resume
	nop
.LEHE113:
.L408:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4174:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4174-.LLSDACSB4174
.LLSDACSB4174:
	.uleb128 .LEHB112-.LFB4174
	.uleb128 .LEHE112-.LEHB112
	.uleb128 .L407-.LFB4174
	.uleb128 0
	.uleb128 .LEHB113-.LFB4174
	.uleb128 .LEHE113-.LEHB113
	.uleb128 0
	.uleb128 0
.LLSDACSE4174:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17]):
.LFB4177:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB114:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE114:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L412
.L411:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB115:
	call	_Unwind_Resume
	nop
.LEHE115:
.L412:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4177:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4177-.LLSDACSB4177
.LLSDACSB4177:
	.uleb128 .LEHB114-.LFB4177
	.uleb128 .LEHE114-.LEHB114
	.uleb128 .L411-.LFB4177
	.uleb128 0
	.uleb128 .LEHB115-.LFB4177
	.uleb128 .LEHE115-.LEHB115
	.uleb128 0
	.uleb128 0
.LLSDACSE4177:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21]):
.LFB4180:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB116:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE116:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L416
.L415:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB117:
	call	_Unwind_Resume
	nop
.LEHE117:
.L416:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4180:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4180-.LLSDACSB4180
.LLSDACSB4180:
	.uleb128 .LEHB116-.LFB4180
	.uleb128 .LEHE116-.LEHB116
	.uleb128 .L415-.LFB4180
	.uleb128 0
	.uleb128 .LEHB117-.LFB4180
	.uleb128 .LEHE117-.LEHB117
	.uleb128 0
	.uleb128 0
.LLSDACSE4180:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17]):
.LFB4183:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB118:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE118:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L420
.L419:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB119:
	call	_Unwind_Resume
	nop
.LEHE119:
.L420:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4183:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4183-.LLSDACSB4183
.LLSDACSB4183:
	.uleb128 .LEHB118-.LFB4183
	.uleb128 .LEHE118-.LEHB118
	.uleb128 .L419-.LFB4183
	.uleb128 0
	.uleb128 .LEHB119-.LFB4183
	.uleb128 .LEHE119-.LEHB119
	.uleb128 0
	.uleb128 0
.LLSDACSE4183:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18]):
.LFB4186:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB120:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE120:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L424
.L423:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB121:
	call	_Unwind_Resume
	nop
.LEHE121:
.L424:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4186:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4186-.LLSDACSB4186
.LLSDACSB4186:
	.uleb128 .LEHB120-.LFB4186
	.uleb128 .LEHE120-.LEHB120
	.uleb128 .L423-.LFB4186
	.uleb128 0
	.uleb128 .LEHB121-.LFB4186
	.uleb128 .LEHE121-.LEHB121
	.uleb128 0
	.uleb128 0
.LLSDACSE4186:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17]):
.LFB4189:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB122:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE122:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L428
.L427:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB123:
	call	_Unwind_Resume
	nop
.LEHE123:
.L428:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4189:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4189-.LLSDACSB4189
.LLSDACSB4189:
	.uleb128 .LEHB122-.LFB4189
	.uleb128 .LEHE122-.LEHB122
	.uleb128 .L427-.LFB4189
	.uleb128 0
	.uleb128 .LEHB123-.LFB4189
	.uleb128 .LEHE123-.LEHB123
	.uleb128 0
	.uleb128 0
.LLSDACSE4189:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20]):
.LFB4192:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB124:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE124:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L432
.L431:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB125:
	call	_Unwind_Resume
	nop
.LEHE125:
.L432:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4192:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4192-.LLSDACSB4192
.LLSDACSB4192:
	.uleb128 .LEHB124-.LFB4192
	.uleb128 .LEHE124-.LEHB124
	.uleb128 .L431-.LFB4192
	.uleb128 0
	.uleb128 .LEHB125-.LFB4192
	.uleb128 .LEHE125-.LEHB125
	.uleb128 0
	.uleb128 0
.LLSDACSE4192:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22]):
.LFB4195:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB126:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE126:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L436
.L435:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB127:
	call	_Unwind_Resume
	nop
.LEHE127:
.L436:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4195:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4195-.LLSDACSB4195
.LLSDACSB4195:
	.uleb128 .LEHB126-.LFB4195
	.uleb128 .LEHE126-.LEHB126
	.uleb128 .L435-.LFB4195
	.uleb128 0
	.uleb128 .LEHB127-.LFB4195
	.uleb128 .LEHE127-.LEHB127
	.uleb128 0
	.uleb128 0
.LLSDACSE4195:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22]):
.LFB4198:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB128:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE128:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L440
.L439:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB129:
	call	_Unwind_Resume
	nop
.LEHE129:
.L440:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4198:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4198-.LLSDACSB4198
.LLSDACSB4198:
	.uleb128 .LEHB128-.LFB4198
	.uleb128 .LEHE128-.LEHB128
	.uleb128 .L439-.LFB4198
	.uleb128 0
	.uleb128 .LEHB129-.LFB4198
	.uleb128 .LEHE129-.LEHB129
	.uleb128 0
	.uleb128 0
.LLSDACSE4198:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22]):
.LFB4201:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB130:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE130:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L444
.L443:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB131:
	call	_Unwind_Resume
	nop
.LEHE131:
.L444:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4201:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4201-.LLSDACSB4201
.LLSDACSB4201:
	.uleb128 .LEHB130-.LFB4201
	.uleb128 .LEHE130-.LEHB130
	.uleb128 .L443-.LFB4201
	.uleb128 0
	.uleb128 .LEHB131-.LFB4201
	.uleb128 .LEHE131-.LEHB131
	.uleb128 0
	.uleb128 0
.LLSDACSE4201:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22]):
.LFB4204:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB132:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE132:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L448
.L447:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB133:
	call	_Unwind_Resume
	nop
.LEHE133:
.L448:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4204:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4204-.LLSDACSB4204
.LLSDACSB4204:
	.uleb128 .LEHB132-.LFB4204
	.uleb128 .LEHE132-.LEHB132
	.uleb128 .L447-.LFB4204
	.uleb128 0
	.uleb128 .LEHB133-.LFB4204
	.uleb128 .LEHE133-.LEHB133
	.uleb128 0
	.uleb128 0
.LLSDACSE4204:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22]):
.LFB4207:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB134:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE134:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L452
.L451:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB135:
	call	_Unwind_Resume
	nop
.LEHE135:
.L452:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4207:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4207-.LLSDACSB4207
.LLSDACSB4207:
	.uleb128 .LEHB134-.LFB4207
	.uleb128 .LEHE134-.LEHB134
	.uleb128 .L451-.LFB4207
	.uleb128 0
	.uleb128 .LEHB135-.LFB4207
	.uleb128 .LEHE135-.LEHB135
	.uleb128 0
	.uleb128 0
.LLSDACSE4207:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22]):
.LFB4210:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB136:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE136:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L456
.L455:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB137:
	call	_Unwind_Resume
	nop
.LEHE137:
.L456:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4210:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4210-.LLSDACSB4210
.LLSDACSB4210:
	.uleb128 .LEHB136-.LFB4210
	.uleb128 .LEHE136-.LEHB136
	.uleb128 .L455-.LFB4210
	.uleb128 0
	.uleb128 .LEHB137-.LFB4210
	.uleb128 .LEHE137-.LEHB137
	.uleb128 0
	.uleb128 0
.LLSDACSE4210:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24]):
.LFB4213:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB138:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE138:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L460
.L459:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB139:
	call	_Unwind_Resume
	nop
.LEHE139:
.L460:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4213:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4213-.LLSDACSB4213
.LLSDACSB4213:
	.uleb128 .LEHB138-.LFB4213
	.uleb128 .LEHE138-.LEHB138
	.uleb128 .L459-.LFB4213
	.uleb128 0
	.uleb128 .LEHB139-.LFB4213
	.uleb128 .LEHE139-.LEHB139
	.uleb128 0
	.uleb128 0
.LLSDACSE4213:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24]):
.LFB4216:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB140:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE140:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L464
.L463:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB141:
	call	_Unwind_Resume
	nop
.LEHE141:
.L464:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4216:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4216-.LLSDACSB4216
.LLSDACSB4216:
	.uleb128 .LEHB140-.LFB4216
	.uleb128 .LEHE140-.LEHB140
	.uleb128 .L463-.LFB4216
	.uleb128 0
	.uleb128 .LEHB141-.LFB4216
	.uleb128 .LEHE141-.LEHB141
	.uleb128 0
	.uleb128 0
.LLSDACSE4216:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26]):
.LFB4219:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB142:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE142:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L468
.L467:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB143:
	call	_Unwind_Resume
	nop
.LEHE143:
.L468:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4219:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4219-.LLSDACSB4219
.LLSDACSB4219:
	.uleb128 .LEHB142-.LFB4219
	.uleb128 .LEHE142-.LEHB142
	.uleb128 .L467-.LFB4219
	.uleb128 0
	.uleb128 .LEHB143-.LFB4219
	.uleb128 .LEHE143-.LEHB143
	.uleb128 0
	.uleb128 0
.LLSDACSE4219:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26]):
.LFB4222:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB144:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE144:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L472
.L471:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB145:
	call	_Unwind_Resume
	nop
.LEHE145:
.L472:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4222:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4222-.LLSDACSB4222
.LLSDACSB4222:
	.uleb128 .LEHB144-.LFB4222
	.uleb128 .LEHE144-.LEHB144
	.uleb128 .L471-.LFB4222
	.uleb128 0
	.uleb128 .LEHB145-.LFB4222
	.uleb128 .LEHE145-.LEHB145
	.uleb128 0
	.uleb128 0
.LLSDACSE4222:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29]):
.LFB4225:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB146:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE146:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L476
.L475:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB147:
	call	_Unwind_Resume
	nop
.LEHE147:
.L476:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4225:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4225-.LLSDACSB4225
.LLSDACSB4225:
	.uleb128 .LEHB146-.LFB4225
	.uleb128 .LEHE146-.LEHB146
	.uleb128 .L475-.LFB4225
	.uleb128 0
	.uleb128 .LEHB147-.LFB4225
	.uleb128 .LEHE147-.LEHB147
	.uleb128 0
	.uleb128 0
.LLSDACSE4225:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25]):
.LFB4228:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [25]>(std::remove_reference<char const (&) [25]>::type&)) [25]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB148:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE148:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L480
.L479:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB149:
	call	_Unwind_Resume
	nop
.LEHE149:
.L480:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4228:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4228-.LLSDACSB4228
.LLSDACSB4228:
	.uleb128 .LEHB148-.LFB4228
	.uleb128 .LEHE148-.LEHB148
	.uleb128 .L479-.LFB4228
	.uleb128 0
	.uleb128 .LEHB149-.LFB4228
	.uleb128 .LEHE149-.LEHB149
	.uleb128 0
	.uleb128 0
.LLSDACSE4228:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18]):
.LFB4231:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB150:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE150:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L484
.L483:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB151:
	call	_Unwind_Resume
	nop
.LEHE151:
.L484:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4231:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4231-.LLSDACSB4231
.LLSDACSB4231:
	.uleb128 .LEHB150-.LFB4231
	.uleb128 .LEHE150-.LEHB150
	.uleb128 .L483-.LFB4231
	.uleb128 0
	.uleb128 .LEHB151-.LFB4231
	.uleb128 .LEHE151-.LEHB151
	.uleb128 0
	.uleb128 0
.LLSDACSE4231:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24]):
.LFB4234:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB152:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE152:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L488
.L487:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB153:
	call	_Unwind_Resume
	nop
.LEHE153:
.L488:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4234:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4234-.LLSDACSB4234
.LLSDACSB4234:
	.uleb128 .LEHB152-.LFB4234
	.uleb128 .LEHE152-.LEHB152
	.uleb128 .L487-.LFB4234
	.uleb128 0
	.uleb128 .LEHB153-.LFB4234
	.uleb128 .LEHE153-.LEHB153
	.uleb128 0
	.uleb128 0
.LLSDACSE4234:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24]):
.LFB4237:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB154:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE154:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L492
.L491:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB155:
	call	_Unwind_Resume
	nop
.LEHE155:
.L492:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4237:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4237-.LLSDACSB4237
.LLSDACSB4237:
	.uleb128 .LEHB154-.LFB4237
	.uleb128 .LEHE154-.LEHB154
	.uleb128 .L491-.LFB4237
	.uleb128 0
	.uleb128 .LEHB155-.LFB4237
	.uleb128 .LEHE155-.LEHB155
	.uleb128 0
	.uleb128 0
.LLSDACSE4237:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24])
	.align 2
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26])
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26]):
.LFB4240:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$56, %rsp
	.seh_stackalloc	56
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&)
	movq	32(%rbp), %rax
	leaq	32(%rax), %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::allocator()
	movq	48(%rbp), %rax
	movq	%rax, %rcx
	call	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	leaq	-1(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
.LEHB156:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
.LEHE156:
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	jmp	.L496
.L495:
	movq	%rax, %rbx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB157:
	call	_Unwind_Resume
	nop
.LEHE157:
.L496:
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4240:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4240-.LLSDACSB4240
.LLSDACSB4240:
	.uleb128 .LEHB156-.LFB4240
	.uleb128 .LEHE156-.LEHB156
	.uleb128 .L495-.LFB4240
	.uleb128 0
	.uleb128 .LEHB157-.LFB4240
	.uleb128 .LEHE157-.LEHB157
	.uleb128 0
	.uleb128 0
.LLSDACSE4240:
	.text
	.seh_endproc
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26]);	.scl	3;	.type	32;	.endef
	.set	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26]),std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26])
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
.LC0:
	.ascii "AMD CPU\0"
.LC1:
	.ascii "Intel CPU\0"
.LC2:
	.ascii "Intel Atom CPU\0"
.LC3:
	.ascii "Intel Silvermont CPU\0"
.LC4:
	.ascii "Intel Core 2 CPU\0"
.LC5:
	.ascii "Intel Core i7 CPU\0"
.LC6:
	.ascii "Intel Core i7 Nehalem CPU\0"
.LC7:
	.ascii "Intel Core i7 Westmere CPU\0"
	.align 8
.LC8:
	.ascii "Intel Core i7 Sandy Bridge CPU\0"
.LC9:
	.ascii "Intel Core i7 Ivy Bridge CPU\0"
.LC10:
	.ascii "Intel Core i7 Haswell CPU\0"
.LC11:
	.ascii "Intel Core i7 Broadwell CPU\0"
.LC12:
	.ascii "Intel Core i7 Skylake CPU\0"
	.align 8
.LC13:
	.ascii "Intel Core i7 Skylake AVX512 CPU\0"
.LC14:
	.ascii "Intel Core i7 Cannon Lake CPU\0"
	.align 8
.LC15:
	.ascii "Intel Core i7 Ice Lake Client CPU\0"
	.align 8
.LC16:
	.ascii "Intel Core i7 Ice Lake Server CPU\0"
.LC17:
	.ascii "Intel Core i7 Cascadelake CPU\0"
.LC18:
	.ascii "Intel Core i7 Tigerlake CPU\0"
.LC19:
	.ascii "Intel Core i7 Cooperlake CPU\0"
.LC20:
	.ascii "Intel Atom Bonnell CPU\0"
.LC21:
	.ascii "Intel Atom Silvermont CPU\0"
.LC22:
	.ascii "Intel Atom Goldmont CPU\0"
.LC23:
	.ascii "Intel Atom Goldmont Plus CPU\0"
.LC24:
	.ascii "Intel Atom Tremont CPU\0"
.LC25:
	.ascii "Intel Knights Landing CPU\0"
.LC26:
	.ascii "Intel Knights Mill CPU\0"
.LC27:
	.ascii "AMD Family 10h CPU\0"
.LC28:
	.ascii "AMD Family 10h Barcelona CPU\0"
.LC29:
	.ascii "AMD Family 10h Shanghai CPU\0"
.LC30:
	.ascii "AMD Family 10h Istanbul CPU\0"
.LC31:
	.ascii "AMD Family 14h CPU\0"
.LC32:
	.ascii "AMD Family 15h CPU\0"
	.align 8
.LC33:
	.ascii "AMD Family 15h Bulldozer version 1\0"
	.align 8
.LC34:
	.ascii "AMD Family 15h Bulldozer version 2\0"
	.align 8
.LC35:
	.ascii "AMD Family 15h Bulldozer version 3\0"
	.align 8
.LC36:
	.ascii "AMD Family 15h Bulldozer version 4\0"
.LC37:
	.ascii "AMD Family 16h CPU\0"
.LC38:
	.ascii "AMD Family 17h CPU\0"
.LC39:
	.ascii "AMD Family 17h Zen version 1\0"
.LC40:
	.ascii "AMD Family 17h Zen version 2\0"
.LC41:
	.ascii "AMD Family 19h CPU\0"
.LC42:
	.ascii "AMD Family 19h Zen version 3\0"
.LC43:
	.ascii "CMOV instruction\0"
.LC44:
	.ascii "MMX instructions\0"
.LC45:
	.ascii "POPCNT instruction\0"
.LC46:
	.ascii "SSE instructions\0"
.LC47:
	.ascii "SSE2 instructions\0"
.LC48:
	.ascii "SSE3 instructions\0"
.LC49:
	.ascii "SSSE3 instructions\0"
.LC50:
	.ascii "SSE4.1 instructions\0"
.LC51:
	.ascii "SSE4.2 instructions\0"
.LC52:
	.ascii "AVX instructions\0"
.LC53:
	.ascii "AVX2 instructions\0"
.LC54:
	.ascii "SSE4A instructions\0"
.LC55:
	.ascii "FMA4 instructions\0"
.LC56:
	.ascii "XOP instructions\0"
.LC57:
	.ascii "FMA instructions\0"
.LC58:
	.ascii "AVX512F instructions\0"
.LC59:
	.ascii "BMI instructions\0"
.LC60:
	.ascii "BMI2 instructions\0"
.LC61:
	.ascii "AES instructions\0"
.LC62:
	.ascii "PCLMUL instructions\0"
.LC63:
	.ascii "AVX512VL instructions\0"
.LC64:
	.ascii "AVX512BW instructions\0"
.LC65:
	.ascii "AVX512DQ instructions\0"
.LC66:
	.ascii "AVX512CD instructions\0"
.LC67:
	.ascii "AVX512ER instructions\0"
.LC68:
	.ascii "AVX512PF instructions\0"
.LC69:
	.ascii "AVX512VBMI instructions\0"
.LC70:
	.ascii "AVX512IFMA instructions\0"
.LC71:
	.ascii "AVX5124VNNIW instructions\0"
.LC72:
	.ascii "AVX5124FMAPS instructions\0"
.LC73:
	.ascii "AVX512VPOPCNTDQ instructions\0"
.LC74:
	.ascii "AVX512VBMI2 instructions\0"
.LC75:
	.ascii "GFNI instructions\0"
.LC76:
	.ascii "VPCLMULQDQ instructions\0"
.LC77:
	.ascii "AVX512VNNI instructions\0"
.LC78:
	.ascii "AVX512BITALG instructions\0"
.LC79:
	.ascii "Exception: \0"
.LC80:
	.ascii "Error: exception\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
.LFB3435:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%r15
	.seh_pushreg	%r15
	pushq	%r14
	.seh_pushreg	%r14
	pushq	%r13
	.seh_pushreg	%r13
	pushq	%r12
	.seh_pushreg	%r12
	pushq	%rdi
	.seh_pushreg	%rdi
	pushq	%rsi
	.seh_pushreg	%rsi
	pushq	%rbx
	.seh_pushreg	%rbx
	movl	$5368, %eax
	call	___chkstk_ms
	subq	%rax, %rsp
	.seh_stackalloc	5368
	leaq	128(%rsp), %rbp
	.seh_setframe	%rbp, 128
	.seh_endprologue
	movl	%ecx, 5312(%rbp)
	movq	%rdx, 5320(%rbp)
	call	__main
	call	__cpu_indicator_init
	leaq	16(%rbp), %rsi
	movl	$42, %ebx
	movq	%rsi, %rcx
	leaq	2772(%rbp), %rax
	leaq	.LC0(%rip), %r8
	movq	%rax, %rdx
.LEHB158:
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#1}, char const (&) [8], true>(main::{lambda()#1}&&, char const (&) [8])
	leaq	64(%rsi), %rdi
	subq	$1, %rbx
	leaq	2773(%rbp), %rax
	leaq	.LC1(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#2}, char const (&) [10], true>(main::{lambda()#2}&&, char const (&) [10])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2774(%rbp), %rax
	leaq	.LC2(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#3}, char const (&) [15], true>(main::{lambda()#3}&&, char const (&) [15])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2775(%rbp), %rax
	leaq	.LC3(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#4}, char const (&) [21], true>(main::{lambda()#4}&&, char const (&) [21])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2776(%rbp), %rax
	leaq	.LC4(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#5}, char const (&) [17], true>(main::{lambda()#5}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2777(%rbp), %rax
	leaq	.LC5(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#6}, char const (&) [18], true>(main::{lambda()#6}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2778(%rbp), %rax
	leaq	.LC6(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#7}, char const (&) [26], true>(main::{lambda()#7}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2779(%rbp), %rax
	leaq	.LC7(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#8}, char const (&) [27], true>(main::{lambda()#8}&&, char const (&) [27])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2780(%rbp), %rax
	leaq	.LC8(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#9}, char const (&) [31], true>(main::{lambda()#9}&&, char const (&) [31])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2781(%rbp), %rax
	leaq	.LC9(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#10}, char const (&) [29], true>(main::{lambda()#10}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2782(%rbp), %rax
	leaq	.LC10(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#11}, char const (&) [26], true>(main::{lambda()#11}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2783(%rbp), %rax
	leaq	.LC11(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#12}, char const (&) [28], true>(main::{lambda()#12}&&, char const (&) [28])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2784(%rbp), %rax
	leaq	.LC12(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#13}, char const (&) [26], true>(main::{lambda()#13}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2785(%rbp), %rax
	leaq	.LC13(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#14}, char const (&) [33], true>(main::{lambda()#14}&&, char const (&) [33])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2786(%rbp), %rax
	leaq	.LC14(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#15}, char const (&) [30], true>(main::{lambda()#15}&&, char const (&) [30])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2787(%rbp), %rax
	leaq	.LC15(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#16}, char const (&) [34], true>(main::{lambda()#16}&&, char const (&) [34])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2788(%rbp), %rax
	leaq	.LC16(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#17}, char const (&) [34], true>(main::{lambda()#17}&&, char const (&) [34])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2789(%rbp), %rax
	leaq	.LC17(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#18}, char const (&) [30], true>(main::{lambda()#18}&&, char const (&) [30])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2790(%rbp), %rax
	leaq	.LC18(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#19}, char const (&) [28], true>(main::{lambda()#19}&&, char const (&) [28])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2791(%rbp), %rax
	leaq	.LC19(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#20}, char const (&) [29], true>(main::{lambda()#20}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2792(%rbp), %rax
	leaq	.LC20(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#21}, char const (&) [23], true>(main::{lambda()#21}&&, char const (&) [23])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2793(%rbp), %rax
	leaq	.LC21(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#22}, char const (&) [26], true>(main::{lambda()#22}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2794(%rbp), %rax
	leaq	.LC22(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#23}, char const (&) [24], true>(main::{lambda()#23}&&, char const (&) [24])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2795(%rbp), %rax
	leaq	.LC23(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#24}, char const (&) [29], true>(main::{lambda()#24}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2796(%rbp), %rax
	leaq	.LC24(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#25}, char const (&) [23], true>(main::{lambda()#25}&&, char const (&) [23])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2797(%rbp), %rax
	leaq	.LC25(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#26}, char const (&) [26], true>(main::{lambda()#26}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2798(%rbp), %rax
	leaq	.LC26(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#27}, char const (&) [23], true>(main::{lambda()#27}&&, char const (&) [23])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2799(%rbp), %rax
	leaq	.LC27(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#28}, char const (&) [19], true>(main::{lambda()#28}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2800(%rbp), %rax
	leaq	.LC28(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#29}, char const (&) [29], true>(main::{lambda()#29}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2801(%rbp), %rax
	leaq	.LC29(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#30}, char const (&) [28], true>(main::{lambda()#30}&&, char const (&) [28])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2802(%rbp), %rax
	leaq	.LC30(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#31}, char const (&) [28], true>(main::{lambda()#31}&&, char const (&) [28])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2803(%rbp), %rax
	leaq	.LC31(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#32}, char const (&) [19], true>(main::{lambda()#32}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2804(%rbp), %rax
	leaq	.LC32(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#33}, char const (&) [19], true>(main::{lambda()#33}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2805(%rbp), %rax
	leaq	.LC33(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#34}, char const (&) [35], true>(main::{lambda()#34}&&, char const (&) [35])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2806(%rbp), %rax
	leaq	.LC34(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#35}, char const (&) [35], true>(main::{lambda()#35}&&, char const (&) [35])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2807(%rbp), %rax
	leaq	.LC35(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#36}, char const (&) [35], true>(main::{lambda()#36}&&, char const (&) [35])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2808(%rbp), %rax
	leaq	.LC36(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#37}, char const (&) [35], true>(main::{lambda()#37}&&, char const (&) [35])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2809(%rbp), %rax
	leaq	.LC37(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#38}, char const (&) [19], true>(main::{lambda()#38}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2810(%rbp), %rax
	leaq	.LC38(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#39}, char const (&) [19], true>(main::{lambda()#39}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2811(%rbp), %rax
	leaq	.LC39(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#40}, char const (&) [29], true>(main::{lambda()#40}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2812(%rbp), %rax
	leaq	.LC40(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#41}, char const (&) [29], true>(main::{lambda()#41}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	2813(%rbp), %rax
	leaq	.LC41(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#42}, char const (&) [19], true>(main::{lambda()#42}&&, char const (&) [19])
	leaq	64(%rdi), %rcx
	subq	$1, %rbx
	leaq	2814(%rbp), %rax
	leaq	.LC42(%rip), %r8
	movq	%rax, %rdx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#43}, char const (&) [29], true>(main::{lambda()#43}&&, char const (&) [29])
.LEHE158:
	movl	$42, %ebx
	leaq	16(%rbp), %rax
	movq	%rax, %r14
	movl	$43, %r15d
	leaq	2815(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator()
	movq	%r14, -96(%rbp)
	movq	%r15, -88(%rbp)
	leaq	2815(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	leaq	-16(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
.LEHB159:
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
.LEHE159:
	leaq	2815(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
	leaq	16(%rbp), %rbx
	addq	$2752, %rbx
.L499:
	leaq	16(%rbp), %rax
	cmpq	%rax, %rbx
	je	.L498
	subq	$64, %rbx
	movq	%rbx, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L499
.L498:
	leaq	2816(%rbp), %rsi
	movl	$35, %ebx
	movq	%rsi, %rcx
	leaq	5123(%rbp), %rax
	leaq	.LC43(%rip), %r8
	movq	%rax, %rdx
.LEHB160:
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#44}, char const (&) [17], true>(main::{lambda()#44}&&, char const (&) [17])
	leaq	64(%rsi), %rdi
	subq	$1, %rbx
	leaq	5124(%rbp), %rax
	leaq	.LC44(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#45}, char const (&) [17], true>(main::{lambda()#45}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5125(%rbp), %rax
	leaq	.LC45(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#46}, char const (&) [19], true>(main::{lambda()#46}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5126(%rbp), %rax
	leaq	.LC46(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#47}, char const (&) [17], true>(main::{lambda()#47}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5127(%rbp), %rax
	leaq	.LC47(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#48}, char const (&) [18], true>(main::{lambda()#48}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5128(%rbp), %rax
	leaq	.LC48(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#49}, char const (&) [18], true>(main::{lambda()#49}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5129(%rbp), %rax
	leaq	.LC49(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#50}, char const (&) [19], true>(main::{lambda()#50}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5130(%rbp), %rax
	leaq	.LC50(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#51}, char const (&) [20], true>(main::{lambda()#51}&&, char const (&) [20])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5131(%rbp), %rax
	leaq	.LC51(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#52}, char const (&) [20], true>(main::{lambda()#52}&&, char const (&) [20])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5132(%rbp), %rax
	leaq	.LC52(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#53}, char const (&) [17], true>(main::{lambda()#53}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5133(%rbp), %rax
	leaq	.LC53(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#54}, char const (&) [18], true>(main::{lambda()#54}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5134(%rbp), %rax
	leaq	.LC54(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#55}, char const (&) [19], true>(main::{lambda()#55}&&, char const (&) [19])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5135(%rbp), %rax
	leaq	.LC55(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#56}, char const (&) [18], true>(main::{lambda()#56}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5136(%rbp), %rax
	leaq	.LC56(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#57}, char const (&) [17], true>(main::{lambda()#57}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5137(%rbp), %rax
	leaq	.LC57(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#58}, char const (&) [17], true>(main::{lambda()#58}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5138(%rbp), %rax
	leaq	.LC58(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#59}, char const (&) [21], true>(main::{lambda()#59}&&, char const (&) [21])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5139(%rbp), %rax
	leaq	.LC59(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#60}, char const (&) [17], true>(main::{lambda()#60}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5140(%rbp), %rax
	leaq	.LC60(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#61}, char const (&) [18], true>(main::{lambda()#61}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5141(%rbp), %rax
	leaq	.LC61(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#62}, char const (&) [17], true>(main::{lambda()#62}&&, char const (&) [17])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5142(%rbp), %rax
	leaq	.LC62(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#63}, char const (&) [20], true>(main::{lambda()#63}&&, char const (&) [20])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5143(%rbp), %rax
	leaq	.LC63(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#64}, char const (&) [22], true>(main::{lambda()#64}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5144(%rbp), %rax
	leaq	.LC64(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#65}, char const (&) [22], true>(main::{lambda()#65}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5145(%rbp), %rax
	leaq	.LC65(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#66}, char const (&) [22], true>(main::{lambda()#66}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5146(%rbp), %rax
	leaq	.LC66(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#67}, char const (&) [22], true>(main::{lambda()#67}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5147(%rbp), %rax
	leaq	.LC67(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#68}, char const (&) [22], true>(main::{lambda()#68}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5148(%rbp), %rax
	leaq	.LC68(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#69}, char const (&) [22], true>(main::{lambda()#69}&&, char const (&) [22])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5149(%rbp), %rax
	leaq	.LC69(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#70}, char const (&) [24], true>(main::{lambda()#70}&&, char const (&) [24])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5150(%rbp), %rax
	leaq	.LC70(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#71}, char const (&) [24], true>(main::{lambda()#71}&&, char const (&) [24])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5151(%rbp), %rax
	leaq	.LC71(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#72}, char const (&) [26], true>(main::{lambda()#72}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5152(%rbp), %rax
	leaq	.LC72(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#73}, char const (&) [26], true>(main::{lambda()#73}&&, char const (&) [26])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5153(%rbp), %rax
	leaq	.LC73(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#74}, char const (&) [29], true>(main::{lambda()#74}&&, char const (&) [29])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5154(%rbp), %rax
	leaq	.LC74(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#75}, char const (&) [25], true>(main::{lambda()#75}&&, char const (&) [25])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5155(%rbp), %rax
	leaq	.LC75(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#76}, char const (&) [18], true>(main::{lambda()#76}&&, char const (&) [18])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5156(%rbp), %rax
	leaq	.LC76(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#77}, char const (&) [24], true>(main::{lambda()#77}&&, char const (&) [24])
	addq	$64, %rdi
	subq	$1, %rbx
	leaq	5157(%rbp), %rax
	leaq	.LC77(%rip), %r8
	movq	%rax, %rdx
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#78}, char const (&) [24], true>(main::{lambda()#78}&&, char const (&) [24])
	leaq	64(%rdi), %rcx
	subq	$1, %rbx
	leaq	5158(%rbp), %rax
	leaq	.LC78(%rip), %r8
	movq	%rax, %rdx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair<main::{lambda()#79}, char const (&) [26], true>(main::{lambda()#79}&&, char const (&) [26])
.LEHE160:
	movl	$35, %ebx
	leaq	2816(%rbp), %rax
	movq	%rax, %r12
	movl	$36, %r13d
	leaq	5159(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator()
	movq	%r12, -96(%rbp)
	movq	%r13, -88(%rbp)
	leaq	5159(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	leaq	-48(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
.LEHB161:
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
.LEHE161:
	leaq	5159(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
	leaq	2816(%rbp), %rbx
	addq	$2304, %rbx
.L501:
	leaq	2816(%rbp), %rax
	cmpq	%rax, %rbx
	je	.L500
	subq	$64, %rbx
	movq	%rbx, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L501
.L500:
	leaq	-16(%rbp), %rax
	movq	%rax, 5224(%rbp)
	movq	5224(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const
	movq	%rax, -56(%rbp)
	movq	5224(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const
	movq	%rax, -64(%rbp)
	jmp	.L502
.L504:
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
	movq	%rax, 5184(%rbp)
	movq	5184(%rbp), %rax
	movq	%rax, 5176(%rbp)
	movq	5184(%rbp), %rax
	addq	$32, %rax
	movq	%rax, 5168(%rbp)
	movq	5176(%rbp), %rax
	movq	%rax, %rcx
.LEHB162:
	call	std::function<bool ()>::operator()() const
	testb	%al, %al
	je	.L503
	movq	5168(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cout(%rip), %rax
	movq	%rax, %rcx
	call	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	movq	%rax, %rcx
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rax
	movq	%rax, %rdx
	call	std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
.L503:
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++()
.L502:
	leaq	-64(%rbp), %rdx
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	testb	%al, %al
	jne	.L504
	leaq	-48(%rbp), %rax
	movq	%rax, 5216(%rbp)
	movq	5216(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const
	movq	%rax, -72(%rbp)
	movq	5216(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const
	movq	%rax, -80(%rbp)
	jmp	.L505
.L507:
	leaq	-72(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
	movq	%rax, 5208(%rbp)
	movq	5208(%rbp), %rax
	movq	%rax, 5200(%rbp)
	movq	5208(%rbp), %rax
	addq	$32, %rax
	movq	%rax, 5192(%rbp)
	movq	5200(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::operator()() const
	testb	%al, %al
	je	.L506
	movq	5192(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cout(%rip), %rax
	movq	%rax, %rcx
	call	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	movq	%rax, %rcx
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rax
	movq	%rax, %rdx
	call	std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
.LEHE162:
.L506:
	leaq	-72(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++()
.L505:
	leaq	-80(%rbp), %rdx
	leaq	-72(%rbp), %rax
	movq	%rax, %rcx
	call	std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	testb	%al, %al
	jne	.L507
	movl	$0, %ebx
	leaq	-48(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
	leaq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
.L508:
	movl	%ebx, %eax
	jmp	.L535
.L529:
	movq	%rax, %r12
	movq	%rdx, %rdi
	leaq	2815(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
	movq	%rdi, %r13
	leaq	16(%rbp), %rdi
	addq	$2752, %rdi
.L511:
	leaq	16(%rbp), %rax
	cmpq	%rax, %rdi
	je	.L510
	subq	$64, %rdi
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L511
.L510:
	movq	%r13, %rdi
	jmp	.L512
.L528:
	movq	%rax, %r12
	movq	%rdx, %rdi
.L512:
	testq	%rsi, %rsi
	je	.L513
	movl	$42, %eax
	subq	%rbx, %rax
	salq	$6, %rax
	leaq	(%rsi,%rax), %rbx
.L514:
	cmpq	%rsi, %rbx
	je	.L513
	subq	$64, %rbx
	movq	%rbx, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L514
.L513:
	movq	%r12, %rax
	movq	%rdi, %rdx
	jmp	.L515
.L531:
	movq	%rax, %r12
	movq	%rdx, %rdi
	leaq	5159(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
	movq	%rdi, %r13
	leaq	2816(%rbp), %rdi
	addq	$2304, %rdi
.L518:
	leaq	2816(%rbp), %rax
	cmpq	%rax, %rdi
	je	.L517
	subq	$64, %rdi
	movq	%rdi, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L518
.L517:
	movq	%r13, %rdi
	jmp	.L519
.L530:
	movq	%rax, %r12
	movq	%rdx, %rdi
.L519:
	testq	%rsi, %rsi
	je	.L520
	movl	$35, %eax
	subq	%rbx, %rax
	salq	$6, %rax
	leaq	(%rsi,%rax), %rbx
.L521:
	cmpq	%rsi, %rbx
	je	.L520
	subq	$64, %rbx
	movq	%rbx, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	jmp	.L521
.L520:
	movq	%r12, %rsi
	movq	%rdi, %rbx
	jmp	.L522
.L532:
	movq	%rax, %rsi
	movq	%rdx, %rbx
	leaq	-48(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
.L522:
	leaq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~list()
	movq	%rsi, %rax
	movq	%rbx, %rdx
.L527:
.L515:
	cmpq	$1, %rdx
	jne	.L524
	movq	%rax, %rcx
	call	__cxa_begin_catch
	movq	%rax, 5160(%rbp)
	leaq	.LC79(%rip), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cerr(%rip), %rax
	movq	%rax, %rcx
.LEHB163:
	call	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
	movq	%rax, %rbx
	movq	5160(%rbp), %rax
	movq	(%rax), %rax
	addq	$16, %rax
	movq	(%rax), %rdx
	movq	5160(%rbp), %rax
	movq	%rax, %rcx
	call	*%rdx
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
	movq	%rax, %rcx
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rax
	movq	%rax, %rdx
	call	std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
.LEHE163:
	movl	$1, %ebx
	call	__cxa_end_catch
	jmp	.L508
.L524:
	movq	%rax, %rcx
	call	__cxa_begin_catch
	leaq	.LC80(%rip), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cerr(%rip), %rax
	movq	%rax, %rcx
.LEHB164:
	call	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
	movq	%rax, %rcx
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rax
	movq	%rax, %rdx
	call	std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
.LEHE164:
	movl	$1, %ebx
.LEHB165:
	call	__cxa_end_catch
	jmp	.L508
.L533:
	movq	%rax, %rbx
	call	__cxa_end_catch
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.LEHE165:
.L534:
	movq	%rax, %rbx
	call	__cxa_end_catch
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB166:
	call	_Unwind_Resume
.LEHE166:
.L535:
	addq	$5368, %rsp
	popq	%rbx
	popq	%rsi
	popq	%rdi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA3435:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT3435-.LLSDATTD3435
.LLSDATTD3435:
	.byte	0x1
	.uleb128 .LLSDACSE3435-.LLSDACSB3435
.LLSDACSB3435:
	.uleb128 .LEHB158-.LFB3435
	.uleb128 .LEHE158-.LEHB158
	.uleb128 .L528-.LFB3435
	.uleb128 0x5
	.uleb128 .LEHB159-.LFB3435
	.uleb128 .LEHE159-.LEHB159
	.uleb128 .L529-.LFB3435
	.uleb128 0x5
	.uleb128 .LEHB160-.LFB3435
	.uleb128 .LEHE160-.LEHB160
	.uleb128 .L530-.LFB3435
	.uleb128 0x5
	.uleb128 .LEHB161-.LFB3435
	.uleb128 .LEHE161-.LEHB161
	.uleb128 .L531-.LFB3435
	.uleb128 0x5
	.uleb128 .LEHB162-.LFB3435
	.uleb128 .LEHE162-.LEHB162
	.uleb128 .L532-.LFB3435
	.uleb128 0x5
	.uleb128 .LEHB163-.LFB3435
	.uleb128 .LEHE163-.LEHB163
	.uleb128 .L533-.LFB3435
	.uleb128 0
	.uleb128 .LEHB164-.LFB3435
	.uleb128 .LEHE164-.LEHB164
	.uleb128 .L534-.LFB3435
	.uleb128 0
	.uleb128 .LEHB165-.LFB3435
	.uleb128 .LEHE165-.LEHB165
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB166-.LFB3435
	.uleb128 .LEHE166-.LEHB166
	.uleb128 0
	.uleb128 0
.LLSDACSE3435:
	.byte	0x2
	.byte	0
	.byte	0x1
	.byte	0x7d
	.byte	0
	.byte	0x7d
	.align 4
	.long	0

	.long	.LDFCM0-.
.LLSDATT3435:
	.text
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,"x"
	.linkonce discard
	.align 2
	.globl	__gnu_cxx::char_traits<char>::length(char const*)
	.def	__gnu_cxx::char_traits<char>::length(char const*);	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::char_traits<char>::length(char const*)
__gnu_cxx::char_traits<char>::length(char const*):
.LFB4242:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	$0, -8(%rbp)
	jmp	.L537
.L538:
	addq	$1, -8(%rbp)
.L537:
	movb	$0, -9(%rbp)
	movq	16(%rbp), %rdx
	movq	-8(%rbp), %rax
	leaq	(%rdx,%rax), %rcx
	leaq	-9(%rbp), %rax
	movq	%rax, %rdx
	call	__gnu_cxx::char_traits<char>::eq(char const&, char const&)
	xorl	$1, %eax
	testb	%al, %al
	jne	.L538
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider():
.LFB4352:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<char>::~allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&):
.LFB4512:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA8_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [8]>(std::remove_reference<char const (&) [8]>::type&)) [8]
	.def	char const (&std::forward<char const (&) [8]>(std::remove_reference<char const (&) [8]>::type&)) [8];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [8]>(std::remove_reference<char const (&) [8]>::type&)) [8]
char const (&std::forward<char const (&) [8]>(std::remove_reference<char const (&) [8]>::type&)) [8]:
.LFB4513:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt14_Function_baseC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::_Function_base::_Function_base()
	.def	std::_Function_base::_Function_base();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Function_base()
std::_Function_base::_Function_base():
.LFB4516:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	16(%rbp), %rax
	movq	$0, 16(%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&)
std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&):
.LFB4518:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<main::{lambda()#1}>(main::{lambda()#1} const&)
	testb	%al, %al
	je	.L548
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L548:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&),std::function<bool ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}&&)
	.section .rdata,"dr"
	.align 8
.LC81:
	.ascii "basic_string: construction from null is not valid\0"
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&):
.LFB4522:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rsi
	.seh_pushreg	%rsi
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$48, %rsp
	.seh_stackalloc	48
	leaq	48(%rsp), %rbp
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
	movq	48(%rbp), %rdx
	movq	%rdx, %r8
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
	cmpq	$0, 40(%rbp)
	jne	.L550
	leaq	.LC81(%rip), %rax
	movq	%rax, %rcx
.LEHB167:
	call	std::__throw_logic_error(char const*)
.L550:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::char_traits<char>::length(char const*)
	movq	40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%esi, %r9d
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
.LEHE167:
	jmp	.L553
.L552:
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB168:
	call	_Unwind_Resume
	nop
.LEHE168:
.L553:
	addq	$48, %rsp
	popq	%rbx
	popq	%rsi
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4522:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4522-.LLSDACSB4522
.LLSDACSB4522:
	.uleb128 .LEHB167-.LFB4522
	.uleb128 .LEHE167-.LEHB167
	.uleb128 .L552-.LFB4522
	.uleb128 0
	.uleb128 .LEHB168-.LFB4522
	.uleb128 .LEHE168-.LEHB168
	.uleb128 0
	.uleb128 0
.LLSDACSE4522:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_,"x"
	.linkonce discard
	.seh_endproc
	.text
	.def	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&):
.LFB4523:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA10_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [10]>(std::remove_reference<char const (&) [10]>::type&)) [10]
	.def	char const (&std::forward<char const (&) [10]>(std::remove_reference<char const (&) [10]>::type&)) [10];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [10]>(std::remove_reference<char const (&) [10]>::type&)) [10]
char const (&std::forward<char const (&) [10]>(std::remove_reference<char const (&) [10]>::type&)) [10]:
.LFB4524:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&)
std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&):
.LFB4526:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<main::{lambda()#2}>(main::{lambda()#2} const&)
	testb	%al, %al
	je	.L560
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L560:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&),std::function<bool ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}&&)
	.def	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&)
main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&):
.LFB4528:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA15_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [15]>(std::remove_reference<char const (&) [15]>::type&)) [15]
	.def	char const (&std::forward<char const (&) [15]>(std::remove_reference<char const (&) [15]>::type&)) [15];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [15]>(std::remove_reference<char const (&) [15]>::type&)) [15]
char const (&std::forward<char const (&) [15]>(std::remove_reference<char const (&) [15]>::type&)) [15]:
.LFB4529:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&)
std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&):
.LFB4531:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<main::{lambda()#3}>(main::{lambda()#3} const&)
	testb	%al, %al
	je	.L567
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L567:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&),std::function<bool ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}&&)
	.def	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&):
.LFB4533:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA21_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21]
	.def	char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21]
char const (&std::forward<char const (&) [21]>(std::remove_reference<char const (&) [21]>::type&)) [21]:
.LFB4534:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&)
std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&):
.LFB4536:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<main::{lambda()#4}>(main::{lambda()#4} const&)
	testb	%al, %al
	je	.L574
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L574:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&),std::function<bool ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}&&)
	.def	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&):
.LFB4538:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA17_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
	.def	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]
char const (&std::forward<char const (&) [17]>(std::remove_reference<char const (&) [17]>::type&)) [17]:
.LFB4539:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&)
std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&):
.LFB4541:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<main::{lambda()#5}>(main::{lambda()#5} const&)
	testb	%al, %al
	je	.L581
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L581:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&),std::function<bool ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}&&)
	.def	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&):
.LFB4543:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA18_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
	.def	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]
char const (&std::forward<char const (&) [18]>(std::remove_reference<char const (&) [18]>::type&)) [18]:
.LFB4544:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&)
std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&):
.LFB4546:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<main::{lambda()#6}>(main::{lambda()#6} const&)
	testb	%al, %al
	je	.L588
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L588:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&),std::function<bool ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}&&)
	.def	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&)
main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&):
.LFB4548:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA26_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
	.def	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]
char const (&std::forward<char const (&) [26]>(std::remove_reference<char const (&) [26]>::type&)) [26]:
.LFB4549:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&)
std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&):
.LFB4551:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<main::{lambda()#7}>(main::{lambda()#7} const&)
	testb	%al, %al
	je	.L595
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L595:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&),std::function<bool ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}&&)
	.def	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&)
main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&):
.LFB4553:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA27_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [27]>(std::remove_reference<char const (&) [27]>::type&)) [27]
	.def	char const (&std::forward<char const (&) [27]>(std::remove_reference<char const (&) [27]>::type&)) [27];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [27]>(std::remove_reference<char const (&) [27]>::type&)) [27]
char const (&std::forward<char const (&) [27]>(std::remove_reference<char const (&) [27]>::type&)) [27]:
.LFB4554:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&)
std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&):
.LFB4556:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<main::{lambda()#8}>(main::{lambda()#8} const&)
	testb	%al, %al
	je	.L602
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L602:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&),std::function<bool ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}&&)
	.def	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&)
main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&):
.LFB4558:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA31_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [31]>(std::remove_reference<char const (&) [31]>::type&)) [31]
	.def	char const (&std::forward<char const (&) [31]>(std::remove_reference<char const (&) [31]>::type&)) [31];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [31]>(std::remove_reference<char const (&) [31]>::type&)) [31]
char const (&std::forward<char const (&) [31]>(std::remove_reference<char const (&) [31]>::type&)) [31]:
.LFB4559:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&)
std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&):
.LFB4561:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<main::{lambda()#9}>(main::{lambda()#9} const&)
	testb	%al, %al
	je	.L609
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L609:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&),std::function<bool ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}&&)
	.def	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&)
main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&):
.LFB4563:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA29_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
	.def	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]
char const (&std::forward<char const (&) [29]>(std::remove_reference<char const (&) [29]>::type&)) [29]:
.LFB4564:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&)
std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&):
.LFB4566:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<main::{lambda()#10}>(main::{lambda()#10} const&)
	testb	%al, %al
	je	.L616
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L616:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&),std::function<bool ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}&&)
	.def	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&)
main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&):
.LFB4568:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&)
std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&):
.LFB4570:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<main::{lambda()#11}>(main::{lambda()#11} const&)
	testb	%al, %al
	je	.L621
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L621:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&),std::function<bool ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}&&)
	.def	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&)
main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&):
.LFB4572:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
	.def	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]
char const (&std::forward<char const (&) [28]>(std::remove_reference<char const (&) [28]>::type&)) [28]:
.LFB4573:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&)
std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&):
.LFB4575:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<main::{lambda()#12}>(main::{lambda()#12} const&)
	testb	%al, %al
	je	.L628
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L628:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&),std::function<bool ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}&&)
	.def	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&)
main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&):
.LFB4577:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&)
std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&):
.LFB4579:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<main::{lambda()#13}>(main::{lambda()#13} const&)
	testb	%al, %al
	je	.L633
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L633:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&),std::function<bool ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}&&)
	.def	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&)
main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&):
.LFB4581:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA33_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [33]>(std::remove_reference<char const (&) [33]>::type&)) [33]
	.def	char const (&std::forward<char const (&) [33]>(std::remove_reference<char const (&) [33]>::type&)) [33];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [33]>(std::remove_reference<char const (&) [33]>::type&)) [33]
char const (&std::forward<char const (&) [33]>(std::remove_reference<char const (&) [33]>::type&)) [33]:
.LFB4582:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&)
std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&):
.LFB4584:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<main::{lambda()#14}>(main::{lambda()#14} const&)
	testb	%al, %al
	je	.L640
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L640:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&),std::function<bool ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}&&)
	.def	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&)
main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&):
.LFB4586:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA30_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30]
	.def	char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30]
char const (&std::forward<char const (&) [30]>(std::remove_reference<char const (&) [30]>::type&)) [30]:
.LFB4587:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&)
std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&):
.LFB4589:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<main::{lambda()#15}>(main::{lambda()#15} const&)
	testb	%al, %al
	je	.L647
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L647:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&),std::function<bool ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}&&)
	.def	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&)
main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&):
.LFB4591:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA34_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34]
	.def	char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34]
char const (&std::forward<char const (&) [34]>(std::remove_reference<char const (&) [34]>::type&)) [34]:
.LFB4592:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&)
std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&):
.LFB4594:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<main::{lambda()#16}>(main::{lambda()#16} const&)
	testb	%al, %al
	je	.L654
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L654:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&),std::function<bool ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}&&)
	.def	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&)
main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&):
.LFB4596:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&)
std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&):
.LFB4598:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_not_empty_function<main::{lambda()#17}>(main::{lambda()#17} const&)
	testb	%al, %al
	je	.L659
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#17}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L659:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&),std::function<bool ()>::function<main::{lambda()#17}, void>(main::{lambda()#17}&&)
	.def	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&)
main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&):
.LFB4600:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&)
std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&):
.LFB4602:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_not_empty_function<main::{lambda()#18}>(main::{lambda()#18} const&)
	testb	%al, %al
	je	.L664
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#18}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L664:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&),std::function<bool ()>::function<main::{lambda()#18}, void>(main::{lambda()#18}&&)
	.def	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&)
main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&):
.LFB4604:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&)
std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&):
.LFB4606:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_not_empty_function<main::{lambda()#19}>(main::{lambda()#19} const&)
	testb	%al, %al
	je	.L669
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#19}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L669:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&),std::function<bool ()>::function<main::{lambda()#19}, void>(main::{lambda()#19}&&)
	.def	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&)
main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&):
.LFB4608:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&)
std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&):
.LFB4610:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_not_empty_function<main::{lambda()#20}>(main::{lambda()#20} const&)
	testb	%al, %al
	je	.L674
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#20}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L674:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&),std::function<bool ()>::function<main::{lambda()#20}, void>(main::{lambda()#20}&&)
	.def	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&)
main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&):
.LFB4612:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA23_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]
	.def	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]
char const (&std::forward<char const (&) [23]>(std::remove_reference<char const (&) [23]>::type&)) [23]:
.LFB4613:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&)
std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&):
.LFB4615:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_not_empty_function<main::{lambda()#21}>(main::{lambda()#21} const&)
	testb	%al, %al
	je	.L681
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#21}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L681:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&),std::function<bool ()>::function<main::{lambda()#21}, void>(main::{lambda()#21}&&)
	.def	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&)
main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&):
.LFB4617:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&)
std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&):
.LFB4619:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_not_empty_function<main::{lambda()#22}>(main::{lambda()#22} const&)
	testb	%al, %al
	je	.L686
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#22}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L686:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&),std::function<bool ()>::function<main::{lambda()#22}, void>(main::{lambda()#22}&&)
	.def	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&)
main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&):
.LFB4621:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA24_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
	.def	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]
char const (&std::forward<char const (&) [24]>(std::remove_reference<char const (&) [24]>::type&)) [24]:
.LFB4622:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&)
std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&):
.LFB4624:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_not_empty_function<main::{lambda()#23}>(main::{lambda()#23} const&)
	testb	%al, %al
	je	.L693
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#23}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L693:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&),std::function<bool ()>::function<main::{lambda()#23}, void>(main::{lambda()#23}&&)
	.def	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&)
main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&):
.LFB4626:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&)
std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&):
.LFB4628:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_not_empty_function<main::{lambda()#24}>(main::{lambda()#24} const&)
	testb	%al, %al
	je	.L698
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#24}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L698:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&),std::function<bool ()>::function<main::{lambda()#24}, void>(main::{lambda()#24}&&)
	.def	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&)
main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&):
.LFB4630:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&)
std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&):
.LFB4632:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_not_empty_function<main::{lambda()#25}>(main::{lambda()#25} const&)
	testb	%al, %al
	je	.L703
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#25}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L703:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&),std::function<bool ()>::function<main::{lambda()#25}, void>(main::{lambda()#25}&&)
	.def	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&)
main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&):
.LFB4634:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&)
std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&):
.LFB4636:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_not_empty_function<main::{lambda()#26}>(main::{lambda()#26} const&)
	testb	%al, %al
	je	.L708
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#26}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L708:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&),std::function<bool ()>::function<main::{lambda()#26}, void>(main::{lambda()#26}&&)
	.def	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&)
main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&):
.LFB4638:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&)
std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&):
.LFB4640:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_not_empty_function<main::{lambda()#27}>(main::{lambda()#27} const&)
	testb	%al, %al
	je	.L713
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#27}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L713:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&),std::function<bool ()>::function<main::{lambda()#27}, void>(main::{lambda()#27}&&)
	.def	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&)
main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&):
.LFB4642:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
	.def	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]
char const (&std::forward<char const (&) [19]>(std::remove_reference<char const (&) [19]>::type&)) [19]:
.LFB4643:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&)
std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&):
.LFB4645:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_not_empty_function<main::{lambda()#28}>(main::{lambda()#28} const&)
	testb	%al, %al
	je	.L720
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#28}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L720:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&),std::function<bool ()>::function<main::{lambda()#28}, void>(main::{lambda()#28}&&)
	.def	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&)
main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&):
.LFB4647:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&)
std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&):
.LFB4649:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_not_empty_function<main::{lambda()#29}>(main::{lambda()#29} const&)
	testb	%al, %al
	je	.L725
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#29}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L725:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&),std::function<bool ()>::function<main::{lambda()#29}, void>(main::{lambda()#29}&&)
	.def	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&)
main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&):
.LFB4651:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&)
std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&):
.LFB4653:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_not_empty_function<main::{lambda()#30}>(main::{lambda()#30} const&)
	testb	%al, %al
	je	.L730
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#30}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L730:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&),std::function<bool ()>::function<main::{lambda()#30}, void>(main::{lambda()#30}&&)
	.def	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&)
main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&):
.LFB4655:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&)
std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&):
.LFB4657:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_not_empty_function<main::{lambda()#31}>(main::{lambda()#31} const&)
	testb	%al, %al
	je	.L735
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#31}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L735:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&),std::function<bool ()>::function<main::{lambda()#31}, void>(main::{lambda()#31}&&)
	.def	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&)
main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&):
.LFB4659:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&)
std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&):
.LFB4661:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_not_empty_function<main::{lambda()#32}>(main::{lambda()#32} const&)
	testb	%al, %al
	je	.L740
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#32}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L740:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&),std::function<bool ()>::function<main::{lambda()#32}, void>(main::{lambda()#32}&&)
	.def	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&)
main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&):
.LFB4663:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&)
std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&):
.LFB4665:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_not_empty_function<main::{lambda()#33}>(main::{lambda()#33} const&)
	testb	%al, %al
	je	.L745
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#33}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L745:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&),std::function<bool ()>::function<main::{lambda()#33}, void>(main::{lambda()#33}&&)
	.def	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&)
main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&):
.LFB4667:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA35_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
	.def	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]
char const (&std::forward<char const (&) [35]>(std::remove_reference<char const (&) [35]>::type&)) [35]:
.LFB4668:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&)
std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&):
.LFB4670:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_not_empty_function<main::{lambda()#34}>(main::{lambda()#34} const&)
	testb	%al, %al
	je	.L752
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#34}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L752:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&),std::function<bool ()>::function<main::{lambda()#34}, void>(main::{lambda()#34}&&)
	.def	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&)
main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&):
.LFB4672:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&)
std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&):
.LFB4674:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_not_empty_function<main::{lambda()#35}>(main::{lambda()#35} const&)
	testb	%al, %al
	je	.L757
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#35}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L757:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&),std::function<bool ()>::function<main::{lambda()#35}, void>(main::{lambda()#35}&&)
	.def	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&)
main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&):
.LFB4676:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&)
std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&):
.LFB4678:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_not_empty_function<main::{lambda()#36}>(main::{lambda()#36} const&)
	testb	%al, %al
	je	.L762
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#36}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L762:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&),std::function<bool ()>::function<main::{lambda()#36}, void>(main::{lambda()#36}&&)
	.def	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&)
main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&):
.LFB4680:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&)
std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&):
.LFB4682:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_not_empty_function<main::{lambda()#37}>(main::{lambda()#37} const&)
	testb	%al, %al
	je	.L767
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#37}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L767:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&),std::function<bool ()>::function<main::{lambda()#37}, void>(main::{lambda()#37}&&)
	.def	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&)
main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&):
.LFB4684:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&)
std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&):
.LFB4686:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_not_empty_function<main::{lambda()#38}>(main::{lambda()#38} const&)
	testb	%al, %al
	je	.L772
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#38}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L772:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&),std::function<bool ()>::function<main::{lambda()#38}, void>(main::{lambda()#38}&&)
	.def	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&)
main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&):
.LFB4688:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&)
std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&):
.LFB4690:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_not_empty_function<main::{lambda()#39}>(main::{lambda()#39} const&)
	testb	%al, %al
	je	.L777
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#39}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L777:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&),std::function<bool ()>::function<main::{lambda()#39}, void>(main::{lambda()#39}&&)
	.def	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&)
main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&):
.LFB4692:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&)
std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&):
.LFB4694:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_not_empty_function<main::{lambda()#40}>(main::{lambda()#40} const&)
	testb	%al, %al
	je	.L782
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#40}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L782:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&),std::function<bool ()>::function<main::{lambda()#40}, void>(main::{lambda()#40}&&)
	.def	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&)
main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&):
.LFB4696:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&)
std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&):
.LFB4698:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_not_empty_function<main::{lambda()#41}>(main::{lambda()#41} const&)
	testb	%al, %al
	je	.L787
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#41}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L787:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&),std::function<bool ()>::function<main::{lambda()#41}, void>(main::{lambda()#41}&&)
	.def	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&)
main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&):
.LFB4700:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&)
std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&):
.LFB4702:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_not_empty_function<main::{lambda()#42}>(main::{lambda()#42} const&)
	testb	%al, %al
	je	.L792
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#42}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L792:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&),std::function<bool ()>::function<main::{lambda()#42}, void>(main::{lambda()#42}&&)
	.def	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&)
main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&):
.LFB4704:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&)
std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&):
.LFB4706:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_not_empty_function<main::{lambda()#43}>(main::{lambda()#43} const&)
	testb	%al, %al
	je	.L797
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#43}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L797:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&),std::function<bool ()>::function<main::{lambda()#43}, void>(main::{lambda()#43}&&)
	.section	.text$_ZNSaISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator()
	.def	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator()
std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocator():
.LFB4710:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::__new_allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSaISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
	.def	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator()
std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~allocator():
.LFB4713:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~__new_allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EEC1ESt16initializer_listISA_ERKSB_,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::list(std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&):
.LFB4716:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rsi
	.seh_pushreg	%rsi
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$64, %rsp
	.seh_stackalloc	64
	leaq	64(%rsp), %rbp
	.seh_setframe	%rbp, 64
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, %rbx
	movq	(%rbx), %rax
	movq	8(%rbx), %rdx
	movq	%rax, -32(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%r8, 48(%rbp)
	movq	32(%rbp), %rbx
	movq	48(%rbp), %rdx
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	leaq	-1(%rbp), %rax
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_base(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const
	movq	%rax, %rbx
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%esi, %r9d
	movq	%rbx, %r8
	movq	%rax, %rcx
.LEHB169:
	call	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_initialize_dispatch<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::__false_type)
.LEHE169:
	jmp	.L803
.L802:
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB170:
	call	_Unwind_Resume
	nop
.LEHE170:
.L803:
	addq	$64, %rsp
	popq	%rbx
	popq	%rsi
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4716:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4716-.LLSDACSB4716
.LLSDACSB4716:
	.uleb128 .LEHB169-.LFB4716
	.uleb128 .LEHE169-.LEHB169
	.uleb128 .L802-.LFB4716
	.uleb128 0
	.uleb128 .LEHB170-.LFB4716
	.uleb128 .LEHE170-.LEHB170
	.uleb128 0
	.uleb128 0
.LLSDACSE4716:
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EEC1ESt16initializer_listISA_ERKSB_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE10_List_implD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::~_List_impl()
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::~_List_impl();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::~_List_impl()
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::~_List_impl():
.LFB4720:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base()
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base()
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~_List_base():
.LFB4721:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_clear()
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::~_List_impl()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&)
main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&):
.LFB4723:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&)
std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&):
.LFB4725:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_not_empty_function<main::{lambda()#44}>(main::{lambda()#44} const&)
	testb	%al, %al
	je	.L810
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#44}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L810:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&),std::function<bool ()>::function<main::{lambda()#44}, void>(main::{lambda()#44}&&)
	.def	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&)
main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&):
.LFB4727:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&)
std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&):
.LFB4729:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_not_empty_function<main::{lambda()#45}>(main::{lambda()#45} const&)
	testb	%al, %al
	je	.L815
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#45}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L815:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&),std::function<bool ()>::function<main::{lambda()#45}, void>(main::{lambda()#45}&&)
	.def	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&)
main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&):
.LFB4731:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&)
std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&):
.LFB4733:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_not_empty_function<main::{lambda()#46}>(main::{lambda()#46} const&)
	testb	%al, %al
	je	.L820
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#46}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L820:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&),std::function<bool ()>::function<main::{lambda()#46}, void>(main::{lambda()#46}&&)
	.def	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&)
main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&):
.LFB4735:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&)
std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&):
.LFB4737:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_not_empty_function<main::{lambda()#47}>(main::{lambda()#47} const&)
	testb	%al, %al
	je	.L825
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#47}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L825:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&),std::function<bool ()>::function<main::{lambda()#47}, void>(main::{lambda()#47}&&)
	.def	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&)
main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&):
.LFB4739:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&)
std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&):
.LFB4741:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_not_empty_function<main::{lambda()#48}>(main::{lambda()#48} const&)
	testb	%al, %al
	je	.L830
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#48}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L830:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&),std::function<bool ()>::function<main::{lambda()#48}, void>(main::{lambda()#48}&&)
	.def	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&)
main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&):
.LFB4743:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&)
std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&):
.LFB4745:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_not_empty_function<main::{lambda()#49}>(main::{lambda()#49} const&)
	testb	%al, %al
	je	.L835
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#49}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L835:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&),std::function<bool ()>::function<main::{lambda()#49}, void>(main::{lambda()#49}&&)
	.def	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&)
main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&):
.LFB4747:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&)
std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&):
.LFB4749:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_not_empty_function<main::{lambda()#50}>(main::{lambda()#50} const&)
	testb	%al, %al
	je	.L840
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#50}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L840:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&),std::function<bool ()>::function<main::{lambda()#50}, void>(main::{lambda()#50}&&)
	.def	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&)
main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&):
.LFB4751:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA20_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
	.def	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]:
.LFB4752:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&)
std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&):
.LFB4754:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_not_empty_function<main::{lambda()#51}>(main::{lambda()#51} const&)
	testb	%al, %al
	je	.L847
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#51}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L847:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&),std::function<bool ()>::function<main::{lambda()#51}, void>(main::{lambda()#51}&&)
	.def	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&)
main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&):
.LFB4756:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&)
std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&):
.LFB4758:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_not_empty_function<main::{lambda()#52}>(main::{lambda()#52} const&)
	testb	%al, %al
	je	.L852
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#52}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L852:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&),std::function<bool ()>::function<main::{lambda()#52}, void>(main::{lambda()#52}&&)
	.def	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&)
main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&):
.LFB4760:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&)
std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&):
.LFB4762:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_not_empty_function<main::{lambda()#53}>(main::{lambda()#53} const&)
	testb	%al, %al
	je	.L857
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#53}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L857:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&),std::function<bool ()>::function<main::{lambda()#53}, void>(main::{lambda()#53}&&)
	.def	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&)
main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&):
.LFB4764:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&)
std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&):
.LFB4766:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_not_empty_function<main::{lambda()#54}>(main::{lambda()#54} const&)
	testb	%al, %al
	je	.L862
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#54}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L862:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&),std::function<bool ()>::function<main::{lambda()#54}, void>(main::{lambda()#54}&&)
	.def	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&)
main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&):
.LFB4768:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&)
std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&):
.LFB4770:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_not_empty_function<main::{lambda()#55}>(main::{lambda()#55} const&)
	testb	%al, %al
	je	.L867
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#55}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L867:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&),std::function<bool ()>::function<main::{lambda()#55}, void>(main::{lambda()#55}&&)
	.def	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&)
main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&):
.LFB4772:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&)
std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&):
.LFB4774:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_not_empty_function<main::{lambda()#56}>(main::{lambda()#56} const&)
	testb	%al, %al
	je	.L872
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#56}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L872:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&),std::function<bool ()>::function<main::{lambda()#56}, void>(main::{lambda()#56}&&)
	.def	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&)
main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&):
.LFB4776:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&)
std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&):
.LFB4778:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_not_empty_function<main::{lambda()#57}>(main::{lambda()#57} const&)
	testb	%al, %al
	je	.L877
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#57}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L877:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&),std::function<bool ()>::function<main::{lambda()#57}, void>(main::{lambda()#57}&&)
	.def	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&)
main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&):
.LFB4780:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&)
std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&):
.LFB4782:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_not_empty_function<main::{lambda()#58}>(main::{lambda()#58} const&)
	testb	%al, %al
	je	.L882
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#58}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L882:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&),std::function<bool ()>::function<main::{lambda()#58}, void>(main::{lambda()#58}&&)
	.def	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&)
main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&):
.LFB4784:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&)
std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&):
.LFB4786:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_not_empty_function<main::{lambda()#59}>(main::{lambda()#59} const&)
	testb	%al, %al
	je	.L887
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#59}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L887:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&),std::function<bool ()>::function<main::{lambda()#59}, void>(main::{lambda()#59}&&)
	.def	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&)
main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&):
.LFB4788:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&)
std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&):
.LFB4790:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_not_empty_function<main::{lambda()#60}>(main::{lambda()#60} const&)
	testb	%al, %al
	je	.L892
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#60}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L892:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&),std::function<bool ()>::function<main::{lambda()#60}, void>(main::{lambda()#60}&&)
	.def	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&)
main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&):
.LFB4792:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&)
std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&):
.LFB4794:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_not_empty_function<main::{lambda()#61}>(main::{lambda()#61} const&)
	testb	%al, %al
	je	.L897
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#61}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L897:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&),std::function<bool ()>::function<main::{lambda()#61}, void>(main::{lambda()#61}&&)
	.def	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&)
main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&):
.LFB4796:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&)
std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&):
.LFB4798:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_not_empty_function<main::{lambda()#62}>(main::{lambda()#62} const&)
	testb	%al, %al
	je	.L902
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#62}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L902:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&),std::function<bool ()>::function<main::{lambda()#62}, void>(main::{lambda()#62}&&)
	.def	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&)
main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&):
.LFB4800:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&)
std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&):
.LFB4802:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_not_empty_function<main::{lambda()#63}>(main::{lambda()#63} const&)
	testb	%al, %al
	je	.L907
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#63}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L907:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&),std::function<bool ()>::function<main::{lambda()#63}, void>(main::{lambda()#63}&&)
	.def	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&)
main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&):
.LFB4804:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA22_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
	.def	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]
char const (&std::forward<char const (&) [22]>(std::remove_reference<char const (&) [22]>::type&)) [22]:
.LFB4805:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&)
std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&):
.LFB4807:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_not_empty_function<main::{lambda()#64}>(main::{lambda()#64} const&)
	testb	%al, %al
	je	.L914
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#64}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L914:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&),std::function<bool ()>::function<main::{lambda()#64}, void>(main::{lambda()#64}&&)
	.def	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&)
main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&):
.LFB4809:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&)
std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&):
.LFB4811:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_not_empty_function<main::{lambda()#65}>(main::{lambda()#65} const&)
	testb	%al, %al
	je	.L919
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#65}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L919:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&),std::function<bool ()>::function<main::{lambda()#65}, void>(main::{lambda()#65}&&)
	.def	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&)
main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&):
.LFB4813:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&)
std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&):
.LFB4815:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_not_empty_function<main::{lambda()#66}>(main::{lambda()#66} const&)
	testb	%al, %al
	je	.L924
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#66}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L924:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&),std::function<bool ()>::function<main::{lambda()#66}, void>(main::{lambda()#66}&&)
	.def	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&)
main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&):
.LFB4817:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&)
std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&):
.LFB4819:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_not_empty_function<main::{lambda()#67}>(main::{lambda()#67} const&)
	testb	%al, %al
	je	.L929
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#67}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L929:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&),std::function<bool ()>::function<main::{lambda()#67}, void>(main::{lambda()#67}&&)
	.def	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&)
main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&):
.LFB4821:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&)
std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&):
.LFB4823:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_not_empty_function<main::{lambda()#68}>(main::{lambda()#68} const&)
	testb	%al, %al
	je	.L934
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#68}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L934:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&),std::function<bool ()>::function<main::{lambda()#68}, void>(main::{lambda()#68}&&)
	.def	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&)
main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&):
.LFB4825:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&)
std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&):
.LFB4827:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_not_empty_function<main::{lambda()#69}>(main::{lambda()#69} const&)
	testb	%al, %al
	je	.L939
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#69}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L939:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&),std::function<bool ()>::function<main::{lambda()#69}, void>(main::{lambda()#69}&&)
	.def	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&)
main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&):
.LFB4829:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&)
std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&):
.LFB4831:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_not_empty_function<main::{lambda()#70}>(main::{lambda()#70} const&)
	testb	%al, %al
	je	.L944
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#70}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L944:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&),std::function<bool ()>::function<main::{lambda()#70}, void>(main::{lambda()#70}&&)
	.def	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&)
main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&):
.LFB4833:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&)
std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&):
.LFB4835:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_not_empty_function<main::{lambda()#71}>(main::{lambda()#71} const&)
	testb	%al, %al
	je	.L949
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#71}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L949:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&),std::function<bool ()>::function<main::{lambda()#71}, void>(main::{lambda()#71}&&)
	.def	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&)
main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&):
.LFB4837:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&)
std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&):
.LFB4839:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_not_empty_function<main::{lambda()#72}>(main::{lambda()#72} const&)
	testb	%al, %al
	je	.L954
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#72}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L954:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&),std::function<bool ()>::function<main::{lambda()#72}, void>(main::{lambda()#72}&&)
	.def	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&)
main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&):
.LFB4841:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&)
std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&):
.LFB4843:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_not_empty_function<main::{lambda()#73}>(main::{lambda()#73} const&)
	testb	%al, %al
	je	.L959
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#73}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L959:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&),std::function<bool ()>::function<main::{lambda()#73}, void>(main::{lambda()#73}&&)
	.def	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&)
main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&):
.LFB4845:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&)
std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&):
.LFB4847:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_not_empty_function<main::{lambda()#74}>(main::{lambda()#74} const&)
	testb	%al, %al
	je	.L964
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#74}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L964:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&),std::function<bool ()>::function<main::{lambda()#74}, void>(main::{lambda()#74}&&)
	.def	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&)
main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&):
.LFB4849:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRA25_KcEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	char const (&std::forward<char const (&) [25]>(std::remove_reference<char const (&) [25]>::type&)) [25]
	.def	char const (&std::forward<char const (&) [25]>(std::remove_reference<char const (&) [25]>::type&)) [25];	.scl	2;	.type	32;	.endef
	.seh_proc	char const (&std::forward<char const (&) [25]>(std::remove_reference<char const (&) [25]>::type&)) [25]
char const (&std::forward<char const (&) [25]>(std::remove_reference<char const (&) [25]>::type&)) [25]:
.LFB4850:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&)
std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&):
.LFB4852:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_not_empty_function<main::{lambda()#75}>(main::{lambda()#75} const&)
	testb	%al, %al
	je	.L971
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#75}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L971:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&),std::function<bool ()>::function<main::{lambda()#75}, void>(main::{lambda()#75}&&)
	.def	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&)
main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&):
.LFB4854:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&)
std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&):
.LFB4856:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_not_empty_function<main::{lambda()#76}>(main::{lambda()#76} const&)
	testb	%al, %al
	je	.L976
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#76}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L976:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&),std::function<bool ()>::function<main::{lambda()#76}, void>(main::{lambda()#76}&&)
	.def	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&)
main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&):
.LFB4858:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&)
std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&):
.LFB4860:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_not_empty_function<main::{lambda()#77}>(main::{lambda()#77} const&)
	testb	%al, %al
	je	.L981
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#77}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L981:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&),std::function<bool ()>::function<main::{lambda()#77}, void>(main::{lambda()#77}&&)
	.def	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&)
main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&):
.LFB4862:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&)
std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&):
.LFB4864:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_not_empty_function<main::{lambda()#78}>(main::{lambda()#78} const&)
	testb	%al, %al
	je	.L986
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#78}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L986:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&),std::function<bool ()>::function<main::{lambda()#78}, void>(main::{lambda()#78}&&)
	.def	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&)
main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&):
.LFB4866:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&)
std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&):
.LFB4868:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	16(%rbp), %rax
	movq	$0, 24(%rax)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	bool std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_not_empty_function<main::{lambda()#79}>(main::{lambda()#79} const&)
	testb	%al, %al
	je	.L991
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#79}>::_M_invoke(std::_Any_data const&)(%rip), %rdx
	movq	%rdx, 24(%rax)
	movq	16(%rbp), %rax
	leaq	std::_Function_handler<bool (), main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)(%rip), %rdx
	movq	%rdx, 16(%rax)
.L991:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&);	.scl	3;	.type	32;	.endef
	.set	std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&),std::function<bool ()>::function<main::{lambda()#79}, void>(main::{lambda()#79}&&)
	.section	.text$_ZNKSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::begin() const:
.LFB4870:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rdx
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end() const:
.LFB4871:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rdx
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZStneRKSt20_List_const_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESD_,"x"
	.linkonce discard
	.globl	std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	.def	std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
std::operator!=(std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&):
.LFB4872:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rdx
	movq	24(%rbp), %rax
	movq	(%rax), %rax
	cmpq	%rax, %rdx
	setne	%al
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt20_List_const_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEppEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++()
	.def	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++()
std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator++():
.LFB4873:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	movq	16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt20_List_const_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
	.def	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const:
.LFB4874:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rcx
	call	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt8functionIFbvEEclEv,"x"
	.linkonce discard
	.align 2
	.globl	std::function<bool ()>::operator()() const
	.def	std::function<bool ()>::operator()() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::operator()() const
std::function<bool ()>::operator()() const:
.LFB4875:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_M_empty() const
	testb	%al, %al
	je	.L1003
	call	std::__throw_bad_function_call()
.L1003:
	movq	16(%rbp), %rax
	movq	24(%rax), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	*%rdx
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,"x"
	.linkonce discard
	.globl	__gnu_cxx::char_traits<char>::eq(char const&, char const&)
	.def	__gnu_cxx::char_traits<char>::eq(char const&, char const&);	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::char_traits<char>::eq(char const&, char const&)
__gnu_cxx::char_traits<char>::eq(char const&, char const&):
.LFB4880:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movzbl	(%rax), %edx
	movq	24(%rbp), %rax
	movzbl	(%rax), %eax
	cmpb	%al, %dl
	sete	%al
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*):
.LFB4918:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	24(%rbp), %rdx
	movq	%rdx, (%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::~_Guard()
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::~_Guard();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::~_Guard()
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::~_Guard():
.LFB4921:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.L1010
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
.L1010:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4921:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4921-.LLSDACSB4921
.LLSDACSB4921:
.LLSDACSE4921:
	.section	.text$_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,"x"
	.linkonce discard
	.align 2
	.globl	void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
	.def	void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag):
.LFB4915:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$64, %rsp
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	32(%rbp), %rdx
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	cmpq	$15, %rax
	jbe	.L1012
	leaq	-16(%rbp), %rdx
	movq	16(%rbp), %rax
	movl	$0, %r8d
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
	movq	-16(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long)
	jmp	.L1013
.L1012:
	movq	16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
	nop
.L1013:
	movq	16(%rbp), %rdx
	leaq	-24(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
	movq	%rax, %rcx
	movq	32(%rbp), %rdx
	movq	24(%rbp), %rax
	movq	%rdx, %r8
	movq	%rax, %rdx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
	movq	$0, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long)
	leaq	-24(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)::_Guard::~_Guard()
	nop
	addq	$64, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<main::{lambda()#1}>(main::{lambda()#1} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<main::{lambda()#1}>(main::{lambda()#1} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<main::{lambda()#1}>(main::{lambda()#1} const&):
.LFB4987:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&)
void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&):
.LFB4988:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#1}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#1}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&):
.LFB4989:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#1}&>, bool>::type std::__invoke_r<bool, main::{lambda()#1}&>(main::{lambda()#1}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB4992:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1021
	cmpl	$1, %eax
	je	.L1022
	jmp	.L1026
.L1021:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#1}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1024
.L1022:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>()
	movq	%rbx, (%rax)
	jmp	.L1024
.L1026:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1024:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<main::{lambda()#2}>(main::{lambda()#2} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<main::{lambda()#2}>(main::{lambda()#2} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<main::{lambda()#2}>(main::{lambda()#2} const&):
.LFB4993:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&)
void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&):
.LFB4994:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#2}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#2}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&):
.LFB4995:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#2}&>, bool>::type std::__invoke_r<bool, main::{lambda()#2}&>(main::{lambda()#2}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB4998:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1033
	cmpl	$1, %eax
	je	.L1034
	jmp	.L1038
.L1033:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#2}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1036
.L1034:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>()
	movq	%rbx, (%rax)
	jmp	.L1036
.L1038:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1036:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<main::{lambda()#3}>(main::{lambda()#3} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<main::{lambda()#3}>(main::{lambda()#3} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<main::{lambda()#3}>(main::{lambda()#3} const&):
.LFB4999:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&)
void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&):
.LFB5000:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#3}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#3}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&):
.LFB5001:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#3}&>, bool>::type std::__invoke_r<bool, main::{lambda()#3}&>(main::{lambda()#3}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5004:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1045
	cmpl	$1, %eax
	je	.L1046
	jmp	.L1050
.L1045:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#3}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1048
.L1046:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>()
	movq	%rbx, (%rax)
	jmp	.L1048
.L1050:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1048:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<main::{lambda()#4}>(main::{lambda()#4} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<main::{lambda()#4}>(main::{lambda()#4} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<main::{lambda()#4}>(main::{lambda()#4} const&):
.LFB5005:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&)
void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&):
.LFB5006:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#4}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#4}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&):
.LFB5007:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#4}&>, bool>::type std::__invoke_r<bool, main::{lambda()#4}&>(main::{lambda()#4}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5010:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1057
	cmpl	$1, %eax
	je	.L1058
	jmp	.L1062
.L1057:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#4}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1060
.L1058:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>()
	movq	%rbx, (%rax)
	jmp	.L1060
.L1062:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1060:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<main::{lambda()#5}>(main::{lambda()#5} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<main::{lambda()#5}>(main::{lambda()#5} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<main::{lambda()#5}>(main::{lambda()#5} const&):
.LFB5011:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&)
void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&):
.LFB5012:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#5}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#5}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&):
.LFB5013:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#5}&>, bool>::type std::__invoke_r<bool, main::{lambda()#5}&>(main::{lambda()#5}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5016:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1069
	cmpl	$1, %eax
	je	.L1070
	jmp	.L1074
.L1069:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#5}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1072
.L1070:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>()
	movq	%rbx, (%rax)
	jmp	.L1072
.L1074:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1072:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<main::{lambda()#6}>(main::{lambda()#6} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<main::{lambda()#6}>(main::{lambda()#6} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<main::{lambda()#6}>(main::{lambda()#6} const&):
.LFB5017:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&)
void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&):
.LFB5018:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#6}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#6}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&):
.LFB5019:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#6}&>, bool>::type std::__invoke_r<bool, main::{lambda()#6}&>(main::{lambda()#6}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5022:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1081
	cmpl	$1, %eax
	je	.L1082
	jmp	.L1086
.L1081:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#6}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1084
.L1082:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>()
	movq	%rbx, (%rax)
	jmp	.L1084
.L1086:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1084:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<main::{lambda()#7}>(main::{lambda()#7} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<main::{lambda()#7}>(main::{lambda()#7} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<main::{lambda()#7}>(main::{lambda()#7} const&):
.LFB5023:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&)
void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&):
.LFB5024:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#7}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#7}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&):
.LFB5025:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#7}&>, bool>::type std::__invoke_r<bool, main::{lambda()#7}&>(main::{lambda()#7}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5028:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1093
	cmpl	$1, %eax
	je	.L1094
	jmp	.L1098
.L1093:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#7}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1096
.L1094:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>()
	movq	%rbx, (%rax)
	jmp	.L1096
.L1098:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1096:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<main::{lambda()#8}>(main::{lambda()#8} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<main::{lambda()#8}>(main::{lambda()#8} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<main::{lambda()#8}>(main::{lambda()#8} const&):
.LFB5029:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&)
void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&):
.LFB5030:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#8}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#8}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&):
.LFB5031:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#8}&>, bool>::type std::__invoke_r<bool, main::{lambda()#8}&>(main::{lambda()#8}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5034:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1105
	cmpl	$1, %eax
	je	.L1106
	jmp	.L1110
.L1105:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#8}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1108
.L1106:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>()
	movq	%rbx, (%rax)
	jmp	.L1108
.L1110:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1108:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<main::{lambda()#9}>(main::{lambda()#9} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<main::{lambda()#9}>(main::{lambda()#9} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<main::{lambda()#9}>(main::{lambda()#9} const&):
.LFB5035:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&)
void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&):
.LFB5036:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#9}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#9}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&):
.LFB5037:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#9}&>, bool>::type std::__invoke_r<bool, main::{lambda()#9}&>(main::{lambda()#9}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5040:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1117
	cmpl	$1, %eax
	je	.L1118
	jmp	.L1122
.L1117:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#9}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1120
.L1118:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>()
	movq	%rbx, (%rax)
	jmp	.L1120
.L1122:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1120:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<main::{lambda()#10}>(main::{lambda()#10} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<main::{lambda()#10}>(main::{lambda()#10} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<main::{lambda()#10}>(main::{lambda()#10} const&):
.LFB5041:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&)
void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&):
.LFB5042:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#10}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#10}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&):
.LFB5043:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#10}&>, bool>::type std::__invoke_r<bool, main::{lambda()#10}&>(main::{lambda()#10}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5046:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1129
	cmpl	$1, %eax
	je	.L1130
	jmp	.L1134
.L1129:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#10}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1132
.L1130:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>()
	movq	%rbx, (%rax)
	jmp	.L1132
.L1134:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1132:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<main::{lambda()#11}>(main::{lambda()#11} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<main::{lambda()#11}>(main::{lambda()#11} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<main::{lambda()#11}>(main::{lambda()#11} const&):
.LFB5047:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&)
void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&):
.LFB5048:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#11}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#11}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&):
.LFB5049:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#11}&>, bool>::type std::__invoke_r<bool, main::{lambda()#11}&>(main::{lambda()#11}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5052:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1141
	cmpl	$1, %eax
	je	.L1142
	jmp	.L1146
.L1141:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#11}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1144
.L1142:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>()
	movq	%rbx, (%rax)
	jmp	.L1144
.L1146:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1144:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<main::{lambda()#12}>(main::{lambda()#12} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<main::{lambda()#12}>(main::{lambda()#12} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<main::{lambda()#12}>(main::{lambda()#12} const&):
.LFB5053:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&)
void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&):
.LFB5054:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#12}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#12}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&):
.LFB5055:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#12}&>, bool>::type std::__invoke_r<bool, main::{lambda()#12}&>(main::{lambda()#12}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5058:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1153
	cmpl	$1, %eax
	je	.L1154
	jmp	.L1158
.L1153:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#12}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1156
.L1154:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>()
	movq	%rbx, (%rax)
	jmp	.L1156
.L1158:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1156:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<main::{lambda()#13}>(main::{lambda()#13} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<main::{lambda()#13}>(main::{lambda()#13} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<main::{lambda()#13}>(main::{lambda()#13} const&):
.LFB5059:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&)
void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&):
.LFB5060:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#13}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#13}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&):
.LFB5061:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#13}&>, bool>::type std::__invoke_r<bool, main::{lambda()#13}&>(main::{lambda()#13}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5064:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1165
	cmpl	$1, %eax
	je	.L1166
	jmp	.L1170
.L1165:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#13}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1168
.L1166:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>()
	movq	%rbx, (%rax)
	jmp	.L1168
.L1170:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1168:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<main::{lambda()#14}>(main::{lambda()#14} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<main::{lambda()#14}>(main::{lambda()#14} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<main::{lambda()#14}>(main::{lambda()#14} const&):
.LFB5065:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&)
void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&):
.LFB5066:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#14}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#14}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&):
.LFB5067:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#14}&>, bool>::type std::__invoke_r<bool, main::{lambda()#14}&>(main::{lambda()#14}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5070:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1177
	cmpl	$1, %eax
	je	.L1178
	jmp	.L1182
.L1177:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#14}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1180
.L1178:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>()
	movq	%rbx, (%rax)
	jmp	.L1180
.L1182:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1180:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<main::{lambda()#15}>(main::{lambda()#15} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<main::{lambda()#15}>(main::{lambda()#15} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<main::{lambda()#15}>(main::{lambda()#15} const&):
.LFB5071:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&)
void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&):
.LFB5072:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#15}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#15}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&):
.LFB5073:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#15}&>, bool>::type std::__invoke_r<bool, main::{lambda()#15}&>(main::{lambda()#15}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5076:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1189
	cmpl	$1, %eax
	je	.L1190
	jmp	.L1194
.L1189:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#15}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1192
.L1190:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>()
	movq	%rbx, (%rax)
	jmp	.L1192
.L1194:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1192:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<main::{lambda()#16}>(main::{lambda()#16} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<main::{lambda()#16}>(main::{lambda()#16} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<main::{lambda()#16}>(main::{lambda()#16} const&):
.LFB5077:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&)
void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&):
.LFB5078:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#16}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#16}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&):
.LFB5079:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#16}&>, bool>::type std::__invoke_r<bool, main::{lambda()#16}&>(main::{lambda()#16}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5082:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1201
	cmpl	$1, %eax
	je	.L1202
	jmp	.L1206
.L1201:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#16}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1204
.L1202:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>()
	movq	%rbx, (%rax)
	jmp	.L1204
.L1206:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1204:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_not_empty_function<main::{lambda()#17}>(main::{lambda()#17} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_not_empty_function<main::{lambda()#17}>(main::{lambda()#17} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_not_empty_function<main::{lambda()#17}>(main::{lambda()#17} const&):
.LFB5083:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&)
void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&):
.LFB5084:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#17}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#17}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#17}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#17}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#17}>::_M_invoke(std::_Any_data const&):
.LFB5085:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#17}&>, bool>::type std::__invoke_r<bool, main::{lambda()#17}&>(main::{lambda()#17}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5088:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1213
	cmpl	$1, %eax
	je	.L1214
	jmp	.L1218
.L1213:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#17}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1216
.L1214:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}*& std::_Any_data::_M_access<main::{lambda()#17}*>()
	movq	%rbx, (%rax)
	jmp	.L1216
.L1218:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1216:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_not_empty_function<main::{lambda()#18}>(main::{lambda()#18} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_not_empty_function<main::{lambda()#18}>(main::{lambda()#18} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_not_empty_function<main::{lambda()#18}>(main::{lambda()#18} const&):
.LFB5089:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&)
void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&):
.LFB5090:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#18}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#18}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#18}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#18}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#18}>::_M_invoke(std::_Any_data const&):
.LFB5091:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#18}&>, bool>::type std::__invoke_r<bool, main::{lambda()#18}&>(main::{lambda()#18}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5094:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1225
	cmpl	$1, %eax
	je	.L1226
	jmp	.L1230
.L1225:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#18}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1228
.L1226:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}*& std::_Any_data::_M_access<main::{lambda()#18}*>()
	movq	%rbx, (%rax)
	jmp	.L1228
.L1230:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1228:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_not_empty_function<main::{lambda()#19}>(main::{lambda()#19} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_not_empty_function<main::{lambda()#19}>(main::{lambda()#19} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_not_empty_function<main::{lambda()#19}>(main::{lambda()#19} const&):
.LFB5095:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&)
void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&):
.LFB5096:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#19}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#19}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#19}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#19}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#19}>::_M_invoke(std::_Any_data const&):
.LFB5097:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#19}&>, bool>::type std::__invoke_r<bool, main::{lambda()#19}&>(main::{lambda()#19}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5100:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1237
	cmpl	$1, %eax
	je	.L1238
	jmp	.L1242
.L1237:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#19}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1240
.L1238:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}*& std::_Any_data::_M_access<main::{lambda()#19}*>()
	movq	%rbx, (%rax)
	jmp	.L1240
.L1242:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1240:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_not_empty_function<main::{lambda()#20}>(main::{lambda()#20} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_not_empty_function<main::{lambda()#20}>(main::{lambda()#20} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_not_empty_function<main::{lambda()#20}>(main::{lambda()#20} const&):
.LFB5101:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&)
void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&):
.LFB5102:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#20}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#20}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#20}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#20}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#20}>::_M_invoke(std::_Any_data const&):
.LFB5103:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#20}&>, bool>::type std::__invoke_r<bool, main::{lambda()#20}&>(main::{lambda()#20}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5106:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1249
	cmpl	$1, %eax
	je	.L1250
	jmp	.L1254
.L1249:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#20}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1252
.L1250:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}*& std::_Any_data::_M_access<main::{lambda()#20}*>()
	movq	%rbx, (%rax)
	jmp	.L1252
.L1254:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1252:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_not_empty_function<main::{lambda()#21}>(main::{lambda()#21} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_not_empty_function<main::{lambda()#21}>(main::{lambda()#21} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_not_empty_function<main::{lambda()#21}>(main::{lambda()#21} const&):
.LFB5107:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&)
void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&):
.LFB5108:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#21}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#21}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#21}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#21}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#21}>::_M_invoke(std::_Any_data const&):
.LFB5109:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#21}&>, bool>::type std::__invoke_r<bool, main::{lambda()#21}&>(main::{lambda()#21}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5112:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1261
	cmpl	$1, %eax
	je	.L1262
	jmp	.L1266
.L1261:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#21}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1264
.L1262:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}*& std::_Any_data::_M_access<main::{lambda()#21}*>()
	movq	%rbx, (%rax)
	jmp	.L1264
.L1266:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1264:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_not_empty_function<main::{lambda()#22}>(main::{lambda()#22} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_not_empty_function<main::{lambda()#22}>(main::{lambda()#22} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_not_empty_function<main::{lambda()#22}>(main::{lambda()#22} const&):
.LFB5113:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&)
void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&):
.LFB5114:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#22}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#22}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#22}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#22}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#22}>::_M_invoke(std::_Any_data const&):
.LFB5115:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#22}&>, bool>::type std::__invoke_r<bool, main::{lambda()#22}&>(main::{lambda()#22}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5118:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1273
	cmpl	$1, %eax
	je	.L1274
	jmp	.L1278
.L1273:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#22}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1276
.L1274:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}*& std::_Any_data::_M_access<main::{lambda()#22}*>()
	movq	%rbx, (%rax)
	jmp	.L1276
.L1278:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1276:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_not_empty_function<main::{lambda()#23}>(main::{lambda()#23} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_not_empty_function<main::{lambda()#23}>(main::{lambda()#23} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_not_empty_function<main::{lambda()#23}>(main::{lambda()#23} const&):
.LFB5119:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&)
void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&):
.LFB5120:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#23}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#23}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#23}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#23}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#23}>::_M_invoke(std::_Any_data const&):
.LFB5121:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#23}&>, bool>::type std::__invoke_r<bool, main::{lambda()#23}&>(main::{lambda()#23}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5124:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1285
	cmpl	$1, %eax
	je	.L1286
	jmp	.L1290
.L1285:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#23}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1288
.L1286:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}*& std::_Any_data::_M_access<main::{lambda()#23}*>()
	movq	%rbx, (%rax)
	jmp	.L1288
.L1290:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1288:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_not_empty_function<main::{lambda()#24}>(main::{lambda()#24} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_not_empty_function<main::{lambda()#24}>(main::{lambda()#24} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_not_empty_function<main::{lambda()#24}>(main::{lambda()#24} const&):
.LFB5125:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&)
void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&):
.LFB5126:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#24}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#24}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#24}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#24}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#24}>::_M_invoke(std::_Any_data const&):
.LFB5127:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#24}&>, bool>::type std::__invoke_r<bool, main::{lambda()#24}&>(main::{lambda()#24}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5130:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1297
	cmpl	$1, %eax
	je	.L1298
	jmp	.L1302
.L1297:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#24}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1300
.L1298:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}*& std::_Any_data::_M_access<main::{lambda()#24}*>()
	movq	%rbx, (%rax)
	jmp	.L1300
.L1302:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1300:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_not_empty_function<main::{lambda()#25}>(main::{lambda()#25} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_not_empty_function<main::{lambda()#25}>(main::{lambda()#25} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_not_empty_function<main::{lambda()#25}>(main::{lambda()#25} const&):
.LFB5131:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&)
void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&):
.LFB5132:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#25}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#25}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#25}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#25}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#25}>::_M_invoke(std::_Any_data const&):
.LFB5133:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#25}&>, bool>::type std::__invoke_r<bool, main::{lambda()#25}&>(main::{lambda()#25}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5136:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1309
	cmpl	$1, %eax
	je	.L1310
	jmp	.L1314
.L1309:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#25}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1312
.L1310:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}*& std::_Any_data::_M_access<main::{lambda()#25}*>()
	movq	%rbx, (%rax)
	jmp	.L1312
.L1314:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1312:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_not_empty_function<main::{lambda()#26}>(main::{lambda()#26} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_not_empty_function<main::{lambda()#26}>(main::{lambda()#26} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_not_empty_function<main::{lambda()#26}>(main::{lambda()#26} const&):
.LFB5137:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&)
void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&):
.LFB5138:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#26}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#26}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#26}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#26}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#26}>::_M_invoke(std::_Any_data const&):
.LFB5139:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#26}&>, bool>::type std::__invoke_r<bool, main::{lambda()#26}&>(main::{lambda()#26}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5142:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1321
	cmpl	$1, %eax
	je	.L1322
	jmp	.L1326
.L1321:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#26}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1324
.L1322:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}*& std::_Any_data::_M_access<main::{lambda()#26}*>()
	movq	%rbx, (%rax)
	jmp	.L1324
.L1326:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1324:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_not_empty_function<main::{lambda()#27}>(main::{lambda()#27} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_not_empty_function<main::{lambda()#27}>(main::{lambda()#27} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_not_empty_function<main::{lambda()#27}>(main::{lambda()#27} const&):
.LFB5143:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&)
void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&):
.LFB5144:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#27}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#27}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#27}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#27}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#27}>::_M_invoke(std::_Any_data const&):
.LFB5145:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#27}&>, bool>::type std::__invoke_r<bool, main::{lambda()#27}&>(main::{lambda()#27}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5148:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1333
	cmpl	$1, %eax
	je	.L1334
	jmp	.L1338
.L1333:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#27}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1336
.L1334:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}*& std::_Any_data::_M_access<main::{lambda()#27}*>()
	movq	%rbx, (%rax)
	jmp	.L1336
.L1338:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1336:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_not_empty_function<main::{lambda()#28}>(main::{lambda()#28} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_not_empty_function<main::{lambda()#28}>(main::{lambda()#28} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_not_empty_function<main::{lambda()#28}>(main::{lambda()#28} const&):
.LFB5149:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&)
void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&):
.LFB5150:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#28}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#28}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#28}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#28}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#28}>::_M_invoke(std::_Any_data const&):
.LFB5151:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#28}&>, bool>::type std::__invoke_r<bool, main::{lambda()#28}&>(main::{lambda()#28}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5154:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1345
	cmpl	$1, %eax
	je	.L1346
	jmp	.L1350
.L1345:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#28}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1348
.L1346:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}*& std::_Any_data::_M_access<main::{lambda()#28}*>()
	movq	%rbx, (%rax)
	jmp	.L1348
.L1350:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1348:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_not_empty_function<main::{lambda()#29}>(main::{lambda()#29} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_not_empty_function<main::{lambda()#29}>(main::{lambda()#29} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_not_empty_function<main::{lambda()#29}>(main::{lambda()#29} const&):
.LFB5155:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&)
void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&):
.LFB5156:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#29}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#29}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#29}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#29}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#29}>::_M_invoke(std::_Any_data const&):
.LFB5157:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#29}&>, bool>::type std::__invoke_r<bool, main::{lambda()#29}&>(main::{lambda()#29}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5160:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1357
	cmpl	$1, %eax
	je	.L1358
	jmp	.L1362
.L1357:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#29}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1360
.L1358:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}*& std::_Any_data::_M_access<main::{lambda()#29}*>()
	movq	%rbx, (%rax)
	jmp	.L1360
.L1362:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1360:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_not_empty_function<main::{lambda()#30}>(main::{lambda()#30} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_not_empty_function<main::{lambda()#30}>(main::{lambda()#30} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_not_empty_function<main::{lambda()#30}>(main::{lambda()#30} const&):
.LFB5161:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&)
void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&):
.LFB5162:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#30}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#30}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#30}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#30}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#30}>::_M_invoke(std::_Any_data const&):
.LFB5163:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#30}&>, bool>::type std::__invoke_r<bool, main::{lambda()#30}&>(main::{lambda()#30}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5166:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1369
	cmpl	$1, %eax
	je	.L1370
	jmp	.L1374
.L1369:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#30}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1372
.L1370:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}*& std::_Any_data::_M_access<main::{lambda()#30}*>()
	movq	%rbx, (%rax)
	jmp	.L1372
.L1374:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1372:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_not_empty_function<main::{lambda()#31}>(main::{lambda()#31} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_not_empty_function<main::{lambda()#31}>(main::{lambda()#31} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_not_empty_function<main::{lambda()#31}>(main::{lambda()#31} const&):
.LFB5167:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&)
void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&):
.LFB5168:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#31}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#31}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#31}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#31}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#31}>::_M_invoke(std::_Any_data const&):
.LFB5169:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#31}&>, bool>::type std::__invoke_r<bool, main::{lambda()#31}&>(main::{lambda()#31}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5172:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1381
	cmpl	$1, %eax
	je	.L1382
	jmp	.L1386
.L1381:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#31}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1384
.L1382:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}*& std::_Any_data::_M_access<main::{lambda()#31}*>()
	movq	%rbx, (%rax)
	jmp	.L1384
.L1386:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1384:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_not_empty_function<main::{lambda()#32}>(main::{lambda()#32} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_not_empty_function<main::{lambda()#32}>(main::{lambda()#32} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_not_empty_function<main::{lambda()#32}>(main::{lambda()#32} const&):
.LFB5173:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&)
void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&):
.LFB5174:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#32}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#32}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#32}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#32}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#32}>::_M_invoke(std::_Any_data const&):
.LFB5175:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#32}&>, bool>::type std::__invoke_r<bool, main::{lambda()#32}&>(main::{lambda()#32}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5178:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1393
	cmpl	$1, %eax
	je	.L1394
	jmp	.L1398
.L1393:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#32}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1396
.L1394:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}*& std::_Any_data::_M_access<main::{lambda()#32}*>()
	movq	%rbx, (%rax)
	jmp	.L1396
.L1398:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1396:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_not_empty_function<main::{lambda()#33}>(main::{lambda()#33} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_not_empty_function<main::{lambda()#33}>(main::{lambda()#33} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_not_empty_function<main::{lambda()#33}>(main::{lambda()#33} const&):
.LFB5179:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&)
void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&):
.LFB5180:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#33}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#33}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#33}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#33}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#33}>::_M_invoke(std::_Any_data const&):
.LFB5181:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#33}&>, bool>::type std::__invoke_r<bool, main::{lambda()#33}&>(main::{lambda()#33}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5184:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1405
	cmpl	$1, %eax
	je	.L1406
	jmp	.L1410
.L1405:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#33}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1408
.L1406:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}*& std::_Any_data::_M_access<main::{lambda()#33}*>()
	movq	%rbx, (%rax)
	jmp	.L1408
.L1410:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1408:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_not_empty_function<main::{lambda()#34}>(main::{lambda()#34} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_not_empty_function<main::{lambda()#34}>(main::{lambda()#34} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_not_empty_function<main::{lambda()#34}>(main::{lambda()#34} const&):
.LFB5185:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&)
void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&):
.LFB5186:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#34}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#34}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#34}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#34}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#34}>::_M_invoke(std::_Any_data const&):
.LFB5187:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#34}&>, bool>::type std::__invoke_r<bool, main::{lambda()#34}&>(main::{lambda()#34}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5190:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1417
	cmpl	$1, %eax
	je	.L1418
	jmp	.L1422
.L1417:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#34}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1420
.L1418:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}*& std::_Any_data::_M_access<main::{lambda()#34}*>()
	movq	%rbx, (%rax)
	jmp	.L1420
.L1422:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1420:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_not_empty_function<main::{lambda()#35}>(main::{lambda()#35} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_not_empty_function<main::{lambda()#35}>(main::{lambda()#35} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_not_empty_function<main::{lambda()#35}>(main::{lambda()#35} const&):
.LFB5191:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&)
void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&):
.LFB5192:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#35}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#35}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#35}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#35}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#35}>::_M_invoke(std::_Any_data const&):
.LFB5193:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#35}&>, bool>::type std::__invoke_r<bool, main::{lambda()#35}&>(main::{lambda()#35}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5196:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1429
	cmpl	$1, %eax
	je	.L1430
	jmp	.L1434
.L1429:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#35}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1432
.L1430:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}*& std::_Any_data::_M_access<main::{lambda()#35}*>()
	movq	%rbx, (%rax)
	jmp	.L1432
.L1434:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1432:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_not_empty_function<main::{lambda()#36}>(main::{lambda()#36} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_not_empty_function<main::{lambda()#36}>(main::{lambda()#36} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_not_empty_function<main::{lambda()#36}>(main::{lambda()#36} const&):
.LFB5197:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&)
void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&):
.LFB5198:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#36}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#36}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#36}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#36}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#36}>::_M_invoke(std::_Any_data const&):
.LFB5199:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#36}&>, bool>::type std::__invoke_r<bool, main::{lambda()#36}&>(main::{lambda()#36}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5202:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1441
	cmpl	$1, %eax
	je	.L1442
	jmp	.L1446
.L1441:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#36}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1444
.L1442:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}*& std::_Any_data::_M_access<main::{lambda()#36}*>()
	movq	%rbx, (%rax)
	jmp	.L1444
.L1446:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1444:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_not_empty_function<main::{lambda()#37}>(main::{lambda()#37} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_not_empty_function<main::{lambda()#37}>(main::{lambda()#37} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_not_empty_function<main::{lambda()#37}>(main::{lambda()#37} const&):
.LFB5203:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&)
void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&):
.LFB5204:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#37}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#37}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#37}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#37}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#37}>::_M_invoke(std::_Any_data const&):
.LFB5205:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#37}&>, bool>::type std::__invoke_r<bool, main::{lambda()#37}&>(main::{lambda()#37}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5208:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1453
	cmpl	$1, %eax
	je	.L1454
	jmp	.L1458
.L1453:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#37}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1456
.L1454:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}*& std::_Any_data::_M_access<main::{lambda()#37}*>()
	movq	%rbx, (%rax)
	jmp	.L1456
.L1458:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1456:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_not_empty_function<main::{lambda()#38}>(main::{lambda()#38} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_not_empty_function<main::{lambda()#38}>(main::{lambda()#38} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_not_empty_function<main::{lambda()#38}>(main::{lambda()#38} const&):
.LFB5209:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&)
void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&):
.LFB5210:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#38}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#38}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#38}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#38}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#38}>::_M_invoke(std::_Any_data const&):
.LFB5211:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#38}&>, bool>::type std::__invoke_r<bool, main::{lambda()#38}&>(main::{lambda()#38}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5214:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1465
	cmpl	$1, %eax
	je	.L1466
	jmp	.L1470
.L1465:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#38}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1468
.L1466:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}*& std::_Any_data::_M_access<main::{lambda()#38}*>()
	movq	%rbx, (%rax)
	jmp	.L1468
.L1470:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1468:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_not_empty_function<main::{lambda()#39}>(main::{lambda()#39} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_not_empty_function<main::{lambda()#39}>(main::{lambda()#39} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_not_empty_function<main::{lambda()#39}>(main::{lambda()#39} const&):
.LFB5215:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&)
void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&):
.LFB5216:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#39}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#39}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#39}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#39}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#39}>::_M_invoke(std::_Any_data const&):
.LFB5217:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#39}&>, bool>::type std::__invoke_r<bool, main::{lambda()#39}&>(main::{lambda()#39}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5220:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1477
	cmpl	$1, %eax
	je	.L1478
	jmp	.L1482
.L1477:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#39}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1480
.L1478:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}*& std::_Any_data::_M_access<main::{lambda()#39}*>()
	movq	%rbx, (%rax)
	jmp	.L1480
.L1482:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1480:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_not_empty_function<main::{lambda()#40}>(main::{lambda()#40} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_not_empty_function<main::{lambda()#40}>(main::{lambda()#40} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_not_empty_function<main::{lambda()#40}>(main::{lambda()#40} const&):
.LFB5221:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&)
void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&):
.LFB5222:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#40}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#40}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#40}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#40}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#40}>::_M_invoke(std::_Any_data const&):
.LFB5223:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#40}&>, bool>::type std::__invoke_r<bool, main::{lambda()#40}&>(main::{lambda()#40}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5226:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1489
	cmpl	$1, %eax
	je	.L1490
	jmp	.L1494
.L1489:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#40}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1492
.L1490:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}*& std::_Any_data::_M_access<main::{lambda()#40}*>()
	movq	%rbx, (%rax)
	jmp	.L1492
.L1494:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1492:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_not_empty_function<main::{lambda()#41}>(main::{lambda()#41} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_not_empty_function<main::{lambda()#41}>(main::{lambda()#41} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_not_empty_function<main::{lambda()#41}>(main::{lambda()#41} const&):
.LFB5227:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&)
void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&):
.LFB5228:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#41}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#41}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#41}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#41}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#41}>::_M_invoke(std::_Any_data const&):
.LFB5229:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#41}&>, bool>::type std::__invoke_r<bool, main::{lambda()#41}&>(main::{lambda()#41}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5232:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1501
	cmpl	$1, %eax
	je	.L1502
	jmp	.L1506
.L1501:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#41}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1504
.L1502:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}*& std::_Any_data::_M_access<main::{lambda()#41}*>()
	movq	%rbx, (%rax)
	jmp	.L1504
.L1506:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1504:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_not_empty_function<main::{lambda()#42}>(main::{lambda()#42} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_not_empty_function<main::{lambda()#42}>(main::{lambda()#42} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_not_empty_function<main::{lambda()#42}>(main::{lambda()#42} const&):
.LFB5233:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&)
void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&):
.LFB5234:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#42}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#42}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#42}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#42}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#42}>::_M_invoke(std::_Any_data const&):
.LFB5235:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#42}&>, bool>::type std::__invoke_r<bool, main::{lambda()#42}&>(main::{lambda()#42}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5238:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1513
	cmpl	$1, %eax
	je	.L1514
	jmp	.L1518
.L1513:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#42}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1516
.L1514:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}*& std::_Any_data::_M_access<main::{lambda()#42}*>()
	movq	%rbx, (%rax)
	jmp	.L1516
.L1518:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1516:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_not_empty_function<main::{lambda()#43}>(main::{lambda()#43} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_not_empty_function<main::{lambda()#43}>(main::{lambda()#43} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_not_empty_function<main::{lambda()#43}>(main::{lambda()#43} const&):
.LFB5239:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&)
void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&):
.LFB5240:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#43}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#43}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#43}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#43}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#43}>::_M_invoke(std::_Any_data const&):
.LFB5241:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#43}&>, bool>::type std::__invoke_r<bool, main::{lambda()#43}&>(main::{lambda()#43}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5244:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1525
	cmpl	$1, %eax
	je	.L1526
	jmp	.L1530
.L1525:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#43}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1528
.L1526:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}*& std::_Any_data::_M_access<main::{lambda()#43}*>()
	movq	%rbx, (%rax)
	jmp	.L1528
.L1530:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1528:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::__new_allocator()
	.def	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::__new_allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::__new_allocator()
std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::__new_allocator():
.LFB5246:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~__new_allocator()
	.def	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~__new_allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~__new_allocator()
std::__new_allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~__new_allocator():
.LFB5249:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC1ISA_EERKSaIT_E,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
	.def	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&):
.LFB5253:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
	.def	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator():
.LFB5255:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
	.def	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator()
std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~allocator():
.LFB5256:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EEC2EOSaISt10_List_nodeISA_EE,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_base(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_base(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_base(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_base(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&):
.LFB5258:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	32(%rbp), %rbx
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
	movq	%rax, %rdx
	movq	%rbx, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::_List_impl(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt16initializer_listISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const
	.def	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const
std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const:
.LFB5260:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt16initializer_listISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const
	.def	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const
std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const:
.LFB5261:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const
	salq	$6, %rax
	addq	%rbx, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE22_M_initialize_dispatchIPKSA_EEvT_SG_St12__false_type,"x"
	.linkonce discard
	.align 2
	.globl	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_initialize_dispatch<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::__false_type)
	.def	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_initialize_dispatch<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::__false_type);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_initialize_dispatch<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::__false_type)
void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_initialize_dispatch<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::__false_type):
.LFB5262:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	jmp	.L1542
.L1543:
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >& std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	addq	$64, 24(%rbp)
.L1542:
	movq	24(%rbp), %rax
	cmpq	32(%rbp), %rax
	jne	.L1543
	nop
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE8_M_clearEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_clear()
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_clear();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_clear()
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_clear():
.LFB5263:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$64, %rsp
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	jmp	.L1545
.L1546:
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr()
	movq	%rax, -24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator()
	movq	%rax, %rcx
	movq	-24(%rbp), %rax
	movq	%rax, %rdx
	call	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
	movq	-16(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_put_node(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
.L1545:
	movq	16(%rbp), %rax
	cmpq	%rax, -8(%rbp)
	jne	.L1546
	nop
	nop
	addq	$64, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_not_empty_function<main::{lambda()#44}>(main::{lambda()#44} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_not_empty_function<main::{lambda()#44}>(main::{lambda()#44} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_not_empty_function<main::{lambda()#44}>(main::{lambda()#44} const&):
.LFB5265:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&)
void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&):
.LFB5266:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#44}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#44}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#44}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#44}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#44}>::_M_invoke(std::_Any_data const&):
.LFB5267:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#44}&>, bool>::type std::__invoke_r<bool, main::{lambda()#44}&>(main::{lambda()#44}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5270:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1553
	cmpl	$1, %eax
	je	.L1554
	jmp	.L1558
.L1553:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#44}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1556
.L1554:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}*& std::_Any_data::_M_access<main::{lambda()#44}*>()
	movq	%rbx, (%rax)
	jmp	.L1556
.L1558:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1556:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_not_empty_function<main::{lambda()#45}>(main::{lambda()#45} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_not_empty_function<main::{lambda()#45}>(main::{lambda()#45} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_not_empty_function<main::{lambda()#45}>(main::{lambda()#45} const&):
.LFB5271:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&)
void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&):
.LFB5272:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#45}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#45}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#45}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#45}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#45}>::_M_invoke(std::_Any_data const&):
.LFB5273:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#45}&>, bool>::type std::__invoke_r<bool, main::{lambda()#45}&>(main::{lambda()#45}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5276:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1565
	cmpl	$1, %eax
	je	.L1566
	jmp	.L1570
.L1565:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#45}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1568
.L1566:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}*& std::_Any_data::_M_access<main::{lambda()#45}*>()
	movq	%rbx, (%rax)
	jmp	.L1568
.L1570:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1568:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_not_empty_function<main::{lambda()#46}>(main::{lambda()#46} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_not_empty_function<main::{lambda()#46}>(main::{lambda()#46} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_not_empty_function<main::{lambda()#46}>(main::{lambda()#46} const&):
.LFB5277:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&)
void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&):
.LFB5278:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#46}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#46}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#46}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#46}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#46}>::_M_invoke(std::_Any_data const&):
.LFB5279:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#46}&>, bool>::type std::__invoke_r<bool, main::{lambda()#46}&>(main::{lambda()#46}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5282:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1577
	cmpl	$1, %eax
	je	.L1578
	jmp	.L1582
.L1577:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#46}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1580
.L1578:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}*& std::_Any_data::_M_access<main::{lambda()#46}*>()
	movq	%rbx, (%rax)
	jmp	.L1580
.L1582:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1580:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_not_empty_function<main::{lambda()#47}>(main::{lambda()#47} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_not_empty_function<main::{lambda()#47}>(main::{lambda()#47} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_not_empty_function<main::{lambda()#47}>(main::{lambda()#47} const&):
.LFB5283:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&)
void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&):
.LFB5284:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#47}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#47}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#47}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#47}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#47}>::_M_invoke(std::_Any_data const&):
.LFB5285:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#47}&>, bool>::type std::__invoke_r<bool, main::{lambda()#47}&>(main::{lambda()#47}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5288:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1589
	cmpl	$1, %eax
	je	.L1590
	jmp	.L1594
.L1589:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#47}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1592
.L1590:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}*& std::_Any_data::_M_access<main::{lambda()#47}*>()
	movq	%rbx, (%rax)
	jmp	.L1592
.L1594:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1592:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_not_empty_function<main::{lambda()#48}>(main::{lambda()#48} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_not_empty_function<main::{lambda()#48}>(main::{lambda()#48} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_not_empty_function<main::{lambda()#48}>(main::{lambda()#48} const&):
.LFB5289:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&)
void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&):
.LFB5290:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#48}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#48}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#48}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#48}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#48}>::_M_invoke(std::_Any_data const&):
.LFB5291:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#48}&>, bool>::type std::__invoke_r<bool, main::{lambda()#48}&>(main::{lambda()#48}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5294:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1601
	cmpl	$1, %eax
	je	.L1602
	jmp	.L1606
.L1601:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#48}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1604
.L1602:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}*& std::_Any_data::_M_access<main::{lambda()#48}*>()
	movq	%rbx, (%rax)
	jmp	.L1604
.L1606:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1604:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_not_empty_function<main::{lambda()#49}>(main::{lambda()#49} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_not_empty_function<main::{lambda()#49}>(main::{lambda()#49} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_not_empty_function<main::{lambda()#49}>(main::{lambda()#49} const&):
.LFB5295:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&)
void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&):
.LFB5296:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#49}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#49}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#49}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#49}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#49}>::_M_invoke(std::_Any_data const&):
.LFB5297:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#49}&>, bool>::type std::__invoke_r<bool, main::{lambda()#49}&>(main::{lambda()#49}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5300:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1613
	cmpl	$1, %eax
	je	.L1614
	jmp	.L1618
.L1613:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#49}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1616
.L1614:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}*& std::_Any_data::_M_access<main::{lambda()#49}*>()
	movq	%rbx, (%rax)
	jmp	.L1616
.L1618:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1616:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_not_empty_function<main::{lambda()#50}>(main::{lambda()#50} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_not_empty_function<main::{lambda()#50}>(main::{lambda()#50} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_not_empty_function<main::{lambda()#50}>(main::{lambda()#50} const&):
.LFB5301:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&)
void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&):
.LFB5302:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#50}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#50}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#50}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#50}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#50}>::_M_invoke(std::_Any_data const&):
.LFB5303:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#50}&>, bool>::type std::__invoke_r<bool, main::{lambda()#50}&>(main::{lambda()#50}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5306:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1625
	cmpl	$1, %eax
	je	.L1626
	jmp	.L1630
.L1625:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#50}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1628
.L1626:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}*& std::_Any_data::_M_access<main::{lambda()#50}*>()
	movq	%rbx, (%rax)
	jmp	.L1628
.L1630:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1628:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_not_empty_function<main::{lambda()#51}>(main::{lambda()#51} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_not_empty_function<main::{lambda()#51}>(main::{lambda()#51} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_not_empty_function<main::{lambda()#51}>(main::{lambda()#51} const&):
.LFB5307:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&)
void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&):
.LFB5308:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#51}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#51}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#51}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#51}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#51}>::_M_invoke(std::_Any_data const&):
.LFB5309:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#51}&>, bool>::type std::__invoke_r<bool, main::{lambda()#51}&>(main::{lambda()#51}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5312:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1637
	cmpl	$1, %eax
	je	.L1638
	jmp	.L1642
.L1637:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#51}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1640
.L1638:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}*& std::_Any_data::_M_access<main::{lambda()#51}*>()
	movq	%rbx, (%rax)
	jmp	.L1640
.L1642:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1640:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_not_empty_function<main::{lambda()#52}>(main::{lambda()#52} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_not_empty_function<main::{lambda()#52}>(main::{lambda()#52} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_not_empty_function<main::{lambda()#52}>(main::{lambda()#52} const&):
.LFB5313:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&)
void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&):
.LFB5314:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#52}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#52}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#52}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#52}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#52}>::_M_invoke(std::_Any_data const&):
.LFB5315:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#52}&>, bool>::type std::__invoke_r<bool, main::{lambda()#52}&>(main::{lambda()#52}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5318:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1649
	cmpl	$1, %eax
	je	.L1650
	jmp	.L1654
.L1649:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#52}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1652
.L1650:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}*& std::_Any_data::_M_access<main::{lambda()#52}*>()
	movq	%rbx, (%rax)
	jmp	.L1652
.L1654:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1652:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_not_empty_function<main::{lambda()#53}>(main::{lambda()#53} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_not_empty_function<main::{lambda()#53}>(main::{lambda()#53} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_not_empty_function<main::{lambda()#53}>(main::{lambda()#53} const&):
.LFB5319:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&)
void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&):
.LFB5320:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#53}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#53}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#53}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#53}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#53}>::_M_invoke(std::_Any_data const&):
.LFB5321:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#53}&>, bool>::type std::__invoke_r<bool, main::{lambda()#53}&>(main::{lambda()#53}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5324:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1661
	cmpl	$1, %eax
	je	.L1662
	jmp	.L1666
.L1661:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#53}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1664
.L1662:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}*& std::_Any_data::_M_access<main::{lambda()#53}*>()
	movq	%rbx, (%rax)
	jmp	.L1664
.L1666:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1664:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_not_empty_function<main::{lambda()#54}>(main::{lambda()#54} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_not_empty_function<main::{lambda()#54}>(main::{lambda()#54} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_not_empty_function<main::{lambda()#54}>(main::{lambda()#54} const&):
.LFB5325:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&)
void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&):
.LFB5326:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#54}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#54}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#54}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#54}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#54}>::_M_invoke(std::_Any_data const&):
.LFB5327:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#54}&>, bool>::type std::__invoke_r<bool, main::{lambda()#54}&>(main::{lambda()#54}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5330:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1673
	cmpl	$1, %eax
	je	.L1674
	jmp	.L1678
.L1673:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#54}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1676
.L1674:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}*& std::_Any_data::_M_access<main::{lambda()#54}*>()
	movq	%rbx, (%rax)
	jmp	.L1676
.L1678:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1676:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_not_empty_function<main::{lambda()#55}>(main::{lambda()#55} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_not_empty_function<main::{lambda()#55}>(main::{lambda()#55} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_not_empty_function<main::{lambda()#55}>(main::{lambda()#55} const&):
.LFB5331:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&)
void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&):
.LFB5332:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#55}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#55}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#55}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#55}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#55}>::_M_invoke(std::_Any_data const&):
.LFB5333:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#55}&>, bool>::type std::__invoke_r<bool, main::{lambda()#55}&>(main::{lambda()#55}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5336:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1685
	cmpl	$1, %eax
	je	.L1686
	jmp	.L1690
.L1685:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#55}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1688
.L1686:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}*& std::_Any_data::_M_access<main::{lambda()#55}*>()
	movq	%rbx, (%rax)
	jmp	.L1688
.L1690:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1688:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_not_empty_function<main::{lambda()#56}>(main::{lambda()#56} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_not_empty_function<main::{lambda()#56}>(main::{lambda()#56} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_not_empty_function<main::{lambda()#56}>(main::{lambda()#56} const&):
.LFB5337:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&)
void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&):
.LFB5338:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#56}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#56}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#56}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#56}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#56}>::_M_invoke(std::_Any_data const&):
.LFB5339:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#56}&>, bool>::type std::__invoke_r<bool, main::{lambda()#56}&>(main::{lambda()#56}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5342:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1697
	cmpl	$1, %eax
	je	.L1698
	jmp	.L1702
.L1697:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#56}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1700
.L1698:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}*& std::_Any_data::_M_access<main::{lambda()#56}*>()
	movq	%rbx, (%rax)
	jmp	.L1700
.L1702:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1700:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_not_empty_function<main::{lambda()#57}>(main::{lambda()#57} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_not_empty_function<main::{lambda()#57}>(main::{lambda()#57} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_not_empty_function<main::{lambda()#57}>(main::{lambda()#57} const&):
.LFB5343:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&)
void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&):
.LFB5344:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#57}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#57}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#57}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#57}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#57}>::_M_invoke(std::_Any_data const&):
.LFB5345:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#57}&>, bool>::type std::__invoke_r<bool, main::{lambda()#57}&>(main::{lambda()#57}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5348:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1709
	cmpl	$1, %eax
	je	.L1710
	jmp	.L1714
.L1709:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#57}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1712
.L1710:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}*& std::_Any_data::_M_access<main::{lambda()#57}*>()
	movq	%rbx, (%rax)
	jmp	.L1712
.L1714:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1712:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_not_empty_function<main::{lambda()#58}>(main::{lambda()#58} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_not_empty_function<main::{lambda()#58}>(main::{lambda()#58} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_not_empty_function<main::{lambda()#58}>(main::{lambda()#58} const&):
.LFB5349:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&)
void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&):
.LFB5350:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#58}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#58}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#58}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#58}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#58}>::_M_invoke(std::_Any_data const&):
.LFB5351:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#58}&>, bool>::type std::__invoke_r<bool, main::{lambda()#58}&>(main::{lambda()#58}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5354:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1721
	cmpl	$1, %eax
	je	.L1722
	jmp	.L1726
.L1721:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#58}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1724
.L1722:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}*& std::_Any_data::_M_access<main::{lambda()#58}*>()
	movq	%rbx, (%rax)
	jmp	.L1724
.L1726:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1724:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_not_empty_function<main::{lambda()#59}>(main::{lambda()#59} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_not_empty_function<main::{lambda()#59}>(main::{lambda()#59} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_not_empty_function<main::{lambda()#59}>(main::{lambda()#59} const&):
.LFB5355:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&)
void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&):
.LFB5356:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#59}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#59}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#59}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#59}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#59}>::_M_invoke(std::_Any_data const&):
.LFB5357:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#59}&>, bool>::type std::__invoke_r<bool, main::{lambda()#59}&>(main::{lambda()#59}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5360:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1733
	cmpl	$1, %eax
	je	.L1734
	jmp	.L1738
.L1733:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#59}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1736
.L1734:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}*& std::_Any_data::_M_access<main::{lambda()#59}*>()
	movq	%rbx, (%rax)
	jmp	.L1736
.L1738:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1736:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_not_empty_function<main::{lambda()#60}>(main::{lambda()#60} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_not_empty_function<main::{lambda()#60}>(main::{lambda()#60} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_not_empty_function<main::{lambda()#60}>(main::{lambda()#60} const&):
.LFB5361:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&)
void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&):
.LFB5362:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#60}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#60}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#60}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#60}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#60}>::_M_invoke(std::_Any_data const&):
.LFB5363:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#60}&>, bool>::type std::__invoke_r<bool, main::{lambda()#60}&>(main::{lambda()#60}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5366:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1745
	cmpl	$1, %eax
	je	.L1746
	jmp	.L1750
.L1745:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#60}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1748
.L1746:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}*& std::_Any_data::_M_access<main::{lambda()#60}*>()
	movq	%rbx, (%rax)
	jmp	.L1748
.L1750:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1748:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_not_empty_function<main::{lambda()#61}>(main::{lambda()#61} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_not_empty_function<main::{lambda()#61}>(main::{lambda()#61} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_not_empty_function<main::{lambda()#61}>(main::{lambda()#61} const&):
.LFB5367:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&)
void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&):
.LFB5368:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#61}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#61}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#61}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#61}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#61}>::_M_invoke(std::_Any_data const&):
.LFB5369:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#61}&>, bool>::type std::__invoke_r<bool, main::{lambda()#61}&>(main::{lambda()#61}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5372:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1757
	cmpl	$1, %eax
	je	.L1758
	jmp	.L1762
.L1757:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#61}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1760
.L1758:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}*& std::_Any_data::_M_access<main::{lambda()#61}*>()
	movq	%rbx, (%rax)
	jmp	.L1760
.L1762:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1760:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_not_empty_function<main::{lambda()#62}>(main::{lambda()#62} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_not_empty_function<main::{lambda()#62}>(main::{lambda()#62} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_not_empty_function<main::{lambda()#62}>(main::{lambda()#62} const&):
.LFB5373:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&)
void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&):
.LFB5374:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#62}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#62}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#62}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#62}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#62}>::_M_invoke(std::_Any_data const&):
.LFB5375:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#62}&>, bool>::type std::__invoke_r<bool, main::{lambda()#62}&>(main::{lambda()#62}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5378:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1769
	cmpl	$1, %eax
	je	.L1770
	jmp	.L1774
.L1769:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#62}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1772
.L1770:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}*& std::_Any_data::_M_access<main::{lambda()#62}*>()
	movq	%rbx, (%rax)
	jmp	.L1772
.L1774:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1772:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_not_empty_function<main::{lambda()#63}>(main::{lambda()#63} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_not_empty_function<main::{lambda()#63}>(main::{lambda()#63} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_not_empty_function<main::{lambda()#63}>(main::{lambda()#63} const&):
.LFB5379:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&)
void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&):
.LFB5380:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#63}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#63}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#63}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#63}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#63}>::_M_invoke(std::_Any_data const&):
.LFB5381:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#63}&>, bool>::type std::__invoke_r<bool, main::{lambda()#63}&>(main::{lambda()#63}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5384:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1781
	cmpl	$1, %eax
	je	.L1782
	jmp	.L1786
.L1781:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#63}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1784
.L1782:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}*& std::_Any_data::_M_access<main::{lambda()#63}*>()
	movq	%rbx, (%rax)
	jmp	.L1784
.L1786:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1784:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_not_empty_function<main::{lambda()#64}>(main::{lambda()#64} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_not_empty_function<main::{lambda()#64}>(main::{lambda()#64} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_not_empty_function<main::{lambda()#64}>(main::{lambda()#64} const&):
.LFB5385:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&)
void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&):
.LFB5386:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#64}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#64}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#64}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#64}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#64}>::_M_invoke(std::_Any_data const&):
.LFB5387:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#64}&>, bool>::type std::__invoke_r<bool, main::{lambda()#64}&>(main::{lambda()#64}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5390:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1793
	cmpl	$1, %eax
	je	.L1794
	jmp	.L1798
.L1793:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#64}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1796
.L1794:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}*& std::_Any_data::_M_access<main::{lambda()#64}*>()
	movq	%rbx, (%rax)
	jmp	.L1796
.L1798:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1796:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_not_empty_function<main::{lambda()#65}>(main::{lambda()#65} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_not_empty_function<main::{lambda()#65}>(main::{lambda()#65} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_not_empty_function<main::{lambda()#65}>(main::{lambda()#65} const&):
.LFB5391:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&)
void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&):
.LFB5392:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#65}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#65}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#65}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#65}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#65}>::_M_invoke(std::_Any_data const&):
.LFB5393:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#65}&>, bool>::type std::__invoke_r<bool, main::{lambda()#65}&>(main::{lambda()#65}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5396:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1805
	cmpl	$1, %eax
	je	.L1806
	jmp	.L1810
.L1805:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#65}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1808
.L1806:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}*& std::_Any_data::_M_access<main::{lambda()#65}*>()
	movq	%rbx, (%rax)
	jmp	.L1808
.L1810:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1808:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_not_empty_function<main::{lambda()#66}>(main::{lambda()#66} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_not_empty_function<main::{lambda()#66}>(main::{lambda()#66} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_not_empty_function<main::{lambda()#66}>(main::{lambda()#66} const&):
.LFB5397:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&)
void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&):
.LFB5398:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#66}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#66}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#66}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#66}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#66}>::_M_invoke(std::_Any_data const&):
.LFB5399:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#66}&>, bool>::type std::__invoke_r<bool, main::{lambda()#66}&>(main::{lambda()#66}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5402:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1817
	cmpl	$1, %eax
	je	.L1818
	jmp	.L1822
.L1817:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#66}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1820
.L1818:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}*& std::_Any_data::_M_access<main::{lambda()#66}*>()
	movq	%rbx, (%rax)
	jmp	.L1820
.L1822:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1820:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_not_empty_function<main::{lambda()#67}>(main::{lambda()#67} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_not_empty_function<main::{lambda()#67}>(main::{lambda()#67} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_not_empty_function<main::{lambda()#67}>(main::{lambda()#67} const&):
.LFB5403:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&)
void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&):
.LFB5404:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#67}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#67}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#67}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#67}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#67}>::_M_invoke(std::_Any_data const&):
.LFB5405:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#67}&>, bool>::type std::__invoke_r<bool, main::{lambda()#67}&>(main::{lambda()#67}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5408:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1829
	cmpl	$1, %eax
	je	.L1830
	jmp	.L1834
.L1829:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#67}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1832
.L1830:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}*& std::_Any_data::_M_access<main::{lambda()#67}*>()
	movq	%rbx, (%rax)
	jmp	.L1832
.L1834:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1832:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_not_empty_function<main::{lambda()#68}>(main::{lambda()#68} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_not_empty_function<main::{lambda()#68}>(main::{lambda()#68} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_not_empty_function<main::{lambda()#68}>(main::{lambda()#68} const&):
.LFB5409:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&)
void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&):
.LFB5410:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#68}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#68}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#68}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#68}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#68}>::_M_invoke(std::_Any_data const&):
.LFB5411:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#68}&>, bool>::type std::__invoke_r<bool, main::{lambda()#68}&>(main::{lambda()#68}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5414:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1841
	cmpl	$1, %eax
	je	.L1842
	jmp	.L1846
.L1841:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#68}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1844
.L1842:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}*& std::_Any_data::_M_access<main::{lambda()#68}*>()
	movq	%rbx, (%rax)
	jmp	.L1844
.L1846:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1844:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_not_empty_function<main::{lambda()#69}>(main::{lambda()#69} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_not_empty_function<main::{lambda()#69}>(main::{lambda()#69} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_not_empty_function<main::{lambda()#69}>(main::{lambda()#69} const&):
.LFB5415:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&)
void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&):
.LFB5416:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#69}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#69}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#69}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#69}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#69}>::_M_invoke(std::_Any_data const&):
.LFB5417:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#69}&>, bool>::type std::__invoke_r<bool, main::{lambda()#69}&>(main::{lambda()#69}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5420:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1853
	cmpl	$1, %eax
	je	.L1854
	jmp	.L1858
.L1853:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#69}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1856
.L1854:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}*& std::_Any_data::_M_access<main::{lambda()#69}*>()
	movq	%rbx, (%rax)
	jmp	.L1856
.L1858:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1856:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_not_empty_function<main::{lambda()#70}>(main::{lambda()#70} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_not_empty_function<main::{lambda()#70}>(main::{lambda()#70} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_not_empty_function<main::{lambda()#70}>(main::{lambda()#70} const&):
.LFB5421:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&)
void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&):
.LFB5422:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#70}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#70}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#70}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#70}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#70}>::_M_invoke(std::_Any_data const&):
.LFB5423:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#70}&>, bool>::type std::__invoke_r<bool, main::{lambda()#70}&>(main::{lambda()#70}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5426:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1865
	cmpl	$1, %eax
	je	.L1866
	jmp	.L1870
.L1865:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#70}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1868
.L1866:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}*& std::_Any_data::_M_access<main::{lambda()#70}*>()
	movq	%rbx, (%rax)
	jmp	.L1868
.L1870:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1868:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_not_empty_function<main::{lambda()#71}>(main::{lambda()#71} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_not_empty_function<main::{lambda()#71}>(main::{lambda()#71} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_not_empty_function<main::{lambda()#71}>(main::{lambda()#71} const&):
.LFB5427:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&)
void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&):
.LFB5428:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#71}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#71}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#71}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#71}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#71}>::_M_invoke(std::_Any_data const&):
.LFB5429:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#71}&>, bool>::type std::__invoke_r<bool, main::{lambda()#71}&>(main::{lambda()#71}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5432:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1877
	cmpl	$1, %eax
	je	.L1878
	jmp	.L1882
.L1877:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#71}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1880
.L1878:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}*& std::_Any_data::_M_access<main::{lambda()#71}*>()
	movq	%rbx, (%rax)
	jmp	.L1880
.L1882:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1880:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_not_empty_function<main::{lambda()#72}>(main::{lambda()#72} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_not_empty_function<main::{lambda()#72}>(main::{lambda()#72} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_not_empty_function<main::{lambda()#72}>(main::{lambda()#72} const&):
.LFB5433:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&)
void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&):
.LFB5434:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#72}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#72}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#72}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#72}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#72}>::_M_invoke(std::_Any_data const&):
.LFB5435:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#72}&>, bool>::type std::__invoke_r<bool, main::{lambda()#72}&>(main::{lambda()#72}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5438:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1889
	cmpl	$1, %eax
	je	.L1890
	jmp	.L1894
.L1889:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#72}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1892
.L1890:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}*& std::_Any_data::_M_access<main::{lambda()#72}*>()
	movq	%rbx, (%rax)
	jmp	.L1892
.L1894:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1892:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_not_empty_function<main::{lambda()#73}>(main::{lambda()#73} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_not_empty_function<main::{lambda()#73}>(main::{lambda()#73} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_not_empty_function<main::{lambda()#73}>(main::{lambda()#73} const&):
.LFB5439:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&)
void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&):
.LFB5440:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#73}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#73}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#73}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#73}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#73}>::_M_invoke(std::_Any_data const&):
.LFB5441:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#73}&>, bool>::type std::__invoke_r<bool, main::{lambda()#73}&>(main::{lambda()#73}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5444:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1901
	cmpl	$1, %eax
	je	.L1902
	jmp	.L1906
.L1901:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#73}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1904
.L1902:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}*& std::_Any_data::_M_access<main::{lambda()#73}*>()
	movq	%rbx, (%rax)
	jmp	.L1904
.L1906:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1904:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_not_empty_function<main::{lambda()#74}>(main::{lambda()#74} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_not_empty_function<main::{lambda()#74}>(main::{lambda()#74} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_not_empty_function<main::{lambda()#74}>(main::{lambda()#74} const&):
.LFB5445:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&)
void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&):
.LFB5446:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#74}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#74}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#74}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#74}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#74}>::_M_invoke(std::_Any_data const&):
.LFB5447:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#74}&>, bool>::type std::__invoke_r<bool, main::{lambda()#74}&>(main::{lambda()#74}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5450:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1913
	cmpl	$1, %eax
	je	.L1914
	jmp	.L1918
.L1913:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#74}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1916
.L1914:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}*& std::_Any_data::_M_access<main::{lambda()#74}*>()
	movq	%rbx, (%rax)
	jmp	.L1916
.L1918:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1916:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_not_empty_function<main::{lambda()#75}>(main::{lambda()#75} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_not_empty_function<main::{lambda()#75}>(main::{lambda()#75} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_not_empty_function<main::{lambda()#75}>(main::{lambda()#75} const&):
.LFB5451:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&)
void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&):
.LFB5452:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#75}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#75}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#75}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#75}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#75}>::_M_invoke(std::_Any_data const&):
.LFB5453:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#75}&>, bool>::type std::__invoke_r<bool, main::{lambda()#75}&>(main::{lambda()#75}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5456:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1925
	cmpl	$1, %eax
	je	.L1926
	jmp	.L1930
.L1925:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#75}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1928
.L1926:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}*& std::_Any_data::_M_access<main::{lambda()#75}*>()
	movq	%rbx, (%rax)
	jmp	.L1928
.L1930:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1928:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_not_empty_function<main::{lambda()#76}>(main::{lambda()#76} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_not_empty_function<main::{lambda()#76}>(main::{lambda()#76} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_not_empty_function<main::{lambda()#76}>(main::{lambda()#76} const&):
.LFB5457:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&)
void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&):
.LFB5458:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#76}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#76}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#76}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#76}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#76}>::_M_invoke(std::_Any_data const&):
.LFB5459:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#76}&>, bool>::type std::__invoke_r<bool, main::{lambda()#76}&>(main::{lambda()#76}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5462:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1937
	cmpl	$1, %eax
	je	.L1938
	jmp	.L1942
.L1937:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#76}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1940
.L1938:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}*& std::_Any_data::_M_access<main::{lambda()#76}*>()
	movq	%rbx, (%rax)
	jmp	.L1940
.L1942:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1940:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_not_empty_function<main::{lambda()#77}>(main::{lambda()#77} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_not_empty_function<main::{lambda()#77}>(main::{lambda()#77} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_not_empty_function<main::{lambda()#77}>(main::{lambda()#77} const&):
.LFB5463:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&)
void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&):
.LFB5464:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#77}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#77}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#77}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#77}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#77}>::_M_invoke(std::_Any_data const&):
.LFB5465:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#77}&>, bool>::type std::__invoke_r<bool, main::{lambda()#77}&>(main::{lambda()#77}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5468:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1949
	cmpl	$1, %eax
	je	.L1950
	jmp	.L1954
.L1949:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#77}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1952
.L1950:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}*& std::_Any_data::_M_access<main::{lambda()#77}*>()
	movq	%rbx, (%rax)
	jmp	.L1952
.L1954:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1952:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_not_empty_function<main::{lambda()#78}>(main::{lambda()#78} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_not_empty_function<main::{lambda()#78}>(main::{lambda()#78} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_not_empty_function<main::{lambda()#78}>(main::{lambda()#78} const&):
.LFB5469:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&)
void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&):
.LFB5470:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#78}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#78}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#78}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#78}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#78}>::_M_invoke(std::_Any_data const&):
.LFB5471:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#78}&>, bool>::type std::__invoke_r<bool, main::{lambda()#78}&>(main::{lambda()#78}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5474:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1961
	cmpl	$1, %eax
	je	.L1962
	jmp	.L1966
.L1961:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#78}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1964
.L1962:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}*& std::_Any_data::_M_access<main::{lambda()#78}*>()
	movq	%rbx, (%rax)
	jmp	.L1964
.L1966:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1964:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_not_empty_function<main::{lambda()#79}>(main::{lambda()#79} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_not_empty_function<main::{lambda()#79}>(main::{lambda()#79} const&)
bool std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_not_empty_function<main::{lambda()#79}>(main::{lambda()#79} const&):
.LFB5475:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	$1, %eax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&)
void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&):
.LFB5476:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
std::is_invocable_r_v<bool, main::{lambda()#79}&>:
	.byte	1
std::is_nothrow_invocable_r_v<bool, main::{lambda()#79}&>:
	.space 1
	.text
	.def	std::_Function_handler<bool (), main::{lambda()#79}>::_M_invoke(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#79}>::_M_invoke(std::_Any_data const&)
std::_Function_handler<bool (), main::{lambda()#79}>::_M_invoke(std::_Any_data const&):
.LFB5477:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rcx
	call	std::enable_if<is_invocable_r_v<bool, main::{lambda()#79}&>, bool>::type std::__invoke_r<bool, main::{lambda()#79}&>(main::{lambda()#79}&)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_handler<bool (), main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_handler<bool (), main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (), main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5480:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	testl	%eax, %eax
	je	.L1973
	cmpl	$1, %eax
	je	.L1974
	jmp	.L1978
.L1973:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#79}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1976
.L1974:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}*& std::_Any_data::_M_access<main::{lambda()#79}*>()
	movq	%rbx, (%rax)
	jmp	.L1976
.L1978:
	movl	48(%rbp), %ecx
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
.L1976:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt20_List_const_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EPKNSt8__detail15_List_node_baseE,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*)
	.def	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*)
std::_List_const_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_const_iterator(std::__detail::_List_node_base const*):
.LFB5483:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	24(%rbp), %rdx
	movq	%rdx, (%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9_M_valptrEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr() const
	.def	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr() const
std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr() const:
.LFB5484:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	addq	$16, %rax
	movq	%rax, %rcx
	call	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,"x"
	.linkonce discard
	.globl	std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
	.def	std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*):
.LFB5512:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	leaq	32(%rbp), %rcx
	call	std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
	movq	32(%rbp), %rax
	movq	40(%rbp), %rdx
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>):
.LFB5556:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&):
.LFB5557:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1} const& std::_Any_data::_M_access<main::{lambda()#1}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1} const* std::__addressof<main::{lambda()#1} const>(main::{lambda()#1} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#1}&>, bool>::type std::__invoke_r<bool, main::{lambda()#1}&>(main::{lambda()#1}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#1}&>, bool>::type std::__invoke_r<bool, main::{lambda()#1}&>(main::{lambda()#1}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#1}&>, bool>::type std::__invoke_r<bool, main::{lambda()#1}&>(main::{lambda()#1}&):
.LFB5558:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}& std::forward<main::{lambda()#1}&>(std::remove_reference<main::{lambda()#1}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#1}&>(std::__invoke_other, main::{lambda()#1}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v,"x"
	.linkonce discard
	.align 2
	.globl	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	.def	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>();	.scl	2;	.type	32;	.endef
	.seh_proc	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
std::type_info const*& std::_Any_data::_M_access<std::type_info const*>():
.LFB5559:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>()
main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>():
.LFB5560:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5561:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L1994
	cmpl	$3, %eax
	jg	.L1995
	cmpl	$2, %eax
	je	.L1996
	cmpl	$2, %eax
	jg	.L1995
	testl	%eax, %eax
	je	.L1997
	cmpl	$1, %eax
	je	.L1998
	jmp	.L1995
.L1997:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#1}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L1995
.L1998:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>()
	movq	%rbx, (%rax)
	jmp	.L1995
.L1996:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&)
	jmp	.L1995
.L1994:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L1995:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2}>(std::_Any_data&, main::{lambda()#2}&&, std::integral_constant<bool, true>):
.LFB5562:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&):
.LFB5563:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2} const& std::_Any_data::_M_access<main::{lambda()#2}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2} const* std::__addressof<main::{lambda()#2} const>(main::{lambda()#2} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#2}&>, bool>::type std::__invoke_r<bool, main::{lambda()#2}&>(main::{lambda()#2}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#2}&>, bool>::type std::__invoke_r<bool, main::{lambda()#2}&>(main::{lambda()#2}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#2}&>, bool>::type std::__invoke_r<bool, main::{lambda()#2}&>(main::{lambda()#2}&):
.LFB5564:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#2}&>(std::__invoke_other, main::{lambda()#2}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>()
main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>():
.LFB5565:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5566:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2008
	cmpl	$3, %eax
	jg	.L2009
	cmpl	$2, %eax
	je	.L2010
	cmpl	$2, %eax
	jg	.L2009
	testl	%eax, %eax
	je	.L2011
	cmpl	$1, %eax
	je	.L2012
	jmp	.L2009
.L2011:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#2}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2009
.L2012:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>()
	movq	%rbx, (%rax)
	jmp	.L2009
.L2010:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&)
	jmp	.L2009
.L2008:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2009:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3}>(std::_Any_data&, main::{lambda()#3}&&, std::integral_constant<bool, true>):
.LFB5567:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}&& std::forward<main::{lambda()#3}>(std::remove_reference<main::{lambda()#3}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&):
.LFB5568:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3} const& std::_Any_data::_M_access<main::{lambda()#3}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3} const* std::__addressof<main::{lambda()#3} const>(main::{lambda()#3} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#3}&>, bool>::type std::__invoke_r<bool, main::{lambda()#3}&>(main::{lambda()#3}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#3}&>, bool>::type std::__invoke_r<bool, main::{lambda()#3}&>(main::{lambda()#3}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#3}&>, bool>::type std::__invoke_r<bool, main::{lambda()#3}&>(main::{lambda()#3}&):
.LFB5569:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#3}&>(std::__invoke_other, main::{lambda()#3}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>()
main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>():
.LFB5570:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5571:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2022
	cmpl	$3, %eax
	jg	.L2023
	cmpl	$2, %eax
	je	.L2024
	cmpl	$2, %eax
	jg	.L2023
	testl	%eax, %eax
	je	.L2025
	cmpl	$1, %eax
	je	.L2026
	jmp	.L2023
.L2025:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#3}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2023
.L2026:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>()
	movq	%rbx, (%rax)
	jmp	.L2023
.L2024:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&)
	jmp	.L2023
.L2022:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2023:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4}>(std::_Any_data&, main::{lambda()#4}&&, std::integral_constant<bool, true>):
.LFB5572:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&):
.LFB5573:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4} const& std::_Any_data::_M_access<main::{lambda()#4}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4} const* std::__addressof<main::{lambda()#4} const>(main::{lambda()#4} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#4}&>, bool>::type std::__invoke_r<bool, main::{lambda()#4}&>(main::{lambda()#4}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#4}&>, bool>::type std::__invoke_r<bool, main::{lambda()#4}&>(main::{lambda()#4}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#4}&>, bool>::type std::__invoke_r<bool, main::{lambda()#4}&>(main::{lambda()#4}&):
.LFB5574:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}& std::forward<main::{lambda()#4}&>(std::remove_reference<main::{lambda()#4}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#4}&>(std::__invoke_other, main::{lambda()#4}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>()
main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>():
.LFB5575:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5576:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2036
	cmpl	$3, %eax
	jg	.L2037
	cmpl	$2, %eax
	je	.L2038
	cmpl	$2, %eax
	jg	.L2037
	testl	%eax, %eax
	je	.L2039
	cmpl	$1, %eax
	je	.L2040
	jmp	.L2037
.L2039:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#4}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2037
.L2040:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>()
	movq	%rbx, (%rax)
	jmp	.L2037
.L2038:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&)
	jmp	.L2037
.L2036:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2037:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5}>(std::_Any_data&, main::{lambda()#5}&&, std::integral_constant<bool, true>):
.LFB5577:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&):
.LFB5578:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5} const& std::_Any_data::_M_access<main::{lambda()#5}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5} const* std::__addressof<main::{lambda()#5} const>(main::{lambda()#5} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#5}&>, bool>::type std::__invoke_r<bool, main::{lambda()#5}&>(main::{lambda()#5}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#5}&>, bool>::type std::__invoke_r<bool, main::{lambda()#5}&>(main::{lambda()#5}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#5}&>, bool>::type std::__invoke_r<bool, main::{lambda()#5}&>(main::{lambda()#5}&):
.LFB5579:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}& std::forward<main::{lambda()#5}&>(std::remove_reference<main::{lambda()#5}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#5}&>(std::__invoke_other, main::{lambda()#5}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>()
main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>():
.LFB5580:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5581:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2050
	cmpl	$3, %eax
	jg	.L2051
	cmpl	$2, %eax
	je	.L2052
	cmpl	$2, %eax
	jg	.L2051
	testl	%eax, %eax
	je	.L2053
	cmpl	$1, %eax
	je	.L2054
	jmp	.L2051
.L2053:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#5}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2051
.L2054:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>()
	movq	%rbx, (%rax)
	jmp	.L2051
.L2052:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&)
	jmp	.L2051
.L2050:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2051:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6}>(std::_Any_data&, main::{lambda()#6}&&, std::integral_constant<bool, true>):
.LFB5582:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&):
.LFB5583:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6} const& std::_Any_data::_M_access<main::{lambda()#6}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6} const* std::__addressof<main::{lambda()#6} const>(main::{lambda()#6} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#6}&>, bool>::type std::__invoke_r<bool, main::{lambda()#6}&>(main::{lambda()#6}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#6}&>, bool>::type std::__invoke_r<bool, main::{lambda()#6}&>(main::{lambda()#6}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#6}&>, bool>::type std::__invoke_r<bool, main::{lambda()#6}&>(main::{lambda()#6}&):
.LFB5584:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}& std::forward<main::{lambda()#6}&>(std::remove_reference<main::{lambda()#6}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#6}&>(std::__invoke_other, main::{lambda()#6}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>()
main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>():
.LFB5585:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5586:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2064
	cmpl	$3, %eax
	jg	.L2065
	cmpl	$2, %eax
	je	.L2066
	cmpl	$2, %eax
	jg	.L2065
	testl	%eax, %eax
	je	.L2067
	cmpl	$1, %eax
	je	.L2068
	jmp	.L2065
.L2067:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#6}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2065
.L2068:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>()
	movq	%rbx, (%rax)
	jmp	.L2065
.L2066:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&)
	jmp	.L2065
.L2064:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2065:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7}>(std::_Any_data&, main::{lambda()#7}&&, std::integral_constant<bool, true>):
.LFB5587:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}&& std::forward<main::{lambda()#7}>(std::remove_reference<main::{lambda()#7}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&):
.LFB5588:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7} const& std::_Any_data::_M_access<main::{lambda()#7}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7} const* std::__addressof<main::{lambda()#7} const>(main::{lambda()#7} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#7}&>, bool>::type std::__invoke_r<bool, main::{lambda()#7}&>(main::{lambda()#7}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#7}&>, bool>::type std::__invoke_r<bool, main::{lambda()#7}&>(main::{lambda()#7}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#7}&>, bool>::type std::__invoke_r<bool, main::{lambda()#7}&>(main::{lambda()#7}&):
.LFB5589:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}& std::forward<main::{lambda()#7}&>(std::remove_reference<main::{lambda()#7}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#7}&>(std::__invoke_other, main::{lambda()#7}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>()
main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>():
.LFB5590:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5591:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2078
	cmpl	$3, %eax
	jg	.L2079
	cmpl	$2, %eax
	je	.L2080
	cmpl	$2, %eax
	jg	.L2079
	testl	%eax, %eax
	je	.L2081
	cmpl	$1, %eax
	je	.L2082
	jmp	.L2079
.L2081:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#7}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2079
.L2082:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>()
	movq	%rbx, (%rax)
	jmp	.L2079
.L2080:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&)
	jmp	.L2079
.L2078:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2079:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8}>(std::_Any_data&, main::{lambda()#8}&&, std::integral_constant<bool, true>):
.LFB5592:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}&& std::forward<main::{lambda()#8}>(std::remove_reference<main::{lambda()#8}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&):
.LFB5593:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8} const& std::_Any_data::_M_access<main::{lambda()#8}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8} const* std::__addressof<main::{lambda()#8} const>(main::{lambda()#8} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#8}&>, bool>::type std::__invoke_r<bool, main::{lambda()#8}&>(main::{lambda()#8}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#8}&>, bool>::type std::__invoke_r<bool, main::{lambda()#8}&>(main::{lambda()#8}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#8}&>, bool>::type std::__invoke_r<bool, main::{lambda()#8}&>(main::{lambda()#8}&):
.LFB5594:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}& std::forward<main::{lambda()#8}&>(std::remove_reference<main::{lambda()#8}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#8}&>(std::__invoke_other, main::{lambda()#8}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>()
main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>():
.LFB5595:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5596:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2092
	cmpl	$3, %eax
	jg	.L2093
	cmpl	$2, %eax
	je	.L2094
	cmpl	$2, %eax
	jg	.L2093
	testl	%eax, %eax
	je	.L2095
	cmpl	$1, %eax
	je	.L2096
	jmp	.L2093
.L2095:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#8}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2093
.L2096:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>()
	movq	%rbx, (%rax)
	jmp	.L2093
.L2094:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&)
	jmp	.L2093
.L2092:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2093:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9}>(std::_Any_data&, main::{lambda()#9}&&, std::integral_constant<bool, true>):
.LFB5597:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}&& std::forward<main::{lambda()#9}>(std::remove_reference<main::{lambda()#9}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&):
.LFB5598:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9} const& std::_Any_data::_M_access<main::{lambda()#9}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9} const* std::__addressof<main::{lambda()#9} const>(main::{lambda()#9} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#9}&>, bool>::type std::__invoke_r<bool, main::{lambda()#9}&>(main::{lambda()#9}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#9}&>, bool>::type std::__invoke_r<bool, main::{lambda()#9}&>(main::{lambda()#9}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#9}&>, bool>::type std::__invoke_r<bool, main::{lambda()#9}&>(main::{lambda()#9}&):
.LFB5599:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}& std::forward<main::{lambda()#9}&>(std::remove_reference<main::{lambda()#9}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#9}&>(std::__invoke_other, main::{lambda()#9}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>()
main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>():
.LFB5600:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5601:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2106
	cmpl	$3, %eax
	jg	.L2107
	cmpl	$2, %eax
	je	.L2108
	cmpl	$2, %eax
	jg	.L2107
	testl	%eax, %eax
	je	.L2109
	cmpl	$1, %eax
	je	.L2110
	jmp	.L2107
.L2109:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#9}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2107
.L2110:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>()
	movq	%rbx, (%rax)
	jmp	.L2107
.L2108:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&)
	jmp	.L2107
.L2106:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2107:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10}>(std::_Any_data&, main::{lambda()#10}&&, std::integral_constant<bool, true>):
.LFB5602:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}&& std::forward<main::{lambda()#10}>(std::remove_reference<main::{lambda()#10}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&):
.LFB5603:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10} const& std::_Any_data::_M_access<main::{lambda()#10}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10} const* std::__addressof<main::{lambda()#10} const>(main::{lambda()#10} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#10}&>, bool>::type std::__invoke_r<bool, main::{lambda()#10}&>(main::{lambda()#10}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#10}&>, bool>::type std::__invoke_r<bool, main::{lambda()#10}&>(main::{lambda()#10}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#10}&>, bool>::type std::__invoke_r<bool, main::{lambda()#10}&>(main::{lambda()#10}&):
.LFB5604:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}& std::forward<main::{lambda()#10}&>(std::remove_reference<main::{lambda()#10}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#10}&>(std::__invoke_other, main::{lambda()#10}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>()
main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>():
.LFB5605:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5606:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2120
	cmpl	$3, %eax
	jg	.L2121
	cmpl	$2, %eax
	je	.L2122
	cmpl	$2, %eax
	jg	.L2121
	testl	%eax, %eax
	je	.L2123
	cmpl	$1, %eax
	je	.L2124
	jmp	.L2121
.L2123:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#10}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2121
.L2124:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>()
	movq	%rbx, (%rax)
	jmp	.L2121
.L2122:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&)
	jmp	.L2121
.L2120:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2121:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11}>(std::_Any_data&, main::{lambda()#11}&&, std::integral_constant<bool, true>):
.LFB5607:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}&& std::forward<main::{lambda()#11}>(std::remove_reference<main::{lambda()#11}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&):
.LFB5608:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11} const& std::_Any_data::_M_access<main::{lambda()#11}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11} const* std::__addressof<main::{lambda()#11} const>(main::{lambda()#11} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#11}&>, bool>::type std::__invoke_r<bool, main::{lambda()#11}&>(main::{lambda()#11}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#11}&>, bool>::type std::__invoke_r<bool, main::{lambda()#11}&>(main::{lambda()#11}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#11}&>, bool>::type std::__invoke_r<bool, main::{lambda()#11}&>(main::{lambda()#11}&):
.LFB5609:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}& std::forward<main::{lambda()#11}&>(std::remove_reference<main::{lambda()#11}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#11}&>(std::__invoke_other, main::{lambda()#11}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>()
main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>():
.LFB5610:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5611:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2134
	cmpl	$3, %eax
	jg	.L2135
	cmpl	$2, %eax
	je	.L2136
	cmpl	$2, %eax
	jg	.L2135
	testl	%eax, %eax
	je	.L2137
	cmpl	$1, %eax
	je	.L2138
	jmp	.L2135
.L2137:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#11}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2135
.L2138:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>()
	movq	%rbx, (%rax)
	jmp	.L2135
.L2136:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&)
	jmp	.L2135
.L2134:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2135:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12}>(std::_Any_data&, main::{lambda()#12}&&, std::integral_constant<bool, true>):
.LFB5612:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}&& std::forward<main::{lambda()#12}>(std::remove_reference<main::{lambda()#12}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&):
.LFB5613:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12} const& std::_Any_data::_M_access<main::{lambda()#12}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12} const* std::__addressof<main::{lambda()#12} const>(main::{lambda()#12} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#12}&>, bool>::type std::__invoke_r<bool, main::{lambda()#12}&>(main::{lambda()#12}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#12}&>, bool>::type std::__invoke_r<bool, main::{lambda()#12}&>(main::{lambda()#12}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#12}&>, bool>::type std::__invoke_r<bool, main::{lambda()#12}&>(main::{lambda()#12}&):
.LFB5614:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}& std::forward<main::{lambda()#12}&>(std::remove_reference<main::{lambda()#12}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#12}&>(std::__invoke_other, main::{lambda()#12}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>()
main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>():
.LFB5615:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5616:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2148
	cmpl	$3, %eax
	jg	.L2149
	cmpl	$2, %eax
	je	.L2150
	cmpl	$2, %eax
	jg	.L2149
	testl	%eax, %eax
	je	.L2151
	cmpl	$1, %eax
	je	.L2152
	jmp	.L2149
.L2151:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#12}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2149
.L2152:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>()
	movq	%rbx, (%rax)
	jmp	.L2149
.L2150:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&)
	jmp	.L2149
.L2148:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2149:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13}>(std::_Any_data&, main::{lambda()#13}&&, std::integral_constant<bool, true>):
.LFB5617:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}&& std::forward<main::{lambda()#13}>(std::remove_reference<main::{lambda()#13}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&):
.LFB5618:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13} const& std::_Any_data::_M_access<main::{lambda()#13}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13} const* std::__addressof<main::{lambda()#13} const>(main::{lambda()#13} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#13}&>, bool>::type std::__invoke_r<bool, main::{lambda()#13}&>(main::{lambda()#13}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#13}&>, bool>::type std::__invoke_r<bool, main::{lambda()#13}&>(main::{lambda()#13}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#13}&>, bool>::type std::__invoke_r<bool, main::{lambda()#13}&>(main::{lambda()#13}&):
.LFB5619:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}& std::forward<main::{lambda()#13}&>(std::remove_reference<main::{lambda()#13}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#13}&>(std::__invoke_other, main::{lambda()#13}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>()
main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>():
.LFB5620:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5621:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2162
	cmpl	$3, %eax
	jg	.L2163
	cmpl	$2, %eax
	je	.L2164
	cmpl	$2, %eax
	jg	.L2163
	testl	%eax, %eax
	je	.L2165
	cmpl	$1, %eax
	je	.L2166
	jmp	.L2163
.L2165:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#13}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2163
.L2166:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>()
	movq	%rbx, (%rax)
	jmp	.L2163
.L2164:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&)
	jmp	.L2163
.L2162:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2163:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14}>(std::_Any_data&, main::{lambda()#14}&&, std::integral_constant<bool, true>):
.LFB5622:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}&& std::forward<main::{lambda()#14}>(std::remove_reference<main::{lambda()#14}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&):
.LFB5623:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14} const& std::_Any_data::_M_access<main::{lambda()#14}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14} const* std::__addressof<main::{lambda()#14} const>(main::{lambda()#14} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#14}&>, bool>::type std::__invoke_r<bool, main::{lambda()#14}&>(main::{lambda()#14}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#14}&>, bool>::type std::__invoke_r<bool, main::{lambda()#14}&>(main::{lambda()#14}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#14}&>, bool>::type std::__invoke_r<bool, main::{lambda()#14}&>(main::{lambda()#14}&):
.LFB5624:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}& std::forward<main::{lambda()#14}&>(std::remove_reference<main::{lambda()#14}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#14}&>(std::__invoke_other, main::{lambda()#14}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>()
main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>():
.LFB5625:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5626:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2176
	cmpl	$3, %eax
	jg	.L2177
	cmpl	$2, %eax
	je	.L2178
	cmpl	$2, %eax
	jg	.L2177
	testl	%eax, %eax
	je	.L2179
	cmpl	$1, %eax
	je	.L2180
	jmp	.L2177
.L2179:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#14}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2177
.L2180:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>()
	movq	%rbx, (%rax)
	jmp	.L2177
.L2178:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&)
	jmp	.L2177
.L2176:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2177:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15}>(std::_Any_data&, main::{lambda()#15}&&, std::integral_constant<bool, true>):
.LFB5627:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}&& std::forward<main::{lambda()#15}>(std::remove_reference<main::{lambda()#15}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&):
.LFB5628:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15} const& std::_Any_data::_M_access<main::{lambda()#15}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15} const* std::__addressof<main::{lambda()#15} const>(main::{lambda()#15} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#15}&>, bool>::type std::__invoke_r<bool, main::{lambda()#15}&>(main::{lambda()#15}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#15}&>, bool>::type std::__invoke_r<bool, main::{lambda()#15}&>(main::{lambda()#15}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#15}&>, bool>::type std::__invoke_r<bool, main::{lambda()#15}&>(main::{lambda()#15}&):
.LFB5629:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}& std::forward<main::{lambda()#15}&>(std::remove_reference<main::{lambda()#15}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#15}&>(std::__invoke_other, main::{lambda()#15}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>()
main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>():
.LFB5630:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5631:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2190
	cmpl	$3, %eax
	jg	.L2191
	cmpl	$2, %eax
	je	.L2192
	cmpl	$2, %eax
	jg	.L2191
	testl	%eax, %eax
	je	.L2193
	cmpl	$1, %eax
	je	.L2194
	jmp	.L2191
.L2193:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#15}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2191
.L2194:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>()
	movq	%rbx, (%rax)
	jmp	.L2191
.L2192:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&)
	jmp	.L2191
.L2190:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2191:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16}>(std::_Any_data&, main::{lambda()#16}&&, std::integral_constant<bool, true>):
.LFB5632:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}&& std::forward<main::{lambda()#16}>(std::remove_reference<main::{lambda()#16}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&):
.LFB5633:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16} const& std::_Any_data::_M_access<main::{lambda()#16}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16} const* std::__addressof<main::{lambda()#16} const>(main::{lambda()#16} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#16}&>, bool>::type std::__invoke_r<bool, main::{lambda()#16}&>(main::{lambda()#16}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#16}&>, bool>::type std::__invoke_r<bool, main::{lambda()#16}&>(main::{lambda()#16}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#16}&>, bool>::type std::__invoke_r<bool, main::{lambda()#16}&>(main::{lambda()#16}&):
.LFB5634:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}& std::forward<main::{lambda()#16}&>(std::remove_reference<main::{lambda()#16}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#16}&>(std::__invoke_other, main::{lambda()#16}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>()
main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>():
.LFB5635:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5636:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2204
	cmpl	$3, %eax
	jg	.L2205
	cmpl	$2, %eax
	je	.L2206
	cmpl	$2, %eax
	jg	.L2205
	testl	%eax, %eax
	je	.L2207
	cmpl	$1, %eax
	je	.L2208
	jmp	.L2205
.L2207:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#16}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2205
.L2208:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>()
	movq	%rbx, (%rax)
	jmp	.L2205
.L2206:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&)
	jmp	.L2205
.L2204:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2205:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17}>(std::_Any_data&, main::{lambda()#17}&&, std::integral_constant<bool, true>):
.LFB5637:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}&& std::forward<main::{lambda()#17}>(std::remove_reference<main::{lambda()#17}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&):
.LFB5638:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17} const& std::_Any_data::_M_access<main::{lambda()#17}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17} const* std::__addressof<main::{lambda()#17} const>(main::{lambda()#17} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#17}&>, bool>::type std::__invoke_r<bool, main::{lambda()#17}&>(main::{lambda()#17}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#17}&>, bool>::type std::__invoke_r<bool, main::{lambda()#17}&>(main::{lambda()#17}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#17}&>, bool>::type std::__invoke_r<bool, main::{lambda()#17}&>(main::{lambda()#17}&):
.LFB5639:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}& std::forward<main::{lambda()#17}&>(std::remove_reference<main::{lambda()#17}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#17}&>(std::__invoke_other, main::{lambda()#17}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#17}*& std::_Any_data::_M_access<main::{lambda()#17}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17}*& std::_Any_data::_M_access<main::{lambda()#17}*>()
main::{lambda()#17}*& std::_Any_data::_M_access<main::{lambda()#17}*>():
.LFB5640:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5641:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2218
	cmpl	$3, %eax
	jg	.L2219
	cmpl	$2, %eax
	je	.L2220
	cmpl	$2, %eax
	jg	.L2219
	testl	%eax, %eax
	je	.L2221
	cmpl	$1, %eax
	je	.L2222
	jmp	.L2219
.L2221:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#17}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2219
.L2222:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}*& std::_Any_data::_M_access<main::{lambda()#17}*>()
	movq	%rbx, (%rax)
	jmp	.L2219
.L2220:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&)
	jmp	.L2219
.L2218:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2219:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18}>(std::_Any_data&, main::{lambda()#18}&&, std::integral_constant<bool, true>):
.LFB5642:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}&& std::forward<main::{lambda()#18}>(std::remove_reference<main::{lambda()#18}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&):
.LFB5643:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18} const& std::_Any_data::_M_access<main::{lambda()#18}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18} const* std::__addressof<main::{lambda()#18} const>(main::{lambda()#18} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#18}&>, bool>::type std::__invoke_r<bool, main::{lambda()#18}&>(main::{lambda()#18}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#18}&>, bool>::type std::__invoke_r<bool, main::{lambda()#18}&>(main::{lambda()#18}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#18}&>, bool>::type std::__invoke_r<bool, main::{lambda()#18}&>(main::{lambda()#18}&):
.LFB5644:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}& std::forward<main::{lambda()#18}&>(std::remove_reference<main::{lambda()#18}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#18}&>(std::__invoke_other, main::{lambda()#18}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#18}*& std::_Any_data::_M_access<main::{lambda()#18}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18}*& std::_Any_data::_M_access<main::{lambda()#18}*>()
main::{lambda()#18}*& std::_Any_data::_M_access<main::{lambda()#18}*>():
.LFB5645:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5646:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2232
	cmpl	$3, %eax
	jg	.L2233
	cmpl	$2, %eax
	je	.L2234
	cmpl	$2, %eax
	jg	.L2233
	testl	%eax, %eax
	je	.L2235
	cmpl	$1, %eax
	je	.L2236
	jmp	.L2233
.L2235:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#18}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2233
.L2236:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}*& std::_Any_data::_M_access<main::{lambda()#18}*>()
	movq	%rbx, (%rax)
	jmp	.L2233
.L2234:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&)
	jmp	.L2233
.L2232:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2233:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19}>(std::_Any_data&, main::{lambda()#19}&&, std::integral_constant<bool, true>):
.LFB5647:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}&& std::forward<main::{lambda()#19}>(std::remove_reference<main::{lambda()#19}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&):
.LFB5648:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19} const& std::_Any_data::_M_access<main::{lambda()#19}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19} const* std::__addressof<main::{lambda()#19} const>(main::{lambda()#19} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#19}&>, bool>::type std::__invoke_r<bool, main::{lambda()#19}&>(main::{lambda()#19}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#19}&>, bool>::type std::__invoke_r<bool, main::{lambda()#19}&>(main::{lambda()#19}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#19}&>, bool>::type std::__invoke_r<bool, main::{lambda()#19}&>(main::{lambda()#19}&):
.LFB5649:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}& std::forward<main::{lambda()#19}&>(std::remove_reference<main::{lambda()#19}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#19}&>(std::__invoke_other, main::{lambda()#19}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#19}*& std::_Any_data::_M_access<main::{lambda()#19}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19}*& std::_Any_data::_M_access<main::{lambda()#19}*>()
main::{lambda()#19}*& std::_Any_data::_M_access<main::{lambda()#19}*>():
.LFB5650:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5651:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2246
	cmpl	$3, %eax
	jg	.L2247
	cmpl	$2, %eax
	je	.L2248
	cmpl	$2, %eax
	jg	.L2247
	testl	%eax, %eax
	je	.L2249
	cmpl	$1, %eax
	je	.L2250
	jmp	.L2247
.L2249:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#19}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2247
.L2250:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}*& std::_Any_data::_M_access<main::{lambda()#19}*>()
	movq	%rbx, (%rax)
	jmp	.L2247
.L2248:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&)
	jmp	.L2247
.L2246:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2247:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20}>(std::_Any_data&, main::{lambda()#20}&&, std::integral_constant<bool, true>):
.LFB5652:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}&& std::forward<main::{lambda()#20}>(std::remove_reference<main::{lambda()#20}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&):
.LFB5653:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20} const& std::_Any_data::_M_access<main::{lambda()#20}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20} const* std::__addressof<main::{lambda()#20} const>(main::{lambda()#20} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#20}&>, bool>::type std::__invoke_r<bool, main::{lambda()#20}&>(main::{lambda()#20}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#20}&>, bool>::type std::__invoke_r<bool, main::{lambda()#20}&>(main::{lambda()#20}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#20}&>, bool>::type std::__invoke_r<bool, main::{lambda()#20}&>(main::{lambda()#20}&):
.LFB5654:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}& std::forward<main::{lambda()#20}&>(std::remove_reference<main::{lambda()#20}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#20}&>(std::__invoke_other, main::{lambda()#20}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#20}*& std::_Any_data::_M_access<main::{lambda()#20}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20}*& std::_Any_data::_M_access<main::{lambda()#20}*>()
main::{lambda()#20}*& std::_Any_data::_M_access<main::{lambda()#20}*>():
.LFB5655:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5656:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2260
	cmpl	$3, %eax
	jg	.L2261
	cmpl	$2, %eax
	je	.L2262
	cmpl	$2, %eax
	jg	.L2261
	testl	%eax, %eax
	je	.L2263
	cmpl	$1, %eax
	je	.L2264
	jmp	.L2261
.L2263:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#20}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2261
.L2264:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}*& std::_Any_data::_M_access<main::{lambda()#20}*>()
	movq	%rbx, (%rax)
	jmp	.L2261
.L2262:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&)
	jmp	.L2261
.L2260:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2261:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21}>(std::_Any_data&, main::{lambda()#21}&&, std::integral_constant<bool, true>):
.LFB5657:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}&& std::forward<main::{lambda()#21}>(std::remove_reference<main::{lambda()#21}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&):
.LFB5658:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21} const& std::_Any_data::_M_access<main::{lambda()#21}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21} const* std::__addressof<main::{lambda()#21} const>(main::{lambda()#21} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#21}&>, bool>::type std::__invoke_r<bool, main::{lambda()#21}&>(main::{lambda()#21}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#21}&>, bool>::type std::__invoke_r<bool, main::{lambda()#21}&>(main::{lambda()#21}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#21}&>, bool>::type std::__invoke_r<bool, main::{lambda()#21}&>(main::{lambda()#21}&):
.LFB5659:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}& std::forward<main::{lambda()#21}&>(std::remove_reference<main::{lambda()#21}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#21}&>(std::__invoke_other, main::{lambda()#21}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#21}*& std::_Any_data::_M_access<main::{lambda()#21}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21}*& std::_Any_data::_M_access<main::{lambda()#21}*>()
main::{lambda()#21}*& std::_Any_data::_M_access<main::{lambda()#21}*>():
.LFB5660:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5661:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2274
	cmpl	$3, %eax
	jg	.L2275
	cmpl	$2, %eax
	je	.L2276
	cmpl	$2, %eax
	jg	.L2275
	testl	%eax, %eax
	je	.L2277
	cmpl	$1, %eax
	je	.L2278
	jmp	.L2275
.L2277:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#21}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2275
.L2278:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}*& std::_Any_data::_M_access<main::{lambda()#21}*>()
	movq	%rbx, (%rax)
	jmp	.L2275
.L2276:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&)
	jmp	.L2275
.L2274:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2275:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22}>(std::_Any_data&, main::{lambda()#22}&&, std::integral_constant<bool, true>):
.LFB5662:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}&& std::forward<main::{lambda()#22}>(std::remove_reference<main::{lambda()#22}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&):
.LFB5663:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22} const& std::_Any_data::_M_access<main::{lambda()#22}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22} const* std::__addressof<main::{lambda()#22} const>(main::{lambda()#22} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#22}&>, bool>::type std::__invoke_r<bool, main::{lambda()#22}&>(main::{lambda()#22}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#22}&>, bool>::type std::__invoke_r<bool, main::{lambda()#22}&>(main::{lambda()#22}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#22}&>, bool>::type std::__invoke_r<bool, main::{lambda()#22}&>(main::{lambda()#22}&):
.LFB5664:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}& std::forward<main::{lambda()#22}&>(std::remove_reference<main::{lambda()#22}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#22}&>(std::__invoke_other, main::{lambda()#22}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#22}*& std::_Any_data::_M_access<main::{lambda()#22}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22}*& std::_Any_data::_M_access<main::{lambda()#22}*>()
main::{lambda()#22}*& std::_Any_data::_M_access<main::{lambda()#22}*>():
.LFB5665:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5666:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2288
	cmpl	$3, %eax
	jg	.L2289
	cmpl	$2, %eax
	je	.L2290
	cmpl	$2, %eax
	jg	.L2289
	testl	%eax, %eax
	je	.L2291
	cmpl	$1, %eax
	je	.L2292
	jmp	.L2289
.L2291:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#22}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2289
.L2292:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}*& std::_Any_data::_M_access<main::{lambda()#22}*>()
	movq	%rbx, (%rax)
	jmp	.L2289
.L2290:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&)
	jmp	.L2289
.L2288:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2289:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23}>(std::_Any_data&, main::{lambda()#23}&&, std::integral_constant<bool, true>):
.LFB5667:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}&& std::forward<main::{lambda()#23}>(std::remove_reference<main::{lambda()#23}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&):
.LFB5668:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23} const& std::_Any_data::_M_access<main::{lambda()#23}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23} const* std::__addressof<main::{lambda()#23} const>(main::{lambda()#23} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#23}&>, bool>::type std::__invoke_r<bool, main::{lambda()#23}&>(main::{lambda()#23}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#23}&>, bool>::type std::__invoke_r<bool, main::{lambda()#23}&>(main::{lambda()#23}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#23}&>, bool>::type std::__invoke_r<bool, main::{lambda()#23}&>(main::{lambda()#23}&):
.LFB5669:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}& std::forward<main::{lambda()#23}&>(std::remove_reference<main::{lambda()#23}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#23}&>(std::__invoke_other, main::{lambda()#23}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#23}*& std::_Any_data::_M_access<main::{lambda()#23}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23}*& std::_Any_data::_M_access<main::{lambda()#23}*>()
main::{lambda()#23}*& std::_Any_data::_M_access<main::{lambda()#23}*>():
.LFB5670:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5671:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2302
	cmpl	$3, %eax
	jg	.L2303
	cmpl	$2, %eax
	je	.L2304
	cmpl	$2, %eax
	jg	.L2303
	testl	%eax, %eax
	je	.L2305
	cmpl	$1, %eax
	je	.L2306
	jmp	.L2303
.L2305:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#23}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2303
.L2306:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}*& std::_Any_data::_M_access<main::{lambda()#23}*>()
	movq	%rbx, (%rax)
	jmp	.L2303
.L2304:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&)
	jmp	.L2303
.L2302:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2303:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24}>(std::_Any_data&, main::{lambda()#24}&&, std::integral_constant<bool, true>):
.LFB5672:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}&& std::forward<main::{lambda()#24}>(std::remove_reference<main::{lambda()#24}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&):
.LFB5673:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24} const& std::_Any_data::_M_access<main::{lambda()#24}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24} const* std::__addressof<main::{lambda()#24} const>(main::{lambda()#24} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#24}&>, bool>::type std::__invoke_r<bool, main::{lambda()#24}&>(main::{lambda()#24}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#24}&>, bool>::type std::__invoke_r<bool, main::{lambda()#24}&>(main::{lambda()#24}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#24}&>, bool>::type std::__invoke_r<bool, main::{lambda()#24}&>(main::{lambda()#24}&):
.LFB5674:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}& std::forward<main::{lambda()#24}&>(std::remove_reference<main::{lambda()#24}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#24}&>(std::__invoke_other, main::{lambda()#24}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#24}*& std::_Any_data::_M_access<main::{lambda()#24}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24}*& std::_Any_data::_M_access<main::{lambda()#24}*>()
main::{lambda()#24}*& std::_Any_data::_M_access<main::{lambda()#24}*>():
.LFB5675:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5676:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2316
	cmpl	$3, %eax
	jg	.L2317
	cmpl	$2, %eax
	je	.L2318
	cmpl	$2, %eax
	jg	.L2317
	testl	%eax, %eax
	je	.L2319
	cmpl	$1, %eax
	je	.L2320
	jmp	.L2317
.L2319:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#24}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2317
.L2320:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}*& std::_Any_data::_M_access<main::{lambda()#24}*>()
	movq	%rbx, (%rax)
	jmp	.L2317
.L2318:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&)
	jmp	.L2317
.L2316:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2317:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25}>(std::_Any_data&, main::{lambda()#25}&&, std::integral_constant<bool, true>):
.LFB5677:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}&& std::forward<main::{lambda()#25}>(std::remove_reference<main::{lambda()#25}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&):
.LFB5678:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25} const& std::_Any_data::_M_access<main::{lambda()#25}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25} const* std::__addressof<main::{lambda()#25} const>(main::{lambda()#25} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#25}&>, bool>::type std::__invoke_r<bool, main::{lambda()#25}&>(main::{lambda()#25}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#25}&>, bool>::type std::__invoke_r<bool, main::{lambda()#25}&>(main::{lambda()#25}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#25}&>, bool>::type std::__invoke_r<bool, main::{lambda()#25}&>(main::{lambda()#25}&):
.LFB5679:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}& std::forward<main::{lambda()#25}&>(std::remove_reference<main::{lambda()#25}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#25}&>(std::__invoke_other, main::{lambda()#25}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#25}*& std::_Any_data::_M_access<main::{lambda()#25}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25}*& std::_Any_data::_M_access<main::{lambda()#25}*>()
main::{lambda()#25}*& std::_Any_data::_M_access<main::{lambda()#25}*>():
.LFB5680:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5681:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2330
	cmpl	$3, %eax
	jg	.L2331
	cmpl	$2, %eax
	je	.L2332
	cmpl	$2, %eax
	jg	.L2331
	testl	%eax, %eax
	je	.L2333
	cmpl	$1, %eax
	je	.L2334
	jmp	.L2331
.L2333:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#25}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2331
.L2334:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}*& std::_Any_data::_M_access<main::{lambda()#25}*>()
	movq	%rbx, (%rax)
	jmp	.L2331
.L2332:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&)
	jmp	.L2331
.L2330:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2331:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26}>(std::_Any_data&, main::{lambda()#26}&&, std::integral_constant<bool, true>):
.LFB5682:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}&& std::forward<main::{lambda()#26}>(std::remove_reference<main::{lambda()#26}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&):
.LFB5683:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26} const& std::_Any_data::_M_access<main::{lambda()#26}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26} const* std::__addressof<main::{lambda()#26} const>(main::{lambda()#26} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#26}&>, bool>::type std::__invoke_r<bool, main::{lambda()#26}&>(main::{lambda()#26}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#26}&>, bool>::type std::__invoke_r<bool, main::{lambda()#26}&>(main::{lambda()#26}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#26}&>, bool>::type std::__invoke_r<bool, main::{lambda()#26}&>(main::{lambda()#26}&):
.LFB5684:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}& std::forward<main::{lambda()#26}&>(std::remove_reference<main::{lambda()#26}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#26}&>(std::__invoke_other, main::{lambda()#26}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#26}*& std::_Any_data::_M_access<main::{lambda()#26}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26}*& std::_Any_data::_M_access<main::{lambda()#26}*>()
main::{lambda()#26}*& std::_Any_data::_M_access<main::{lambda()#26}*>():
.LFB5685:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5686:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2344
	cmpl	$3, %eax
	jg	.L2345
	cmpl	$2, %eax
	je	.L2346
	cmpl	$2, %eax
	jg	.L2345
	testl	%eax, %eax
	je	.L2347
	cmpl	$1, %eax
	je	.L2348
	jmp	.L2345
.L2347:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#26}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2345
.L2348:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}*& std::_Any_data::_M_access<main::{lambda()#26}*>()
	movq	%rbx, (%rax)
	jmp	.L2345
.L2346:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&)
	jmp	.L2345
.L2344:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2345:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27}>(std::_Any_data&, main::{lambda()#27}&&, std::integral_constant<bool, true>):
.LFB5687:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}&& std::forward<main::{lambda()#27}>(std::remove_reference<main::{lambda()#27}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&):
.LFB5688:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27} const& std::_Any_data::_M_access<main::{lambda()#27}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27} const* std::__addressof<main::{lambda()#27} const>(main::{lambda()#27} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#27}&>, bool>::type std::__invoke_r<bool, main::{lambda()#27}&>(main::{lambda()#27}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#27}&>, bool>::type std::__invoke_r<bool, main::{lambda()#27}&>(main::{lambda()#27}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#27}&>, bool>::type std::__invoke_r<bool, main::{lambda()#27}&>(main::{lambda()#27}&):
.LFB5689:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}& std::forward<main::{lambda()#27}&>(std::remove_reference<main::{lambda()#27}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#27}&>(std::__invoke_other, main::{lambda()#27}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#27}*& std::_Any_data::_M_access<main::{lambda()#27}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27}*& std::_Any_data::_M_access<main::{lambda()#27}*>()
main::{lambda()#27}*& std::_Any_data::_M_access<main::{lambda()#27}*>():
.LFB5690:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5691:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2358
	cmpl	$3, %eax
	jg	.L2359
	cmpl	$2, %eax
	je	.L2360
	cmpl	$2, %eax
	jg	.L2359
	testl	%eax, %eax
	je	.L2361
	cmpl	$1, %eax
	je	.L2362
	jmp	.L2359
.L2361:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#27}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2359
.L2362:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}*& std::_Any_data::_M_access<main::{lambda()#27}*>()
	movq	%rbx, (%rax)
	jmp	.L2359
.L2360:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&)
	jmp	.L2359
.L2358:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2359:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28}>(std::_Any_data&, main::{lambda()#28}&&, std::integral_constant<bool, true>):
.LFB5692:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}&& std::forward<main::{lambda()#28}>(std::remove_reference<main::{lambda()#28}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&):
.LFB5693:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28} const& std::_Any_data::_M_access<main::{lambda()#28}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28} const* std::__addressof<main::{lambda()#28} const>(main::{lambda()#28} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#28}&>, bool>::type std::__invoke_r<bool, main::{lambda()#28}&>(main::{lambda()#28}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#28}&>, bool>::type std::__invoke_r<bool, main::{lambda()#28}&>(main::{lambda()#28}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#28}&>, bool>::type std::__invoke_r<bool, main::{lambda()#28}&>(main::{lambda()#28}&):
.LFB5694:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}& std::forward<main::{lambda()#28}&>(std::remove_reference<main::{lambda()#28}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#28}&>(std::__invoke_other, main::{lambda()#28}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#28}*& std::_Any_data::_M_access<main::{lambda()#28}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28}*& std::_Any_data::_M_access<main::{lambda()#28}*>()
main::{lambda()#28}*& std::_Any_data::_M_access<main::{lambda()#28}*>():
.LFB5695:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5696:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2372
	cmpl	$3, %eax
	jg	.L2373
	cmpl	$2, %eax
	je	.L2374
	cmpl	$2, %eax
	jg	.L2373
	testl	%eax, %eax
	je	.L2375
	cmpl	$1, %eax
	je	.L2376
	jmp	.L2373
.L2375:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#28}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2373
.L2376:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}*& std::_Any_data::_M_access<main::{lambda()#28}*>()
	movq	%rbx, (%rax)
	jmp	.L2373
.L2374:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&)
	jmp	.L2373
.L2372:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2373:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29}>(std::_Any_data&, main::{lambda()#29}&&, std::integral_constant<bool, true>):
.LFB5697:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}&& std::forward<main::{lambda()#29}>(std::remove_reference<main::{lambda()#29}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&):
.LFB5698:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29} const& std::_Any_data::_M_access<main::{lambda()#29}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29} const* std::__addressof<main::{lambda()#29} const>(main::{lambda()#29} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#29}&>, bool>::type std::__invoke_r<bool, main::{lambda()#29}&>(main::{lambda()#29}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#29}&>, bool>::type std::__invoke_r<bool, main::{lambda()#29}&>(main::{lambda()#29}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#29}&>, bool>::type std::__invoke_r<bool, main::{lambda()#29}&>(main::{lambda()#29}&):
.LFB5699:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}& std::forward<main::{lambda()#29}&>(std::remove_reference<main::{lambda()#29}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#29}&>(std::__invoke_other, main::{lambda()#29}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#29}*& std::_Any_data::_M_access<main::{lambda()#29}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29}*& std::_Any_data::_M_access<main::{lambda()#29}*>()
main::{lambda()#29}*& std::_Any_data::_M_access<main::{lambda()#29}*>():
.LFB5700:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5701:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2386
	cmpl	$3, %eax
	jg	.L2387
	cmpl	$2, %eax
	je	.L2388
	cmpl	$2, %eax
	jg	.L2387
	testl	%eax, %eax
	je	.L2389
	cmpl	$1, %eax
	je	.L2390
	jmp	.L2387
.L2389:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#29}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2387
.L2390:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}*& std::_Any_data::_M_access<main::{lambda()#29}*>()
	movq	%rbx, (%rax)
	jmp	.L2387
.L2388:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&)
	jmp	.L2387
.L2386:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2387:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30}>(std::_Any_data&, main::{lambda()#30}&&, std::integral_constant<bool, true>):
.LFB5702:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}&& std::forward<main::{lambda()#30}>(std::remove_reference<main::{lambda()#30}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&):
.LFB5703:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30} const& std::_Any_data::_M_access<main::{lambda()#30}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30} const* std::__addressof<main::{lambda()#30} const>(main::{lambda()#30} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#30}&>, bool>::type std::__invoke_r<bool, main::{lambda()#30}&>(main::{lambda()#30}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#30}&>, bool>::type std::__invoke_r<bool, main::{lambda()#30}&>(main::{lambda()#30}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#30}&>, bool>::type std::__invoke_r<bool, main::{lambda()#30}&>(main::{lambda()#30}&):
.LFB5704:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}& std::forward<main::{lambda()#30}&>(std::remove_reference<main::{lambda()#30}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#30}&>(std::__invoke_other, main::{lambda()#30}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#30}*& std::_Any_data::_M_access<main::{lambda()#30}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30}*& std::_Any_data::_M_access<main::{lambda()#30}*>()
main::{lambda()#30}*& std::_Any_data::_M_access<main::{lambda()#30}*>():
.LFB5705:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5706:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2400
	cmpl	$3, %eax
	jg	.L2401
	cmpl	$2, %eax
	je	.L2402
	cmpl	$2, %eax
	jg	.L2401
	testl	%eax, %eax
	je	.L2403
	cmpl	$1, %eax
	je	.L2404
	jmp	.L2401
.L2403:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#30}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2401
.L2404:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}*& std::_Any_data::_M_access<main::{lambda()#30}*>()
	movq	%rbx, (%rax)
	jmp	.L2401
.L2402:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&)
	jmp	.L2401
.L2400:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2401:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31}>(std::_Any_data&, main::{lambda()#31}&&, std::integral_constant<bool, true>):
.LFB5707:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}&& std::forward<main::{lambda()#31}>(std::remove_reference<main::{lambda()#31}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&):
.LFB5708:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31} const& std::_Any_data::_M_access<main::{lambda()#31}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31} const* std::__addressof<main::{lambda()#31} const>(main::{lambda()#31} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#31}&>, bool>::type std::__invoke_r<bool, main::{lambda()#31}&>(main::{lambda()#31}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#31}&>, bool>::type std::__invoke_r<bool, main::{lambda()#31}&>(main::{lambda()#31}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#31}&>, bool>::type std::__invoke_r<bool, main::{lambda()#31}&>(main::{lambda()#31}&):
.LFB5709:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}& std::forward<main::{lambda()#31}&>(std::remove_reference<main::{lambda()#31}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#31}&>(std::__invoke_other, main::{lambda()#31}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#31}*& std::_Any_data::_M_access<main::{lambda()#31}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31}*& std::_Any_data::_M_access<main::{lambda()#31}*>()
main::{lambda()#31}*& std::_Any_data::_M_access<main::{lambda()#31}*>():
.LFB5710:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5711:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2414
	cmpl	$3, %eax
	jg	.L2415
	cmpl	$2, %eax
	je	.L2416
	cmpl	$2, %eax
	jg	.L2415
	testl	%eax, %eax
	je	.L2417
	cmpl	$1, %eax
	je	.L2418
	jmp	.L2415
.L2417:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#31}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2415
.L2418:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}*& std::_Any_data::_M_access<main::{lambda()#31}*>()
	movq	%rbx, (%rax)
	jmp	.L2415
.L2416:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&)
	jmp	.L2415
.L2414:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2415:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32}>(std::_Any_data&, main::{lambda()#32}&&, std::integral_constant<bool, true>):
.LFB5712:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}&& std::forward<main::{lambda()#32}>(std::remove_reference<main::{lambda()#32}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&):
.LFB5713:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32} const& std::_Any_data::_M_access<main::{lambda()#32}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32} const* std::__addressof<main::{lambda()#32} const>(main::{lambda()#32} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#32}&>, bool>::type std::__invoke_r<bool, main::{lambda()#32}&>(main::{lambda()#32}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#32}&>, bool>::type std::__invoke_r<bool, main::{lambda()#32}&>(main::{lambda()#32}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#32}&>, bool>::type std::__invoke_r<bool, main::{lambda()#32}&>(main::{lambda()#32}&):
.LFB5714:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}& std::forward<main::{lambda()#32}&>(std::remove_reference<main::{lambda()#32}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#32}&>(std::__invoke_other, main::{lambda()#32}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#32}*& std::_Any_data::_M_access<main::{lambda()#32}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32}*& std::_Any_data::_M_access<main::{lambda()#32}*>()
main::{lambda()#32}*& std::_Any_data::_M_access<main::{lambda()#32}*>():
.LFB5715:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5716:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2428
	cmpl	$3, %eax
	jg	.L2429
	cmpl	$2, %eax
	je	.L2430
	cmpl	$2, %eax
	jg	.L2429
	testl	%eax, %eax
	je	.L2431
	cmpl	$1, %eax
	je	.L2432
	jmp	.L2429
.L2431:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#32}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2429
.L2432:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}*& std::_Any_data::_M_access<main::{lambda()#32}*>()
	movq	%rbx, (%rax)
	jmp	.L2429
.L2430:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&)
	jmp	.L2429
.L2428:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2429:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33}>(std::_Any_data&, main::{lambda()#33}&&, std::integral_constant<bool, true>):
.LFB5717:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}&& std::forward<main::{lambda()#33}>(std::remove_reference<main::{lambda()#33}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&):
.LFB5718:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33} const& std::_Any_data::_M_access<main::{lambda()#33}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33} const* std::__addressof<main::{lambda()#33} const>(main::{lambda()#33} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#33}&>, bool>::type std::__invoke_r<bool, main::{lambda()#33}&>(main::{lambda()#33}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#33}&>, bool>::type std::__invoke_r<bool, main::{lambda()#33}&>(main::{lambda()#33}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#33}&>, bool>::type std::__invoke_r<bool, main::{lambda()#33}&>(main::{lambda()#33}&):
.LFB5719:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}& std::forward<main::{lambda()#33}&>(std::remove_reference<main::{lambda()#33}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#33}&>(std::__invoke_other, main::{lambda()#33}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#33}*& std::_Any_data::_M_access<main::{lambda()#33}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33}*& std::_Any_data::_M_access<main::{lambda()#33}*>()
main::{lambda()#33}*& std::_Any_data::_M_access<main::{lambda()#33}*>():
.LFB5720:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5721:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2442
	cmpl	$3, %eax
	jg	.L2443
	cmpl	$2, %eax
	je	.L2444
	cmpl	$2, %eax
	jg	.L2443
	testl	%eax, %eax
	je	.L2445
	cmpl	$1, %eax
	je	.L2446
	jmp	.L2443
.L2445:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#33}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2443
.L2446:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}*& std::_Any_data::_M_access<main::{lambda()#33}*>()
	movq	%rbx, (%rax)
	jmp	.L2443
.L2444:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&)
	jmp	.L2443
.L2442:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2443:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34}>(std::_Any_data&, main::{lambda()#34}&&, std::integral_constant<bool, true>):
.LFB5722:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}&& std::forward<main::{lambda()#34}>(std::remove_reference<main::{lambda()#34}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&):
.LFB5723:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34} const& std::_Any_data::_M_access<main::{lambda()#34}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34} const* std::__addressof<main::{lambda()#34} const>(main::{lambda()#34} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#34}&>, bool>::type std::__invoke_r<bool, main::{lambda()#34}&>(main::{lambda()#34}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#34}&>, bool>::type std::__invoke_r<bool, main::{lambda()#34}&>(main::{lambda()#34}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#34}&>, bool>::type std::__invoke_r<bool, main::{lambda()#34}&>(main::{lambda()#34}&):
.LFB5724:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}& std::forward<main::{lambda()#34}&>(std::remove_reference<main::{lambda()#34}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#34}&>(std::__invoke_other, main::{lambda()#34}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#34}*& std::_Any_data::_M_access<main::{lambda()#34}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34}*& std::_Any_data::_M_access<main::{lambda()#34}*>()
main::{lambda()#34}*& std::_Any_data::_M_access<main::{lambda()#34}*>():
.LFB5725:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5726:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2456
	cmpl	$3, %eax
	jg	.L2457
	cmpl	$2, %eax
	je	.L2458
	cmpl	$2, %eax
	jg	.L2457
	testl	%eax, %eax
	je	.L2459
	cmpl	$1, %eax
	je	.L2460
	jmp	.L2457
.L2459:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#34}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2457
.L2460:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}*& std::_Any_data::_M_access<main::{lambda()#34}*>()
	movq	%rbx, (%rax)
	jmp	.L2457
.L2458:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&)
	jmp	.L2457
.L2456:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2457:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35}>(std::_Any_data&, main::{lambda()#35}&&, std::integral_constant<bool, true>):
.LFB5727:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}&& std::forward<main::{lambda()#35}>(std::remove_reference<main::{lambda()#35}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&):
.LFB5728:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35} const& std::_Any_data::_M_access<main::{lambda()#35}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35} const* std::__addressof<main::{lambda()#35} const>(main::{lambda()#35} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#35}&>, bool>::type std::__invoke_r<bool, main::{lambda()#35}&>(main::{lambda()#35}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#35}&>, bool>::type std::__invoke_r<bool, main::{lambda()#35}&>(main::{lambda()#35}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#35}&>, bool>::type std::__invoke_r<bool, main::{lambda()#35}&>(main::{lambda()#35}&):
.LFB5729:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}& std::forward<main::{lambda()#35}&>(std::remove_reference<main::{lambda()#35}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#35}&>(std::__invoke_other, main::{lambda()#35}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#35}*& std::_Any_data::_M_access<main::{lambda()#35}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35}*& std::_Any_data::_M_access<main::{lambda()#35}*>()
main::{lambda()#35}*& std::_Any_data::_M_access<main::{lambda()#35}*>():
.LFB5730:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5731:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2470
	cmpl	$3, %eax
	jg	.L2471
	cmpl	$2, %eax
	je	.L2472
	cmpl	$2, %eax
	jg	.L2471
	testl	%eax, %eax
	je	.L2473
	cmpl	$1, %eax
	je	.L2474
	jmp	.L2471
.L2473:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#35}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2471
.L2474:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}*& std::_Any_data::_M_access<main::{lambda()#35}*>()
	movq	%rbx, (%rax)
	jmp	.L2471
.L2472:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&)
	jmp	.L2471
.L2470:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2471:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36}>(std::_Any_data&, main::{lambda()#36}&&, std::integral_constant<bool, true>):
.LFB5732:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}&& std::forward<main::{lambda()#36}>(std::remove_reference<main::{lambda()#36}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&):
.LFB5733:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36} const& std::_Any_data::_M_access<main::{lambda()#36}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36} const* std::__addressof<main::{lambda()#36} const>(main::{lambda()#36} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#36}&>, bool>::type std::__invoke_r<bool, main::{lambda()#36}&>(main::{lambda()#36}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#36}&>, bool>::type std::__invoke_r<bool, main::{lambda()#36}&>(main::{lambda()#36}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#36}&>, bool>::type std::__invoke_r<bool, main::{lambda()#36}&>(main::{lambda()#36}&):
.LFB5734:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}& std::forward<main::{lambda()#36}&>(std::remove_reference<main::{lambda()#36}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#36}&>(std::__invoke_other, main::{lambda()#36}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#36}*& std::_Any_data::_M_access<main::{lambda()#36}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36}*& std::_Any_data::_M_access<main::{lambda()#36}*>()
main::{lambda()#36}*& std::_Any_data::_M_access<main::{lambda()#36}*>():
.LFB5735:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5736:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2484
	cmpl	$3, %eax
	jg	.L2485
	cmpl	$2, %eax
	je	.L2486
	cmpl	$2, %eax
	jg	.L2485
	testl	%eax, %eax
	je	.L2487
	cmpl	$1, %eax
	je	.L2488
	jmp	.L2485
.L2487:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#36}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2485
.L2488:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}*& std::_Any_data::_M_access<main::{lambda()#36}*>()
	movq	%rbx, (%rax)
	jmp	.L2485
.L2486:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&)
	jmp	.L2485
.L2484:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2485:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37}>(std::_Any_data&, main::{lambda()#37}&&, std::integral_constant<bool, true>):
.LFB5737:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}&& std::forward<main::{lambda()#37}>(std::remove_reference<main::{lambda()#37}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&):
.LFB5738:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37} const& std::_Any_data::_M_access<main::{lambda()#37}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37} const* std::__addressof<main::{lambda()#37} const>(main::{lambda()#37} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#37}&>, bool>::type std::__invoke_r<bool, main::{lambda()#37}&>(main::{lambda()#37}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#37}&>, bool>::type std::__invoke_r<bool, main::{lambda()#37}&>(main::{lambda()#37}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#37}&>, bool>::type std::__invoke_r<bool, main::{lambda()#37}&>(main::{lambda()#37}&):
.LFB5739:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}& std::forward<main::{lambda()#37}&>(std::remove_reference<main::{lambda()#37}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#37}&>(std::__invoke_other, main::{lambda()#37}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#37}*& std::_Any_data::_M_access<main::{lambda()#37}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37}*& std::_Any_data::_M_access<main::{lambda()#37}*>()
main::{lambda()#37}*& std::_Any_data::_M_access<main::{lambda()#37}*>():
.LFB5740:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5741:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2498
	cmpl	$3, %eax
	jg	.L2499
	cmpl	$2, %eax
	je	.L2500
	cmpl	$2, %eax
	jg	.L2499
	testl	%eax, %eax
	je	.L2501
	cmpl	$1, %eax
	je	.L2502
	jmp	.L2499
.L2501:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#37}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2499
.L2502:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}*& std::_Any_data::_M_access<main::{lambda()#37}*>()
	movq	%rbx, (%rax)
	jmp	.L2499
.L2500:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&)
	jmp	.L2499
.L2498:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2499:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38}>(std::_Any_data&, main::{lambda()#38}&&, std::integral_constant<bool, true>):
.LFB5742:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}&& std::forward<main::{lambda()#38}>(std::remove_reference<main::{lambda()#38}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&):
.LFB5743:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38} const& std::_Any_data::_M_access<main::{lambda()#38}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38} const* std::__addressof<main::{lambda()#38} const>(main::{lambda()#38} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#38}&>, bool>::type std::__invoke_r<bool, main::{lambda()#38}&>(main::{lambda()#38}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#38}&>, bool>::type std::__invoke_r<bool, main::{lambda()#38}&>(main::{lambda()#38}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#38}&>, bool>::type std::__invoke_r<bool, main::{lambda()#38}&>(main::{lambda()#38}&):
.LFB5744:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}& std::forward<main::{lambda()#38}&>(std::remove_reference<main::{lambda()#38}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#38}&>(std::__invoke_other, main::{lambda()#38}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#38}*& std::_Any_data::_M_access<main::{lambda()#38}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38}*& std::_Any_data::_M_access<main::{lambda()#38}*>()
main::{lambda()#38}*& std::_Any_data::_M_access<main::{lambda()#38}*>():
.LFB5745:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5746:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2512
	cmpl	$3, %eax
	jg	.L2513
	cmpl	$2, %eax
	je	.L2514
	cmpl	$2, %eax
	jg	.L2513
	testl	%eax, %eax
	je	.L2515
	cmpl	$1, %eax
	je	.L2516
	jmp	.L2513
.L2515:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#38}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2513
.L2516:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}*& std::_Any_data::_M_access<main::{lambda()#38}*>()
	movq	%rbx, (%rax)
	jmp	.L2513
.L2514:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&)
	jmp	.L2513
.L2512:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2513:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39}>(std::_Any_data&, main::{lambda()#39}&&, std::integral_constant<bool, true>):
.LFB5747:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}&& std::forward<main::{lambda()#39}>(std::remove_reference<main::{lambda()#39}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&):
.LFB5748:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39} const& std::_Any_data::_M_access<main::{lambda()#39}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39} const* std::__addressof<main::{lambda()#39} const>(main::{lambda()#39} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#39}&>, bool>::type std::__invoke_r<bool, main::{lambda()#39}&>(main::{lambda()#39}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#39}&>, bool>::type std::__invoke_r<bool, main::{lambda()#39}&>(main::{lambda()#39}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#39}&>, bool>::type std::__invoke_r<bool, main::{lambda()#39}&>(main::{lambda()#39}&):
.LFB5749:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}& std::forward<main::{lambda()#39}&>(std::remove_reference<main::{lambda()#39}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#39}&>(std::__invoke_other, main::{lambda()#39}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#39}*& std::_Any_data::_M_access<main::{lambda()#39}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39}*& std::_Any_data::_M_access<main::{lambda()#39}*>()
main::{lambda()#39}*& std::_Any_data::_M_access<main::{lambda()#39}*>():
.LFB5750:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5751:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2526
	cmpl	$3, %eax
	jg	.L2527
	cmpl	$2, %eax
	je	.L2528
	cmpl	$2, %eax
	jg	.L2527
	testl	%eax, %eax
	je	.L2529
	cmpl	$1, %eax
	je	.L2530
	jmp	.L2527
.L2529:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#39}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2527
.L2530:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}*& std::_Any_data::_M_access<main::{lambda()#39}*>()
	movq	%rbx, (%rax)
	jmp	.L2527
.L2528:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&)
	jmp	.L2527
.L2526:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2527:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40}>(std::_Any_data&, main::{lambda()#40}&&, std::integral_constant<bool, true>):
.LFB5752:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}&& std::forward<main::{lambda()#40}>(std::remove_reference<main::{lambda()#40}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&):
.LFB5753:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40} const& std::_Any_data::_M_access<main::{lambda()#40}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40} const* std::__addressof<main::{lambda()#40} const>(main::{lambda()#40} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#40}&>, bool>::type std::__invoke_r<bool, main::{lambda()#40}&>(main::{lambda()#40}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#40}&>, bool>::type std::__invoke_r<bool, main::{lambda()#40}&>(main::{lambda()#40}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#40}&>, bool>::type std::__invoke_r<bool, main::{lambda()#40}&>(main::{lambda()#40}&):
.LFB5754:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}& std::forward<main::{lambda()#40}&>(std::remove_reference<main::{lambda()#40}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#40}&>(std::__invoke_other, main::{lambda()#40}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#40}*& std::_Any_data::_M_access<main::{lambda()#40}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40}*& std::_Any_data::_M_access<main::{lambda()#40}*>()
main::{lambda()#40}*& std::_Any_data::_M_access<main::{lambda()#40}*>():
.LFB5755:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5756:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2540
	cmpl	$3, %eax
	jg	.L2541
	cmpl	$2, %eax
	je	.L2542
	cmpl	$2, %eax
	jg	.L2541
	testl	%eax, %eax
	je	.L2543
	cmpl	$1, %eax
	je	.L2544
	jmp	.L2541
.L2543:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#40}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2541
.L2544:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}*& std::_Any_data::_M_access<main::{lambda()#40}*>()
	movq	%rbx, (%rax)
	jmp	.L2541
.L2542:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&)
	jmp	.L2541
.L2540:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2541:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41}>(std::_Any_data&, main::{lambda()#41}&&, std::integral_constant<bool, true>):
.LFB5757:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}&& std::forward<main::{lambda()#41}>(std::remove_reference<main::{lambda()#41}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&):
.LFB5758:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41} const& std::_Any_data::_M_access<main::{lambda()#41}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41} const* std::__addressof<main::{lambda()#41} const>(main::{lambda()#41} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#41}&>, bool>::type std::__invoke_r<bool, main::{lambda()#41}&>(main::{lambda()#41}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#41}&>, bool>::type std::__invoke_r<bool, main::{lambda()#41}&>(main::{lambda()#41}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#41}&>, bool>::type std::__invoke_r<bool, main::{lambda()#41}&>(main::{lambda()#41}&):
.LFB5759:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}& std::forward<main::{lambda()#41}&>(std::remove_reference<main::{lambda()#41}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#41}&>(std::__invoke_other, main::{lambda()#41}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#41}*& std::_Any_data::_M_access<main::{lambda()#41}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41}*& std::_Any_data::_M_access<main::{lambda()#41}*>()
main::{lambda()#41}*& std::_Any_data::_M_access<main::{lambda()#41}*>():
.LFB5760:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5761:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2554
	cmpl	$3, %eax
	jg	.L2555
	cmpl	$2, %eax
	je	.L2556
	cmpl	$2, %eax
	jg	.L2555
	testl	%eax, %eax
	je	.L2557
	cmpl	$1, %eax
	je	.L2558
	jmp	.L2555
.L2557:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#41}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2555
.L2558:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}*& std::_Any_data::_M_access<main::{lambda()#41}*>()
	movq	%rbx, (%rax)
	jmp	.L2555
.L2556:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&)
	jmp	.L2555
.L2554:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2555:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42}>(std::_Any_data&, main::{lambda()#42}&&, std::integral_constant<bool, true>):
.LFB5762:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}&& std::forward<main::{lambda()#42}>(std::remove_reference<main::{lambda()#42}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&):
.LFB5763:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42} const& std::_Any_data::_M_access<main::{lambda()#42}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42} const* std::__addressof<main::{lambda()#42} const>(main::{lambda()#42} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#42}&>, bool>::type std::__invoke_r<bool, main::{lambda()#42}&>(main::{lambda()#42}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#42}&>, bool>::type std::__invoke_r<bool, main::{lambda()#42}&>(main::{lambda()#42}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#42}&>, bool>::type std::__invoke_r<bool, main::{lambda()#42}&>(main::{lambda()#42}&):
.LFB5764:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}& std::forward<main::{lambda()#42}&>(std::remove_reference<main::{lambda()#42}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#42}&>(std::__invoke_other, main::{lambda()#42}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#42}*& std::_Any_data::_M_access<main::{lambda()#42}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42}*& std::_Any_data::_M_access<main::{lambda()#42}*>()
main::{lambda()#42}*& std::_Any_data::_M_access<main::{lambda()#42}*>():
.LFB5765:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5766:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2568
	cmpl	$3, %eax
	jg	.L2569
	cmpl	$2, %eax
	je	.L2570
	cmpl	$2, %eax
	jg	.L2569
	testl	%eax, %eax
	je	.L2571
	cmpl	$1, %eax
	je	.L2572
	jmp	.L2569
.L2571:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#42}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2569
.L2572:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}*& std::_Any_data::_M_access<main::{lambda()#42}*>()
	movq	%rbx, (%rax)
	jmp	.L2569
.L2570:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&)
	jmp	.L2569
.L2568:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2569:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43}>(std::_Any_data&, main::{lambda()#43}&&, std::integral_constant<bool, true>):
.LFB5767:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}&& std::forward<main::{lambda()#43}>(std::remove_reference<main::{lambda()#43}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&):
.LFB5768:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43} const& std::_Any_data::_M_access<main::{lambda()#43}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43} const* std::__addressof<main::{lambda()#43} const>(main::{lambda()#43} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#43}&>, bool>::type std::__invoke_r<bool, main::{lambda()#43}&>(main::{lambda()#43}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#43}&>, bool>::type std::__invoke_r<bool, main::{lambda()#43}&>(main::{lambda()#43}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#43}&>, bool>::type std::__invoke_r<bool, main::{lambda()#43}&>(main::{lambda()#43}&):
.LFB5769:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}& std::forward<main::{lambda()#43}&>(std::remove_reference<main::{lambda()#43}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#43}&>(std::__invoke_other, main::{lambda()#43}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#43}*& std::_Any_data::_M_access<main::{lambda()#43}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43}*& std::_Any_data::_M_access<main::{lambda()#43}*>()
main::{lambda()#43}*& std::_Any_data::_M_access<main::{lambda()#43}*>():
.LFB5770:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5771:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2582
	cmpl	$3, %eax
	jg	.L2583
	cmpl	$2, %eax
	je	.L2584
	cmpl	$2, %eax
	jg	.L2583
	testl	%eax, %eax
	je	.L2585
	cmpl	$1, %eax
	je	.L2586
	jmp	.L2583
.L2585:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#43}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2583
.L2586:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}*& std::_Any_data::_M_access<main::{lambda()#43}*>()
	movq	%rbx, (%rax)
	jmp	.L2583
.L2584:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&)
	jmp	.L2583
.L2582:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2583:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator()
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator()
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator():
.LFB5773:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator()
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator()
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~__new_allocator():
.LFB5776:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt4moveIRSaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEONSt16remove_referenceIT_E4typeEOSG_,"x"
	.linkonce discard
	.globl	std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
	.def	std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&):
.LFB5778:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE10_List_implC1EOSaISt10_List_nodeISA_EE,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::_List_impl(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::_List_impl(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::_List_impl(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_List_impl::_List_impl(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&):
.LFB5781:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	std::remove_reference<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::type&& std::move<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__detail::_List_node_header::_List_node_header()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt16initializer_listISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const
	.def	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const
std::initializer_list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const:
.LFB5782:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	8(%rax), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE12emplace_backIJRKSA_EEERSA_DpOT_,"x"
	.linkonce discard
	.align 2
	.globl	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >& std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >& std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >& std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >& std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB5783:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end()
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rbx, %r8
	movq	%rax, %rcx
	call	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::back()
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9_M_valptrEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr()
	.def	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr()
std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr():
.LFB5784:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	addq	$16, %rax
	movq	%rax, %rcx
	call	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE21_M_get_Node_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator()
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator()
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator():
.LFB5785:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE7destroyISB_EEvRSD_PT_,"x"
	.linkonce discard
	.globl	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
	.def	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*):
.LFB5786:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE11_M_put_nodeEPSt10_List_nodeISA_E,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_put_node(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_put_node(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_put_node(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_put_node(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*):
.LFB5787:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	24(%rbp), %rdx
	movl	$1, %r8d
	movq	%rax, %rcx
	call	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5787:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5787-.LLSDACSB5787
.LLSDACSB5787:
.LLSDACSE5787:
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE11_M_put_nodeEPSt10_List_nodeISA_E,"x"
	.linkonce discard
	.seh_endproc
	.text
	.def	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44}>(std::_Any_data&, main::{lambda()#44}&&, std::integral_constant<bool, true>):
.LFB5788:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}&& std::forward<main::{lambda()#44}>(std::remove_reference<main::{lambda()#44}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&):
.LFB5789:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44} const& std::_Any_data::_M_access<main::{lambda()#44}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44} const* std::__addressof<main::{lambda()#44} const>(main::{lambda()#44} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#44}&>, bool>::type std::__invoke_r<bool, main::{lambda()#44}&>(main::{lambda()#44}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#44}&>, bool>::type std::__invoke_r<bool, main::{lambda()#44}&>(main::{lambda()#44}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#44}&>, bool>::type std::__invoke_r<bool, main::{lambda()#44}&>(main::{lambda()#44}&):
.LFB5790:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}& std::forward<main::{lambda()#44}&>(std::remove_reference<main::{lambda()#44}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#44}&>(std::__invoke_other, main::{lambda()#44}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#44}*& std::_Any_data::_M_access<main::{lambda()#44}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44}*& std::_Any_data::_M_access<main::{lambda()#44}*>()
main::{lambda()#44}*& std::_Any_data::_M_access<main::{lambda()#44}*>():
.LFB5791:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5792:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2611
	cmpl	$3, %eax
	jg	.L2612
	cmpl	$2, %eax
	je	.L2613
	cmpl	$2, %eax
	jg	.L2612
	testl	%eax, %eax
	je	.L2614
	cmpl	$1, %eax
	je	.L2615
	jmp	.L2612
.L2614:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#44}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2612
.L2615:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}*& std::_Any_data::_M_access<main::{lambda()#44}*>()
	movq	%rbx, (%rax)
	jmp	.L2612
.L2613:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&)
	jmp	.L2612
.L2611:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2612:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45}>(std::_Any_data&, main::{lambda()#45}&&, std::integral_constant<bool, true>):
.LFB5793:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}&& std::forward<main::{lambda()#45}>(std::remove_reference<main::{lambda()#45}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&):
.LFB5794:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45} const& std::_Any_data::_M_access<main::{lambda()#45}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45} const* std::__addressof<main::{lambda()#45} const>(main::{lambda()#45} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#45}&>, bool>::type std::__invoke_r<bool, main::{lambda()#45}&>(main::{lambda()#45}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#45}&>, bool>::type std::__invoke_r<bool, main::{lambda()#45}&>(main::{lambda()#45}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#45}&>, bool>::type std::__invoke_r<bool, main::{lambda()#45}&>(main::{lambda()#45}&):
.LFB5795:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}& std::forward<main::{lambda()#45}&>(std::remove_reference<main::{lambda()#45}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#45}&>(std::__invoke_other, main::{lambda()#45}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#45}*& std::_Any_data::_M_access<main::{lambda()#45}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45}*& std::_Any_data::_M_access<main::{lambda()#45}*>()
main::{lambda()#45}*& std::_Any_data::_M_access<main::{lambda()#45}*>():
.LFB5796:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5797:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2625
	cmpl	$3, %eax
	jg	.L2626
	cmpl	$2, %eax
	je	.L2627
	cmpl	$2, %eax
	jg	.L2626
	testl	%eax, %eax
	je	.L2628
	cmpl	$1, %eax
	je	.L2629
	jmp	.L2626
.L2628:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#45}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2626
.L2629:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}*& std::_Any_data::_M_access<main::{lambda()#45}*>()
	movq	%rbx, (%rax)
	jmp	.L2626
.L2627:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&)
	jmp	.L2626
.L2625:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2626:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46}>(std::_Any_data&, main::{lambda()#46}&&, std::integral_constant<bool, true>):
.LFB5798:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}&& std::forward<main::{lambda()#46}>(std::remove_reference<main::{lambda()#46}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&):
.LFB5799:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46} const& std::_Any_data::_M_access<main::{lambda()#46}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46} const* std::__addressof<main::{lambda()#46} const>(main::{lambda()#46} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#46}&>, bool>::type std::__invoke_r<bool, main::{lambda()#46}&>(main::{lambda()#46}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#46}&>, bool>::type std::__invoke_r<bool, main::{lambda()#46}&>(main::{lambda()#46}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#46}&>, bool>::type std::__invoke_r<bool, main::{lambda()#46}&>(main::{lambda()#46}&):
.LFB5800:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}& std::forward<main::{lambda()#46}&>(std::remove_reference<main::{lambda()#46}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#46}&>(std::__invoke_other, main::{lambda()#46}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#46}*& std::_Any_data::_M_access<main::{lambda()#46}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46}*& std::_Any_data::_M_access<main::{lambda()#46}*>()
main::{lambda()#46}*& std::_Any_data::_M_access<main::{lambda()#46}*>():
.LFB5801:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5802:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2639
	cmpl	$3, %eax
	jg	.L2640
	cmpl	$2, %eax
	je	.L2641
	cmpl	$2, %eax
	jg	.L2640
	testl	%eax, %eax
	je	.L2642
	cmpl	$1, %eax
	je	.L2643
	jmp	.L2640
.L2642:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#46}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2640
.L2643:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}*& std::_Any_data::_M_access<main::{lambda()#46}*>()
	movq	%rbx, (%rax)
	jmp	.L2640
.L2641:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&)
	jmp	.L2640
.L2639:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2640:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47}>(std::_Any_data&, main::{lambda()#47}&&, std::integral_constant<bool, true>):
.LFB5803:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}&& std::forward<main::{lambda()#47}>(std::remove_reference<main::{lambda()#47}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&):
.LFB5804:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47} const& std::_Any_data::_M_access<main::{lambda()#47}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47} const* std::__addressof<main::{lambda()#47} const>(main::{lambda()#47} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#47}&>, bool>::type std::__invoke_r<bool, main::{lambda()#47}&>(main::{lambda()#47}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#47}&>, bool>::type std::__invoke_r<bool, main::{lambda()#47}&>(main::{lambda()#47}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#47}&>, bool>::type std::__invoke_r<bool, main::{lambda()#47}&>(main::{lambda()#47}&):
.LFB5805:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}& std::forward<main::{lambda()#47}&>(std::remove_reference<main::{lambda()#47}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#47}&>(std::__invoke_other, main::{lambda()#47}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#47}*& std::_Any_data::_M_access<main::{lambda()#47}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47}*& std::_Any_data::_M_access<main::{lambda()#47}*>()
main::{lambda()#47}*& std::_Any_data::_M_access<main::{lambda()#47}*>():
.LFB5806:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5807:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2653
	cmpl	$3, %eax
	jg	.L2654
	cmpl	$2, %eax
	je	.L2655
	cmpl	$2, %eax
	jg	.L2654
	testl	%eax, %eax
	je	.L2656
	cmpl	$1, %eax
	je	.L2657
	jmp	.L2654
.L2656:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#47}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2654
.L2657:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}*& std::_Any_data::_M_access<main::{lambda()#47}*>()
	movq	%rbx, (%rax)
	jmp	.L2654
.L2655:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&)
	jmp	.L2654
.L2653:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2654:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48}>(std::_Any_data&, main::{lambda()#48}&&, std::integral_constant<bool, true>):
.LFB5808:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}&& std::forward<main::{lambda()#48}>(std::remove_reference<main::{lambda()#48}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&):
.LFB5809:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48} const& std::_Any_data::_M_access<main::{lambda()#48}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48} const* std::__addressof<main::{lambda()#48} const>(main::{lambda()#48} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#48}&>, bool>::type std::__invoke_r<bool, main::{lambda()#48}&>(main::{lambda()#48}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#48}&>, bool>::type std::__invoke_r<bool, main::{lambda()#48}&>(main::{lambda()#48}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#48}&>, bool>::type std::__invoke_r<bool, main::{lambda()#48}&>(main::{lambda()#48}&):
.LFB5810:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}& std::forward<main::{lambda()#48}&>(std::remove_reference<main::{lambda()#48}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#48}&>(std::__invoke_other, main::{lambda()#48}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#48}*& std::_Any_data::_M_access<main::{lambda()#48}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48}*& std::_Any_data::_M_access<main::{lambda()#48}*>()
main::{lambda()#48}*& std::_Any_data::_M_access<main::{lambda()#48}*>():
.LFB5811:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5812:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2667
	cmpl	$3, %eax
	jg	.L2668
	cmpl	$2, %eax
	je	.L2669
	cmpl	$2, %eax
	jg	.L2668
	testl	%eax, %eax
	je	.L2670
	cmpl	$1, %eax
	je	.L2671
	jmp	.L2668
.L2670:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#48}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2668
.L2671:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}*& std::_Any_data::_M_access<main::{lambda()#48}*>()
	movq	%rbx, (%rax)
	jmp	.L2668
.L2669:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&)
	jmp	.L2668
.L2667:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2668:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49}>(std::_Any_data&, main::{lambda()#49}&&, std::integral_constant<bool, true>):
.LFB5813:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}&& std::forward<main::{lambda()#49}>(std::remove_reference<main::{lambda()#49}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&):
.LFB5814:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49} const& std::_Any_data::_M_access<main::{lambda()#49}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49} const* std::__addressof<main::{lambda()#49} const>(main::{lambda()#49} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#49}&>, bool>::type std::__invoke_r<bool, main::{lambda()#49}&>(main::{lambda()#49}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#49}&>, bool>::type std::__invoke_r<bool, main::{lambda()#49}&>(main::{lambda()#49}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#49}&>, bool>::type std::__invoke_r<bool, main::{lambda()#49}&>(main::{lambda()#49}&):
.LFB5815:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}& std::forward<main::{lambda()#49}&>(std::remove_reference<main::{lambda()#49}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#49}&>(std::__invoke_other, main::{lambda()#49}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#49}*& std::_Any_data::_M_access<main::{lambda()#49}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49}*& std::_Any_data::_M_access<main::{lambda()#49}*>()
main::{lambda()#49}*& std::_Any_data::_M_access<main::{lambda()#49}*>():
.LFB5816:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5817:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2681
	cmpl	$3, %eax
	jg	.L2682
	cmpl	$2, %eax
	je	.L2683
	cmpl	$2, %eax
	jg	.L2682
	testl	%eax, %eax
	je	.L2684
	cmpl	$1, %eax
	je	.L2685
	jmp	.L2682
.L2684:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#49}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2682
.L2685:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}*& std::_Any_data::_M_access<main::{lambda()#49}*>()
	movq	%rbx, (%rax)
	jmp	.L2682
.L2683:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&)
	jmp	.L2682
.L2681:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2682:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50}>(std::_Any_data&, main::{lambda()#50}&&, std::integral_constant<bool, true>):
.LFB5818:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}&& std::forward<main::{lambda()#50}>(std::remove_reference<main::{lambda()#50}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&):
.LFB5819:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50} const& std::_Any_data::_M_access<main::{lambda()#50}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50} const* std::__addressof<main::{lambda()#50} const>(main::{lambda()#50} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#50}&>, bool>::type std::__invoke_r<bool, main::{lambda()#50}&>(main::{lambda()#50}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#50}&>, bool>::type std::__invoke_r<bool, main::{lambda()#50}&>(main::{lambda()#50}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#50}&>, bool>::type std::__invoke_r<bool, main::{lambda()#50}&>(main::{lambda()#50}&):
.LFB5820:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}& std::forward<main::{lambda()#50}&>(std::remove_reference<main::{lambda()#50}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#50}&>(std::__invoke_other, main::{lambda()#50}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#50}*& std::_Any_data::_M_access<main::{lambda()#50}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50}*& std::_Any_data::_M_access<main::{lambda()#50}*>()
main::{lambda()#50}*& std::_Any_data::_M_access<main::{lambda()#50}*>():
.LFB5821:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5822:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2695
	cmpl	$3, %eax
	jg	.L2696
	cmpl	$2, %eax
	je	.L2697
	cmpl	$2, %eax
	jg	.L2696
	testl	%eax, %eax
	je	.L2698
	cmpl	$1, %eax
	je	.L2699
	jmp	.L2696
.L2698:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#50}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2696
.L2699:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}*& std::_Any_data::_M_access<main::{lambda()#50}*>()
	movq	%rbx, (%rax)
	jmp	.L2696
.L2697:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&)
	jmp	.L2696
.L2695:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2696:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51}>(std::_Any_data&, main::{lambda()#51}&&, std::integral_constant<bool, true>):
.LFB5823:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}&& std::forward<main::{lambda()#51}>(std::remove_reference<main::{lambda()#51}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&):
.LFB5824:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51} const& std::_Any_data::_M_access<main::{lambda()#51}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51} const* std::__addressof<main::{lambda()#51} const>(main::{lambda()#51} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#51}&>, bool>::type std::__invoke_r<bool, main::{lambda()#51}&>(main::{lambda()#51}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#51}&>, bool>::type std::__invoke_r<bool, main::{lambda()#51}&>(main::{lambda()#51}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#51}&>, bool>::type std::__invoke_r<bool, main::{lambda()#51}&>(main::{lambda()#51}&):
.LFB5825:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}& std::forward<main::{lambda()#51}&>(std::remove_reference<main::{lambda()#51}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#51}&>(std::__invoke_other, main::{lambda()#51}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#51}*& std::_Any_data::_M_access<main::{lambda()#51}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51}*& std::_Any_data::_M_access<main::{lambda()#51}*>()
main::{lambda()#51}*& std::_Any_data::_M_access<main::{lambda()#51}*>():
.LFB5826:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5827:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2709
	cmpl	$3, %eax
	jg	.L2710
	cmpl	$2, %eax
	je	.L2711
	cmpl	$2, %eax
	jg	.L2710
	testl	%eax, %eax
	je	.L2712
	cmpl	$1, %eax
	je	.L2713
	jmp	.L2710
.L2712:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#51}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2710
.L2713:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}*& std::_Any_data::_M_access<main::{lambda()#51}*>()
	movq	%rbx, (%rax)
	jmp	.L2710
.L2711:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&)
	jmp	.L2710
.L2709:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2710:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52}>(std::_Any_data&, main::{lambda()#52}&&, std::integral_constant<bool, true>):
.LFB5828:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}&& std::forward<main::{lambda()#52}>(std::remove_reference<main::{lambda()#52}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&):
.LFB5829:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52} const& std::_Any_data::_M_access<main::{lambda()#52}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52} const* std::__addressof<main::{lambda()#52} const>(main::{lambda()#52} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#52}&>, bool>::type std::__invoke_r<bool, main::{lambda()#52}&>(main::{lambda()#52}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#52}&>, bool>::type std::__invoke_r<bool, main::{lambda()#52}&>(main::{lambda()#52}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#52}&>, bool>::type std::__invoke_r<bool, main::{lambda()#52}&>(main::{lambda()#52}&):
.LFB5830:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}& std::forward<main::{lambda()#52}&>(std::remove_reference<main::{lambda()#52}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#52}&>(std::__invoke_other, main::{lambda()#52}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#52}*& std::_Any_data::_M_access<main::{lambda()#52}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52}*& std::_Any_data::_M_access<main::{lambda()#52}*>()
main::{lambda()#52}*& std::_Any_data::_M_access<main::{lambda()#52}*>():
.LFB5831:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5832:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2723
	cmpl	$3, %eax
	jg	.L2724
	cmpl	$2, %eax
	je	.L2725
	cmpl	$2, %eax
	jg	.L2724
	testl	%eax, %eax
	je	.L2726
	cmpl	$1, %eax
	je	.L2727
	jmp	.L2724
.L2726:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#52}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2724
.L2727:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}*& std::_Any_data::_M_access<main::{lambda()#52}*>()
	movq	%rbx, (%rax)
	jmp	.L2724
.L2725:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&)
	jmp	.L2724
.L2723:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2724:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53}>(std::_Any_data&, main::{lambda()#53}&&, std::integral_constant<bool, true>):
.LFB5833:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}&& std::forward<main::{lambda()#53}>(std::remove_reference<main::{lambda()#53}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&):
.LFB5834:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53} const& std::_Any_data::_M_access<main::{lambda()#53}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53} const* std::__addressof<main::{lambda()#53} const>(main::{lambda()#53} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#53}&>, bool>::type std::__invoke_r<bool, main::{lambda()#53}&>(main::{lambda()#53}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#53}&>, bool>::type std::__invoke_r<bool, main::{lambda()#53}&>(main::{lambda()#53}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#53}&>, bool>::type std::__invoke_r<bool, main::{lambda()#53}&>(main::{lambda()#53}&):
.LFB5835:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}& std::forward<main::{lambda()#53}&>(std::remove_reference<main::{lambda()#53}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#53}&>(std::__invoke_other, main::{lambda()#53}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#53}*& std::_Any_data::_M_access<main::{lambda()#53}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53}*& std::_Any_data::_M_access<main::{lambda()#53}*>()
main::{lambda()#53}*& std::_Any_data::_M_access<main::{lambda()#53}*>():
.LFB5836:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5837:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2737
	cmpl	$3, %eax
	jg	.L2738
	cmpl	$2, %eax
	je	.L2739
	cmpl	$2, %eax
	jg	.L2738
	testl	%eax, %eax
	je	.L2740
	cmpl	$1, %eax
	je	.L2741
	jmp	.L2738
.L2740:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#53}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2738
.L2741:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}*& std::_Any_data::_M_access<main::{lambda()#53}*>()
	movq	%rbx, (%rax)
	jmp	.L2738
.L2739:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&)
	jmp	.L2738
.L2737:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2738:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54}>(std::_Any_data&, main::{lambda()#54}&&, std::integral_constant<bool, true>):
.LFB5838:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}&& std::forward<main::{lambda()#54}>(std::remove_reference<main::{lambda()#54}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&):
.LFB5839:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54} const& std::_Any_data::_M_access<main::{lambda()#54}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54} const* std::__addressof<main::{lambda()#54} const>(main::{lambda()#54} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#54}&>, bool>::type std::__invoke_r<bool, main::{lambda()#54}&>(main::{lambda()#54}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#54}&>, bool>::type std::__invoke_r<bool, main::{lambda()#54}&>(main::{lambda()#54}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#54}&>, bool>::type std::__invoke_r<bool, main::{lambda()#54}&>(main::{lambda()#54}&):
.LFB5840:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}& std::forward<main::{lambda()#54}&>(std::remove_reference<main::{lambda()#54}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#54}&>(std::__invoke_other, main::{lambda()#54}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#54}*& std::_Any_data::_M_access<main::{lambda()#54}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54}*& std::_Any_data::_M_access<main::{lambda()#54}*>()
main::{lambda()#54}*& std::_Any_data::_M_access<main::{lambda()#54}*>():
.LFB5841:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5842:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2751
	cmpl	$3, %eax
	jg	.L2752
	cmpl	$2, %eax
	je	.L2753
	cmpl	$2, %eax
	jg	.L2752
	testl	%eax, %eax
	je	.L2754
	cmpl	$1, %eax
	je	.L2755
	jmp	.L2752
.L2754:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#54}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2752
.L2755:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}*& std::_Any_data::_M_access<main::{lambda()#54}*>()
	movq	%rbx, (%rax)
	jmp	.L2752
.L2753:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&)
	jmp	.L2752
.L2751:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2752:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55}>(std::_Any_data&, main::{lambda()#55}&&, std::integral_constant<bool, true>):
.LFB5843:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}&& std::forward<main::{lambda()#55}>(std::remove_reference<main::{lambda()#55}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&):
.LFB5844:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55} const& std::_Any_data::_M_access<main::{lambda()#55}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55} const* std::__addressof<main::{lambda()#55} const>(main::{lambda()#55} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#55}&>, bool>::type std::__invoke_r<bool, main::{lambda()#55}&>(main::{lambda()#55}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#55}&>, bool>::type std::__invoke_r<bool, main::{lambda()#55}&>(main::{lambda()#55}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#55}&>, bool>::type std::__invoke_r<bool, main::{lambda()#55}&>(main::{lambda()#55}&):
.LFB5845:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}& std::forward<main::{lambda()#55}&>(std::remove_reference<main::{lambda()#55}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#55}&>(std::__invoke_other, main::{lambda()#55}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#55}*& std::_Any_data::_M_access<main::{lambda()#55}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55}*& std::_Any_data::_M_access<main::{lambda()#55}*>()
main::{lambda()#55}*& std::_Any_data::_M_access<main::{lambda()#55}*>():
.LFB5846:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5847:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2765
	cmpl	$3, %eax
	jg	.L2766
	cmpl	$2, %eax
	je	.L2767
	cmpl	$2, %eax
	jg	.L2766
	testl	%eax, %eax
	je	.L2768
	cmpl	$1, %eax
	je	.L2769
	jmp	.L2766
.L2768:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#55}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2766
.L2769:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}*& std::_Any_data::_M_access<main::{lambda()#55}*>()
	movq	%rbx, (%rax)
	jmp	.L2766
.L2767:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&)
	jmp	.L2766
.L2765:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2766:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56}>(std::_Any_data&, main::{lambda()#56}&&, std::integral_constant<bool, true>):
.LFB5848:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}&& std::forward<main::{lambda()#56}>(std::remove_reference<main::{lambda()#56}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&):
.LFB5849:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56} const& std::_Any_data::_M_access<main::{lambda()#56}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56} const* std::__addressof<main::{lambda()#56} const>(main::{lambda()#56} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#56}&>, bool>::type std::__invoke_r<bool, main::{lambda()#56}&>(main::{lambda()#56}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#56}&>, bool>::type std::__invoke_r<bool, main::{lambda()#56}&>(main::{lambda()#56}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#56}&>, bool>::type std::__invoke_r<bool, main::{lambda()#56}&>(main::{lambda()#56}&):
.LFB5850:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}& std::forward<main::{lambda()#56}&>(std::remove_reference<main::{lambda()#56}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#56}&>(std::__invoke_other, main::{lambda()#56}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#56}*& std::_Any_data::_M_access<main::{lambda()#56}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56}*& std::_Any_data::_M_access<main::{lambda()#56}*>()
main::{lambda()#56}*& std::_Any_data::_M_access<main::{lambda()#56}*>():
.LFB5851:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5852:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2779
	cmpl	$3, %eax
	jg	.L2780
	cmpl	$2, %eax
	je	.L2781
	cmpl	$2, %eax
	jg	.L2780
	testl	%eax, %eax
	je	.L2782
	cmpl	$1, %eax
	je	.L2783
	jmp	.L2780
.L2782:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#56}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2780
.L2783:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}*& std::_Any_data::_M_access<main::{lambda()#56}*>()
	movq	%rbx, (%rax)
	jmp	.L2780
.L2781:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&)
	jmp	.L2780
.L2779:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2780:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57}>(std::_Any_data&, main::{lambda()#57}&&, std::integral_constant<bool, true>):
.LFB5853:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}&& std::forward<main::{lambda()#57}>(std::remove_reference<main::{lambda()#57}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&):
.LFB5854:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57} const& std::_Any_data::_M_access<main::{lambda()#57}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57} const* std::__addressof<main::{lambda()#57} const>(main::{lambda()#57} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#57}&>, bool>::type std::__invoke_r<bool, main::{lambda()#57}&>(main::{lambda()#57}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#57}&>, bool>::type std::__invoke_r<bool, main::{lambda()#57}&>(main::{lambda()#57}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#57}&>, bool>::type std::__invoke_r<bool, main::{lambda()#57}&>(main::{lambda()#57}&):
.LFB5855:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}& std::forward<main::{lambda()#57}&>(std::remove_reference<main::{lambda()#57}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#57}&>(std::__invoke_other, main::{lambda()#57}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#57}*& std::_Any_data::_M_access<main::{lambda()#57}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57}*& std::_Any_data::_M_access<main::{lambda()#57}*>()
main::{lambda()#57}*& std::_Any_data::_M_access<main::{lambda()#57}*>():
.LFB5856:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5857:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2793
	cmpl	$3, %eax
	jg	.L2794
	cmpl	$2, %eax
	je	.L2795
	cmpl	$2, %eax
	jg	.L2794
	testl	%eax, %eax
	je	.L2796
	cmpl	$1, %eax
	je	.L2797
	jmp	.L2794
.L2796:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#57}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2794
.L2797:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}*& std::_Any_data::_M_access<main::{lambda()#57}*>()
	movq	%rbx, (%rax)
	jmp	.L2794
.L2795:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&)
	jmp	.L2794
.L2793:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2794:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58}>(std::_Any_data&, main::{lambda()#58}&&, std::integral_constant<bool, true>):
.LFB5858:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}&& std::forward<main::{lambda()#58}>(std::remove_reference<main::{lambda()#58}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&):
.LFB5859:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58} const& std::_Any_data::_M_access<main::{lambda()#58}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58} const* std::__addressof<main::{lambda()#58} const>(main::{lambda()#58} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#58}&>, bool>::type std::__invoke_r<bool, main::{lambda()#58}&>(main::{lambda()#58}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#58}&>, bool>::type std::__invoke_r<bool, main::{lambda()#58}&>(main::{lambda()#58}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#58}&>, bool>::type std::__invoke_r<bool, main::{lambda()#58}&>(main::{lambda()#58}&):
.LFB5860:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}& std::forward<main::{lambda()#58}&>(std::remove_reference<main::{lambda()#58}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#58}&>(std::__invoke_other, main::{lambda()#58}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#58}*& std::_Any_data::_M_access<main::{lambda()#58}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58}*& std::_Any_data::_M_access<main::{lambda()#58}*>()
main::{lambda()#58}*& std::_Any_data::_M_access<main::{lambda()#58}*>():
.LFB5861:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5862:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2807
	cmpl	$3, %eax
	jg	.L2808
	cmpl	$2, %eax
	je	.L2809
	cmpl	$2, %eax
	jg	.L2808
	testl	%eax, %eax
	je	.L2810
	cmpl	$1, %eax
	je	.L2811
	jmp	.L2808
.L2810:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#58}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2808
.L2811:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}*& std::_Any_data::_M_access<main::{lambda()#58}*>()
	movq	%rbx, (%rax)
	jmp	.L2808
.L2809:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&)
	jmp	.L2808
.L2807:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2808:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59}>(std::_Any_data&, main::{lambda()#59}&&, std::integral_constant<bool, true>):
.LFB5863:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}&& std::forward<main::{lambda()#59}>(std::remove_reference<main::{lambda()#59}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&):
.LFB5864:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59} const& std::_Any_data::_M_access<main::{lambda()#59}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59} const* std::__addressof<main::{lambda()#59} const>(main::{lambda()#59} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#59}&>, bool>::type std::__invoke_r<bool, main::{lambda()#59}&>(main::{lambda()#59}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#59}&>, bool>::type std::__invoke_r<bool, main::{lambda()#59}&>(main::{lambda()#59}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#59}&>, bool>::type std::__invoke_r<bool, main::{lambda()#59}&>(main::{lambda()#59}&):
.LFB5865:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}& std::forward<main::{lambda()#59}&>(std::remove_reference<main::{lambda()#59}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#59}&>(std::__invoke_other, main::{lambda()#59}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#59}*& std::_Any_data::_M_access<main::{lambda()#59}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59}*& std::_Any_data::_M_access<main::{lambda()#59}*>()
main::{lambda()#59}*& std::_Any_data::_M_access<main::{lambda()#59}*>():
.LFB5866:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5867:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2821
	cmpl	$3, %eax
	jg	.L2822
	cmpl	$2, %eax
	je	.L2823
	cmpl	$2, %eax
	jg	.L2822
	testl	%eax, %eax
	je	.L2824
	cmpl	$1, %eax
	je	.L2825
	jmp	.L2822
.L2824:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#59}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2822
.L2825:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}*& std::_Any_data::_M_access<main::{lambda()#59}*>()
	movq	%rbx, (%rax)
	jmp	.L2822
.L2823:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&)
	jmp	.L2822
.L2821:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2822:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60}>(std::_Any_data&, main::{lambda()#60}&&, std::integral_constant<bool, true>):
.LFB5868:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}&& std::forward<main::{lambda()#60}>(std::remove_reference<main::{lambda()#60}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&):
.LFB5869:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60} const& std::_Any_data::_M_access<main::{lambda()#60}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60} const* std::__addressof<main::{lambda()#60} const>(main::{lambda()#60} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#60}&>, bool>::type std::__invoke_r<bool, main::{lambda()#60}&>(main::{lambda()#60}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#60}&>, bool>::type std::__invoke_r<bool, main::{lambda()#60}&>(main::{lambda()#60}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#60}&>, bool>::type std::__invoke_r<bool, main::{lambda()#60}&>(main::{lambda()#60}&):
.LFB5870:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}& std::forward<main::{lambda()#60}&>(std::remove_reference<main::{lambda()#60}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#60}&>(std::__invoke_other, main::{lambda()#60}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#60}*& std::_Any_data::_M_access<main::{lambda()#60}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60}*& std::_Any_data::_M_access<main::{lambda()#60}*>()
main::{lambda()#60}*& std::_Any_data::_M_access<main::{lambda()#60}*>():
.LFB5871:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5872:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2835
	cmpl	$3, %eax
	jg	.L2836
	cmpl	$2, %eax
	je	.L2837
	cmpl	$2, %eax
	jg	.L2836
	testl	%eax, %eax
	je	.L2838
	cmpl	$1, %eax
	je	.L2839
	jmp	.L2836
.L2838:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#60}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2836
.L2839:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}*& std::_Any_data::_M_access<main::{lambda()#60}*>()
	movq	%rbx, (%rax)
	jmp	.L2836
.L2837:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&)
	jmp	.L2836
.L2835:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2836:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61}>(std::_Any_data&, main::{lambda()#61}&&, std::integral_constant<bool, true>):
.LFB5873:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}&& std::forward<main::{lambda()#61}>(std::remove_reference<main::{lambda()#61}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&):
.LFB5874:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61} const& std::_Any_data::_M_access<main::{lambda()#61}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61} const* std::__addressof<main::{lambda()#61} const>(main::{lambda()#61} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#61}&>, bool>::type std::__invoke_r<bool, main::{lambda()#61}&>(main::{lambda()#61}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#61}&>, bool>::type std::__invoke_r<bool, main::{lambda()#61}&>(main::{lambda()#61}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#61}&>, bool>::type std::__invoke_r<bool, main::{lambda()#61}&>(main::{lambda()#61}&):
.LFB5875:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}& std::forward<main::{lambda()#61}&>(std::remove_reference<main::{lambda()#61}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#61}&>(std::__invoke_other, main::{lambda()#61}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#61}*& std::_Any_data::_M_access<main::{lambda()#61}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61}*& std::_Any_data::_M_access<main::{lambda()#61}*>()
main::{lambda()#61}*& std::_Any_data::_M_access<main::{lambda()#61}*>():
.LFB5876:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5877:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2849
	cmpl	$3, %eax
	jg	.L2850
	cmpl	$2, %eax
	je	.L2851
	cmpl	$2, %eax
	jg	.L2850
	testl	%eax, %eax
	je	.L2852
	cmpl	$1, %eax
	je	.L2853
	jmp	.L2850
.L2852:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#61}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2850
.L2853:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}*& std::_Any_data::_M_access<main::{lambda()#61}*>()
	movq	%rbx, (%rax)
	jmp	.L2850
.L2851:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&)
	jmp	.L2850
.L2849:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2850:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62}>(std::_Any_data&, main::{lambda()#62}&&, std::integral_constant<bool, true>):
.LFB5878:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}&& std::forward<main::{lambda()#62}>(std::remove_reference<main::{lambda()#62}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&):
.LFB5879:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62} const& std::_Any_data::_M_access<main::{lambda()#62}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62} const* std::__addressof<main::{lambda()#62} const>(main::{lambda()#62} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#62}&>, bool>::type std::__invoke_r<bool, main::{lambda()#62}&>(main::{lambda()#62}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#62}&>, bool>::type std::__invoke_r<bool, main::{lambda()#62}&>(main::{lambda()#62}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#62}&>, bool>::type std::__invoke_r<bool, main::{lambda()#62}&>(main::{lambda()#62}&):
.LFB5880:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}& std::forward<main::{lambda()#62}&>(std::remove_reference<main::{lambda()#62}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#62}&>(std::__invoke_other, main::{lambda()#62}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#62}*& std::_Any_data::_M_access<main::{lambda()#62}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62}*& std::_Any_data::_M_access<main::{lambda()#62}*>()
main::{lambda()#62}*& std::_Any_data::_M_access<main::{lambda()#62}*>():
.LFB5881:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5882:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2863
	cmpl	$3, %eax
	jg	.L2864
	cmpl	$2, %eax
	je	.L2865
	cmpl	$2, %eax
	jg	.L2864
	testl	%eax, %eax
	je	.L2866
	cmpl	$1, %eax
	je	.L2867
	jmp	.L2864
.L2866:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#62}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2864
.L2867:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}*& std::_Any_data::_M_access<main::{lambda()#62}*>()
	movq	%rbx, (%rax)
	jmp	.L2864
.L2865:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&)
	jmp	.L2864
.L2863:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2864:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63}>(std::_Any_data&, main::{lambda()#63}&&, std::integral_constant<bool, true>):
.LFB5883:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}&& std::forward<main::{lambda()#63}>(std::remove_reference<main::{lambda()#63}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&):
.LFB5884:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63} const& std::_Any_data::_M_access<main::{lambda()#63}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63} const* std::__addressof<main::{lambda()#63} const>(main::{lambda()#63} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#63}&>, bool>::type std::__invoke_r<bool, main::{lambda()#63}&>(main::{lambda()#63}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#63}&>, bool>::type std::__invoke_r<bool, main::{lambda()#63}&>(main::{lambda()#63}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#63}&>, bool>::type std::__invoke_r<bool, main::{lambda()#63}&>(main::{lambda()#63}&):
.LFB5885:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}& std::forward<main::{lambda()#63}&>(std::remove_reference<main::{lambda()#63}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#63}&>(std::__invoke_other, main::{lambda()#63}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#63}*& std::_Any_data::_M_access<main::{lambda()#63}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63}*& std::_Any_data::_M_access<main::{lambda()#63}*>()
main::{lambda()#63}*& std::_Any_data::_M_access<main::{lambda()#63}*>():
.LFB5886:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5887:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2877
	cmpl	$3, %eax
	jg	.L2878
	cmpl	$2, %eax
	je	.L2879
	cmpl	$2, %eax
	jg	.L2878
	testl	%eax, %eax
	je	.L2880
	cmpl	$1, %eax
	je	.L2881
	jmp	.L2878
.L2880:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#63}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2878
.L2881:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}*& std::_Any_data::_M_access<main::{lambda()#63}*>()
	movq	%rbx, (%rax)
	jmp	.L2878
.L2879:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&)
	jmp	.L2878
.L2877:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2878:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64}>(std::_Any_data&, main::{lambda()#64}&&, std::integral_constant<bool, true>):
.LFB5888:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}&& std::forward<main::{lambda()#64}>(std::remove_reference<main::{lambda()#64}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&):
.LFB5889:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64} const& std::_Any_data::_M_access<main::{lambda()#64}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64} const* std::__addressof<main::{lambda()#64} const>(main::{lambda()#64} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#64}&>, bool>::type std::__invoke_r<bool, main::{lambda()#64}&>(main::{lambda()#64}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#64}&>, bool>::type std::__invoke_r<bool, main::{lambda()#64}&>(main::{lambda()#64}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#64}&>, bool>::type std::__invoke_r<bool, main::{lambda()#64}&>(main::{lambda()#64}&):
.LFB5890:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}& std::forward<main::{lambda()#64}&>(std::remove_reference<main::{lambda()#64}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#64}&>(std::__invoke_other, main::{lambda()#64}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#64}*& std::_Any_data::_M_access<main::{lambda()#64}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64}*& std::_Any_data::_M_access<main::{lambda()#64}*>()
main::{lambda()#64}*& std::_Any_data::_M_access<main::{lambda()#64}*>():
.LFB5891:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5892:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2891
	cmpl	$3, %eax
	jg	.L2892
	cmpl	$2, %eax
	je	.L2893
	cmpl	$2, %eax
	jg	.L2892
	testl	%eax, %eax
	je	.L2894
	cmpl	$1, %eax
	je	.L2895
	jmp	.L2892
.L2894:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#64}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2892
.L2895:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}*& std::_Any_data::_M_access<main::{lambda()#64}*>()
	movq	%rbx, (%rax)
	jmp	.L2892
.L2893:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&)
	jmp	.L2892
.L2891:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2892:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65}>(std::_Any_data&, main::{lambda()#65}&&, std::integral_constant<bool, true>):
.LFB5893:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}&& std::forward<main::{lambda()#65}>(std::remove_reference<main::{lambda()#65}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&):
.LFB5894:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65} const& std::_Any_data::_M_access<main::{lambda()#65}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65} const* std::__addressof<main::{lambda()#65} const>(main::{lambda()#65} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#65}&>, bool>::type std::__invoke_r<bool, main::{lambda()#65}&>(main::{lambda()#65}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#65}&>, bool>::type std::__invoke_r<bool, main::{lambda()#65}&>(main::{lambda()#65}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#65}&>, bool>::type std::__invoke_r<bool, main::{lambda()#65}&>(main::{lambda()#65}&):
.LFB5895:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}& std::forward<main::{lambda()#65}&>(std::remove_reference<main::{lambda()#65}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#65}&>(std::__invoke_other, main::{lambda()#65}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#65}*& std::_Any_data::_M_access<main::{lambda()#65}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65}*& std::_Any_data::_M_access<main::{lambda()#65}*>()
main::{lambda()#65}*& std::_Any_data::_M_access<main::{lambda()#65}*>():
.LFB5896:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5897:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2905
	cmpl	$3, %eax
	jg	.L2906
	cmpl	$2, %eax
	je	.L2907
	cmpl	$2, %eax
	jg	.L2906
	testl	%eax, %eax
	je	.L2908
	cmpl	$1, %eax
	je	.L2909
	jmp	.L2906
.L2908:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#65}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2906
.L2909:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}*& std::_Any_data::_M_access<main::{lambda()#65}*>()
	movq	%rbx, (%rax)
	jmp	.L2906
.L2907:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&)
	jmp	.L2906
.L2905:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2906:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66}>(std::_Any_data&, main::{lambda()#66}&&, std::integral_constant<bool, true>):
.LFB5898:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}&& std::forward<main::{lambda()#66}>(std::remove_reference<main::{lambda()#66}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&):
.LFB5899:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66} const& std::_Any_data::_M_access<main::{lambda()#66}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66} const* std::__addressof<main::{lambda()#66} const>(main::{lambda()#66} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#66}&>, bool>::type std::__invoke_r<bool, main::{lambda()#66}&>(main::{lambda()#66}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#66}&>, bool>::type std::__invoke_r<bool, main::{lambda()#66}&>(main::{lambda()#66}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#66}&>, bool>::type std::__invoke_r<bool, main::{lambda()#66}&>(main::{lambda()#66}&):
.LFB5900:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}& std::forward<main::{lambda()#66}&>(std::remove_reference<main::{lambda()#66}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#66}&>(std::__invoke_other, main::{lambda()#66}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#66}*& std::_Any_data::_M_access<main::{lambda()#66}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66}*& std::_Any_data::_M_access<main::{lambda()#66}*>()
main::{lambda()#66}*& std::_Any_data::_M_access<main::{lambda()#66}*>():
.LFB5901:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5902:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2919
	cmpl	$3, %eax
	jg	.L2920
	cmpl	$2, %eax
	je	.L2921
	cmpl	$2, %eax
	jg	.L2920
	testl	%eax, %eax
	je	.L2922
	cmpl	$1, %eax
	je	.L2923
	jmp	.L2920
.L2922:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#66}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2920
.L2923:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}*& std::_Any_data::_M_access<main::{lambda()#66}*>()
	movq	%rbx, (%rax)
	jmp	.L2920
.L2921:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&)
	jmp	.L2920
.L2919:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2920:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67}>(std::_Any_data&, main::{lambda()#67}&&, std::integral_constant<bool, true>):
.LFB5903:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}&& std::forward<main::{lambda()#67}>(std::remove_reference<main::{lambda()#67}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&):
.LFB5904:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67} const& std::_Any_data::_M_access<main::{lambda()#67}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67} const* std::__addressof<main::{lambda()#67} const>(main::{lambda()#67} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#67}&>, bool>::type std::__invoke_r<bool, main::{lambda()#67}&>(main::{lambda()#67}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#67}&>, bool>::type std::__invoke_r<bool, main::{lambda()#67}&>(main::{lambda()#67}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#67}&>, bool>::type std::__invoke_r<bool, main::{lambda()#67}&>(main::{lambda()#67}&):
.LFB5905:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}& std::forward<main::{lambda()#67}&>(std::remove_reference<main::{lambda()#67}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#67}&>(std::__invoke_other, main::{lambda()#67}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#67}*& std::_Any_data::_M_access<main::{lambda()#67}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67}*& std::_Any_data::_M_access<main::{lambda()#67}*>()
main::{lambda()#67}*& std::_Any_data::_M_access<main::{lambda()#67}*>():
.LFB5906:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5907:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2933
	cmpl	$3, %eax
	jg	.L2934
	cmpl	$2, %eax
	je	.L2935
	cmpl	$2, %eax
	jg	.L2934
	testl	%eax, %eax
	je	.L2936
	cmpl	$1, %eax
	je	.L2937
	jmp	.L2934
.L2936:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#67}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2934
.L2937:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}*& std::_Any_data::_M_access<main::{lambda()#67}*>()
	movq	%rbx, (%rax)
	jmp	.L2934
.L2935:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&)
	jmp	.L2934
.L2933:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2934:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68}>(std::_Any_data&, main::{lambda()#68}&&, std::integral_constant<bool, true>):
.LFB5908:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}&& std::forward<main::{lambda()#68}>(std::remove_reference<main::{lambda()#68}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&):
.LFB5909:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68} const& std::_Any_data::_M_access<main::{lambda()#68}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68} const* std::__addressof<main::{lambda()#68} const>(main::{lambda()#68} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#68}&>, bool>::type std::__invoke_r<bool, main::{lambda()#68}&>(main::{lambda()#68}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#68}&>, bool>::type std::__invoke_r<bool, main::{lambda()#68}&>(main::{lambda()#68}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#68}&>, bool>::type std::__invoke_r<bool, main::{lambda()#68}&>(main::{lambda()#68}&):
.LFB5910:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}& std::forward<main::{lambda()#68}&>(std::remove_reference<main::{lambda()#68}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#68}&>(std::__invoke_other, main::{lambda()#68}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#68}*& std::_Any_data::_M_access<main::{lambda()#68}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68}*& std::_Any_data::_M_access<main::{lambda()#68}*>()
main::{lambda()#68}*& std::_Any_data::_M_access<main::{lambda()#68}*>():
.LFB5911:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5912:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2947
	cmpl	$3, %eax
	jg	.L2948
	cmpl	$2, %eax
	je	.L2949
	cmpl	$2, %eax
	jg	.L2948
	testl	%eax, %eax
	je	.L2950
	cmpl	$1, %eax
	je	.L2951
	jmp	.L2948
.L2950:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#68}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2948
.L2951:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}*& std::_Any_data::_M_access<main::{lambda()#68}*>()
	movq	%rbx, (%rax)
	jmp	.L2948
.L2949:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&)
	jmp	.L2948
.L2947:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2948:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69}>(std::_Any_data&, main::{lambda()#69}&&, std::integral_constant<bool, true>):
.LFB5913:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}&& std::forward<main::{lambda()#69}>(std::remove_reference<main::{lambda()#69}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&):
.LFB5914:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69} const& std::_Any_data::_M_access<main::{lambda()#69}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69} const* std::__addressof<main::{lambda()#69} const>(main::{lambda()#69} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#69}&>, bool>::type std::__invoke_r<bool, main::{lambda()#69}&>(main::{lambda()#69}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#69}&>, bool>::type std::__invoke_r<bool, main::{lambda()#69}&>(main::{lambda()#69}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#69}&>, bool>::type std::__invoke_r<bool, main::{lambda()#69}&>(main::{lambda()#69}&):
.LFB5915:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}& std::forward<main::{lambda()#69}&>(std::remove_reference<main::{lambda()#69}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#69}&>(std::__invoke_other, main::{lambda()#69}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#69}*& std::_Any_data::_M_access<main::{lambda()#69}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69}*& std::_Any_data::_M_access<main::{lambda()#69}*>()
main::{lambda()#69}*& std::_Any_data::_M_access<main::{lambda()#69}*>():
.LFB5916:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5917:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2961
	cmpl	$3, %eax
	jg	.L2962
	cmpl	$2, %eax
	je	.L2963
	cmpl	$2, %eax
	jg	.L2962
	testl	%eax, %eax
	je	.L2964
	cmpl	$1, %eax
	je	.L2965
	jmp	.L2962
.L2964:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#69}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2962
.L2965:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}*& std::_Any_data::_M_access<main::{lambda()#69}*>()
	movq	%rbx, (%rax)
	jmp	.L2962
.L2963:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&)
	jmp	.L2962
.L2961:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2962:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70}>(std::_Any_data&, main::{lambda()#70}&&, std::integral_constant<bool, true>):
.LFB5918:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}&& std::forward<main::{lambda()#70}>(std::remove_reference<main::{lambda()#70}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&):
.LFB5919:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70} const& std::_Any_data::_M_access<main::{lambda()#70}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70} const* std::__addressof<main::{lambda()#70} const>(main::{lambda()#70} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#70}&>, bool>::type std::__invoke_r<bool, main::{lambda()#70}&>(main::{lambda()#70}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#70}&>, bool>::type std::__invoke_r<bool, main::{lambda()#70}&>(main::{lambda()#70}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#70}&>, bool>::type std::__invoke_r<bool, main::{lambda()#70}&>(main::{lambda()#70}&):
.LFB5920:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}& std::forward<main::{lambda()#70}&>(std::remove_reference<main::{lambda()#70}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#70}&>(std::__invoke_other, main::{lambda()#70}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#70}*& std::_Any_data::_M_access<main::{lambda()#70}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70}*& std::_Any_data::_M_access<main::{lambda()#70}*>()
main::{lambda()#70}*& std::_Any_data::_M_access<main::{lambda()#70}*>():
.LFB5921:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5922:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2975
	cmpl	$3, %eax
	jg	.L2976
	cmpl	$2, %eax
	je	.L2977
	cmpl	$2, %eax
	jg	.L2976
	testl	%eax, %eax
	je	.L2978
	cmpl	$1, %eax
	je	.L2979
	jmp	.L2976
.L2978:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#70}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2976
.L2979:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}*& std::_Any_data::_M_access<main::{lambda()#70}*>()
	movq	%rbx, (%rax)
	jmp	.L2976
.L2977:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&)
	jmp	.L2976
.L2975:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2976:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71}>(std::_Any_data&, main::{lambda()#71}&&, std::integral_constant<bool, true>):
.LFB5923:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}&& std::forward<main::{lambda()#71}>(std::remove_reference<main::{lambda()#71}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&):
.LFB5924:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71} const& std::_Any_data::_M_access<main::{lambda()#71}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71} const* std::__addressof<main::{lambda()#71} const>(main::{lambda()#71} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#71}&>, bool>::type std::__invoke_r<bool, main::{lambda()#71}&>(main::{lambda()#71}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#71}&>, bool>::type std::__invoke_r<bool, main::{lambda()#71}&>(main::{lambda()#71}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#71}&>, bool>::type std::__invoke_r<bool, main::{lambda()#71}&>(main::{lambda()#71}&):
.LFB5925:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}& std::forward<main::{lambda()#71}&>(std::remove_reference<main::{lambda()#71}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#71}&>(std::__invoke_other, main::{lambda()#71}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#71}*& std::_Any_data::_M_access<main::{lambda()#71}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71}*& std::_Any_data::_M_access<main::{lambda()#71}*>()
main::{lambda()#71}*& std::_Any_data::_M_access<main::{lambda()#71}*>():
.LFB5926:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5927:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L2989
	cmpl	$3, %eax
	jg	.L2990
	cmpl	$2, %eax
	je	.L2991
	cmpl	$2, %eax
	jg	.L2990
	testl	%eax, %eax
	je	.L2992
	cmpl	$1, %eax
	je	.L2993
	jmp	.L2990
.L2992:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#71}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L2990
.L2993:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}*& std::_Any_data::_M_access<main::{lambda()#71}*>()
	movq	%rbx, (%rax)
	jmp	.L2990
.L2991:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&)
	jmp	.L2990
.L2989:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L2990:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72}>(std::_Any_data&, main::{lambda()#72}&&, std::integral_constant<bool, true>):
.LFB5928:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}&& std::forward<main::{lambda()#72}>(std::remove_reference<main::{lambda()#72}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&):
.LFB5929:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72} const& std::_Any_data::_M_access<main::{lambda()#72}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72} const* std::__addressof<main::{lambda()#72} const>(main::{lambda()#72} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#72}&>, bool>::type std::__invoke_r<bool, main::{lambda()#72}&>(main::{lambda()#72}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#72}&>, bool>::type std::__invoke_r<bool, main::{lambda()#72}&>(main::{lambda()#72}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#72}&>, bool>::type std::__invoke_r<bool, main::{lambda()#72}&>(main::{lambda()#72}&):
.LFB5930:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}& std::forward<main::{lambda()#72}&>(std::remove_reference<main::{lambda()#72}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#72}&>(std::__invoke_other, main::{lambda()#72}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#72}*& std::_Any_data::_M_access<main::{lambda()#72}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72}*& std::_Any_data::_M_access<main::{lambda()#72}*>()
main::{lambda()#72}*& std::_Any_data::_M_access<main::{lambda()#72}*>():
.LFB5931:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5932:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3003
	cmpl	$3, %eax
	jg	.L3004
	cmpl	$2, %eax
	je	.L3005
	cmpl	$2, %eax
	jg	.L3004
	testl	%eax, %eax
	je	.L3006
	cmpl	$1, %eax
	je	.L3007
	jmp	.L3004
.L3006:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#72}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3004
.L3007:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}*& std::_Any_data::_M_access<main::{lambda()#72}*>()
	movq	%rbx, (%rax)
	jmp	.L3004
.L3005:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&)
	jmp	.L3004
.L3003:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3004:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73}>(std::_Any_data&, main::{lambda()#73}&&, std::integral_constant<bool, true>):
.LFB5933:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}&& std::forward<main::{lambda()#73}>(std::remove_reference<main::{lambda()#73}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&):
.LFB5934:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73} const& std::_Any_data::_M_access<main::{lambda()#73}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73} const* std::__addressof<main::{lambda()#73} const>(main::{lambda()#73} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#73}&>, bool>::type std::__invoke_r<bool, main::{lambda()#73}&>(main::{lambda()#73}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#73}&>, bool>::type std::__invoke_r<bool, main::{lambda()#73}&>(main::{lambda()#73}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#73}&>, bool>::type std::__invoke_r<bool, main::{lambda()#73}&>(main::{lambda()#73}&):
.LFB5935:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}& std::forward<main::{lambda()#73}&>(std::remove_reference<main::{lambda()#73}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#73}&>(std::__invoke_other, main::{lambda()#73}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#73}*& std::_Any_data::_M_access<main::{lambda()#73}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73}*& std::_Any_data::_M_access<main::{lambda()#73}*>()
main::{lambda()#73}*& std::_Any_data::_M_access<main::{lambda()#73}*>():
.LFB5936:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5937:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3017
	cmpl	$3, %eax
	jg	.L3018
	cmpl	$2, %eax
	je	.L3019
	cmpl	$2, %eax
	jg	.L3018
	testl	%eax, %eax
	je	.L3020
	cmpl	$1, %eax
	je	.L3021
	jmp	.L3018
.L3020:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#73}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3018
.L3021:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}*& std::_Any_data::_M_access<main::{lambda()#73}*>()
	movq	%rbx, (%rax)
	jmp	.L3018
.L3019:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&)
	jmp	.L3018
.L3017:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3018:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74}>(std::_Any_data&, main::{lambda()#74}&&, std::integral_constant<bool, true>):
.LFB5938:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}&& std::forward<main::{lambda()#74}>(std::remove_reference<main::{lambda()#74}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&):
.LFB5939:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74} const& std::_Any_data::_M_access<main::{lambda()#74}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74} const* std::__addressof<main::{lambda()#74} const>(main::{lambda()#74} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#74}&>, bool>::type std::__invoke_r<bool, main::{lambda()#74}&>(main::{lambda()#74}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#74}&>, bool>::type std::__invoke_r<bool, main::{lambda()#74}&>(main::{lambda()#74}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#74}&>, bool>::type std::__invoke_r<bool, main::{lambda()#74}&>(main::{lambda()#74}&):
.LFB5940:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}& std::forward<main::{lambda()#74}&>(std::remove_reference<main::{lambda()#74}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#74}&>(std::__invoke_other, main::{lambda()#74}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#74}*& std::_Any_data::_M_access<main::{lambda()#74}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74}*& std::_Any_data::_M_access<main::{lambda()#74}*>()
main::{lambda()#74}*& std::_Any_data::_M_access<main::{lambda()#74}*>():
.LFB5941:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5942:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3031
	cmpl	$3, %eax
	jg	.L3032
	cmpl	$2, %eax
	je	.L3033
	cmpl	$2, %eax
	jg	.L3032
	testl	%eax, %eax
	je	.L3034
	cmpl	$1, %eax
	je	.L3035
	jmp	.L3032
.L3034:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#74}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3032
.L3035:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}*& std::_Any_data::_M_access<main::{lambda()#74}*>()
	movq	%rbx, (%rax)
	jmp	.L3032
.L3033:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&)
	jmp	.L3032
.L3031:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3032:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75}>(std::_Any_data&, main::{lambda()#75}&&, std::integral_constant<bool, true>):
.LFB5943:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}&& std::forward<main::{lambda()#75}>(std::remove_reference<main::{lambda()#75}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&):
.LFB5944:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75} const& std::_Any_data::_M_access<main::{lambda()#75}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75} const* std::__addressof<main::{lambda()#75} const>(main::{lambda()#75} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#75}&>, bool>::type std::__invoke_r<bool, main::{lambda()#75}&>(main::{lambda()#75}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#75}&>, bool>::type std::__invoke_r<bool, main::{lambda()#75}&>(main::{lambda()#75}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#75}&>, bool>::type std::__invoke_r<bool, main::{lambda()#75}&>(main::{lambda()#75}&):
.LFB5945:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}& std::forward<main::{lambda()#75}&>(std::remove_reference<main::{lambda()#75}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#75}&>(std::__invoke_other, main::{lambda()#75}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#75}*& std::_Any_data::_M_access<main::{lambda()#75}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75}*& std::_Any_data::_M_access<main::{lambda()#75}*>()
main::{lambda()#75}*& std::_Any_data::_M_access<main::{lambda()#75}*>():
.LFB5946:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5947:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3045
	cmpl	$3, %eax
	jg	.L3046
	cmpl	$2, %eax
	je	.L3047
	cmpl	$2, %eax
	jg	.L3046
	testl	%eax, %eax
	je	.L3048
	cmpl	$1, %eax
	je	.L3049
	jmp	.L3046
.L3048:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#75}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3046
.L3049:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}*& std::_Any_data::_M_access<main::{lambda()#75}*>()
	movq	%rbx, (%rax)
	jmp	.L3046
.L3047:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&)
	jmp	.L3046
.L3045:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3046:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76}>(std::_Any_data&, main::{lambda()#76}&&, std::integral_constant<bool, true>):
.LFB5948:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}&& std::forward<main::{lambda()#76}>(std::remove_reference<main::{lambda()#76}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&):
.LFB5949:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76} const& std::_Any_data::_M_access<main::{lambda()#76}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76} const* std::__addressof<main::{lambda()#76} const>(main::{lambda()#76} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#76}&>, bool>::type std::__invoke_r<bool, main::{lambda()#76}&>(main::{lambda()#76}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#76}&>, bool>::type std::__invoke_r<bool, main::{lambda()#76}&>(main::{lambda()#76}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#76}&>, bool>::type std::__invoke_r<bool, main::{lambda()#76}&>(main::{lambda()#76}&):
.LFB5950:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}& std::forward<main::{lambda()#76}&>(std::remove_reference<main::{lambda()#76}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#76}&>(std::__invoke_other, main::{lambda()#76}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#76}*& std::_Any_data::_M_access<main::{lambda()#76}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76}*& std::_Any_data::_M_access<main::{lambda()#76}*>()
main::{lambda()#76}*& std::_Any_data::_M_access<main::{lambda()#76}*>():
.LFB5951:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5952:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3059
	cmpl	$3, %eax
	jg	.L3060
	cmpl	$2, %eax
	je	.L3061
	cmpl	$2, %eax
	jg	.L3060
	testl	%eax, %eax
	je	.L3062
	cmpl	$1, %eax
	je	.L3063
	jmp	.L3060
.L3062:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#76}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3060
.L3063:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}*& std::_Any_data::_M_access<main::{lambda()#76}*>()
	movq	%rbx, (%rax)
	jmp	.L3060
.L3061:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&)
	jmp	.L3060
.L3059:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3060:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77}>(std::_Any_data&, main::{lambda()#77}&&, std::integral_constant<bool, true>):
.LFB5953:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}&& std::forward<main::{lambda()#77}>(std::remove_reference<main::{lambda()#77}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&):
.LFB5954:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77} const& std::_Any_data::_M_access<main::{lambda()#77}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77} const* std::__addressof<main::{lambda()#77} const>(main::{lambda()#77} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#77}&>, bool>::type std::__invoke_r<bool, main::{lambda()#77}&>(main::{lambda()#77}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#77}&>, bool>::type std::__invoke_r<bool, main::{lambda()#77}&>(main::{lambda()#77}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#77}&>, bool>::type std::__invoke_r<bool, main::{lambda()#77}&>(main::{lambda()#77}&):
.LFB5955:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}& std::forward<main::{lambda()#77}&>(std::remove_reference<main::{lambda()#77}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#77}&>(std::__invoke_other, main::{lambda()#77}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#77}*& std::_Any_data::_M_access<main::{lambda()#77}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77}*& std::_Any_data::_M_access<main::{lambda()#77}*>()
main::{lambda()#77}*& std::_Any_data::_M_access<main::{lambda()#77}*>():
.LFB5956:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5957:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3073
	cmpl	$3, %eax
	jg	.L3074
	cmpl	$2, %eax
	je	.L3075
	cmpl	$2, %eax
	jg	.L3074
	testl	%eax, %eax
	je	.L3076
	cmpl	$1, %eax
	je	.L3077
	jmp	.L3074
.L3076:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#77}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3074
.L3077:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}*& std::_Any_data::_M_access<main::{lambda()#77}*>()
	movq	%rbx, (%rax)
	jmp	.L3074
.L3075:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&)
	jmp	.L3074
.L3073:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3074:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78}>(std::_Any_data&, main::{lambda()#78}&&, std::integral_constant<bool, true>):
.LFB5958:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}&& std::forward<main::{lambda()#78}>(std::remove_reference<main::{lambda()#78}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&):
.LFB5959:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78} const& std::_Any_data::_M_access<main::{lambda()#78}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78} const* std::__addressof<main::{lambda()#78} const>(main::{lambda()#78} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#78}&>, bool>::type std::__invoke_r<bool, main::{lambda()#78}&>(main::{lambda()#78}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#78}&>, bool>::type std::__invoke_r<bool, main::{lambda()#78}&>(main::{lambda()#78}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#78}&>, bool>::type std::__invoke_r<bool, main::{lambda()#78}&>(main::{lambda()#78}&):
.LFB5960:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}& std::forward<main::{lambda()#78}&>(std::remove_reference<main::{lambda()#78}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#78}&>(std::__invoke_other, main::{lambda()#78}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#78}*& std::_Any_data::_M_access<main::{lambda()#78}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78}*& std::_Any_data::_M_access<main::{lambda()#78}*>()
main::{lambda()#78}*& std::_Any_data::_M_access<main::{lambda()#78}*>():
.LFB5961:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5962:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3087
	cmpl	$3, %eax
	jg	.L3088
	cmpl	$2, %eax
	je	.L3089
	cmpl	$2, %eax
	jg	.L3088
	testl	%eax, %eax
	je	.L3090
	cmpl	$1, %eax
	je	.L3091
	jmp	.L3088
.L3090:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#78}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3088
.L3091:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}*& std::_Any_data::_M_access<main::{lambda()#78}*>()
	movq	%rbx, (%rax)
	jmp	.L3088
.L3089:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&)
	jmp	.L3088
.L3087:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3088:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79}>(std::_Any_data&, main::{lambda()#79}&&, std::integral_constant<bool, true>):
.LFB5963:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}&& std::forward<main::{lambda()#79}>(std::remove_reference<main::{lambda()#79}>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&)
std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&):
.LFB5964:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79} const& std::_Any_data::_M_access<main::{lambda()#79}>() const
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79} const* std::__addressof<main::{lambda()#79} const>(main::{lambda()#79} const&)
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::enable_if<is_invocable_r_v<bool, main::{lambda()#79}&>, bool>::type std::__invoke_r<bool, main::{lambda()#79}&>(main::{lambda()#79}&);	.scl	3;	.type	32;	.endef
	.seh_proc	std::enable_if<is_invocable_r_v<bool, main::{lambda()#79}&>, bool>::type std::__invoke_r<bool, main::{lambda()#79}&>(main::{lambda()#79}&)
std::enable_if<is_invocable_r_v<bool, main::{lambda()#79}&>, bool>::type std::__invoke_r<bool, main::{lambda()#79}&>(main::{lambda()#79}&):
.LFB5965:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}& std::forward<main::{lambda()#79}&>(std::remove_reference<main::{lambda()#79}&>::type&)
	movq	%rax, %rdx
	movl	%ebx, %ecx
	call	bool std::__invoke_impl<bool, main::{lambda()#79}&>(std::__invoke_other, main::{lambda()#79}&)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#79}*& std::_Any_data::_M_access<main::{lambda()#79}*>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79}*& std::_Any_data::_M_access<main::{lambda()#79}*>()
main::{lambda()#79}*& std::_Any_data::_M_access<main::{lambda()#79}*>():
.LFB5966:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation):
.LFB5967:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movl	%r8d, 48(%rbp)
	movl	48(%rbp), %eax
	cmpl	$3, %eax
	je	.L3101
	cmpl	$3, %eax
	jg	.L3102
	cmpl	$2, %eax
	je	.L3103
	cmpl	$2, %eax
	jg	.L3102
	testl	%eax, %eax
	je	.L3104
	cmpl	$1, %eax
	je	.L3105
	jmp	.L3102
.L3104:
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::type_info const*& std::_Any_data::_M_access<std::type_info const*>()
	leaq	typeinfo for main::{lambda()#79}(%rip), %rdx
	movq	%rdx, (%rax)
	jmp	.L3102
.L3105:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}*& std::_Any_data::_M_access<main::{lambda()#79}*>()
	movq	%rbx, (%rax)
	jmp	.L3102
.L3103:
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_get_pointer(std::_Any_data const&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&)
	jmp	.L3102
.L3101:
	movq	32(%rbp), %rax
	movl	%r9d, %edx
	movq	%rax, %rcx
	call	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
	nop
.L3102:
	movl	$0, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx16__aligned_membufISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() const
	.def	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() const;	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() const
__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr() const:
.LFB5968:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"x"
	.linkonce discard
	.globl	std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
	.def	std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&):
.LFB5984:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,"x"
	.linkonce discard
	.globl	std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
	.def	std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag);	.scl	2;	.type	32;	.endef
	.seh_proc	std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag):
.LFB5985:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rax
	subq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	main::{lambda()#1} const& std::_Any_data::_M_access<main::{lambda()#1}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1} const& std::_Any_data::_M_access<main::{lambda()#1}>() const
main::{lambda()#1} const& std::_Any_data::_M_access<main::{lambda()#1}>() const:
.LFB6025:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#1} const* std::__addressof<main::{lambda()#1} const>(main::{lambda()#1} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1} const* std::__addressof<main::{lambda()#1} const>(main::{lambda()#1} const&)
main::{lambda()#1} const* std::__addressof<main::{lambda()#1} const>(main::{lambda()#1} const&):
.LFB6026:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#1}& std::forward<main::{lambda()#1}&>(std::remove_reference<main::{lambda()#1}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1}& std::forward<main::{lambda()#1}&>(std::remove_reference<main::{lambda()#1}&>::type&)
main::{lambda()#1}& std::forward<main::{lambda()#1}&>(std::remove_reference<main::{lambda()#1}&>::type&):
.LFB6027:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#1}&>(std::__invoke_other, main::{lambda()#1}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#1}&>(std::__invoke_other, main::{lambda()#1}&)
bool std::__invoke_impl<bool, main::{lambda()#1}&>(std::__invoke_other, main::{lambda()#1}&):
.LFB6028:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}& std::forward<main::{lambda()#1}&>(std::remove_reference<main::{lambda()#1}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#1}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&)
void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&):
.LFB6029:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1} const& std::forward<main::{lambda()#1} const&>(std::remove_reference<main::{lambda()#1} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6030:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1}& std::_Any_data::_M_access<main::{lambda()#1}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#2} const& std::_Any_data::_M_access<main::{lambda()#2}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2} const& std::_Any_data::_M_access<main::{lambda()#2}>() const
main::{lambda()#2} const& std::_Any_data::_M_access<main::{lambda()#2}>() const:
.LFB6031:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#2} const* std::__addressof<main::{lambda()#2} const>(main::{lambda()#2} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2} const* std::__addressof<main::{lambda()#2} const>(main::{lambda()#2} const&)
main::{lambda()#2} const* std::__addressof<main::{lambda()#2} const>(main::{lambda()#2} const&):
.LFB6032:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&)
main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&):
.LFB6033:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#2}&>(std::__invoke_other, main::{lambda()#2}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#2}&>(std::__invoke_other, main::{lambda()#2}&)
bool std::__invoke_impl<bool, main::{lambda()#2}&>(std::__invoke_other, main::{lambda()#2}&):
.LFB6034:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#2}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&)
void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&):
.LFB6035:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2} const& std::forward<main::{lambda()#2} const&>(std::remove_reference<main::{lambda()#2} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6036:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2}& std::_Any_data::_M_access<main::{lambda()#2}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#3} const& std::_Any_data::_M_access<main::{lambda()#3}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3} const& std::_Any_data::_M_access<main::{lambda()#3}>() const
main::{lambda()#3} const& std::_Any_data::_M_access<main::{lambda()#3}>() const:
.LFB6037:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#3} const* std::__addressof<main::{lambda()#3} const>(main::{lambda()#3} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3} const* std::__addressof<main::{lambda()#3} const>(main::{lambda()#3} const&)
main::{lambda()#3} const* std::__addressof<main::{lambda()#3} const>(main::{lambda()#3} const&):
.LFB6038:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&)
main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&):
.LFB6039:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#3}&>(std::__invoke_other, main::{lambda()#3}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#3}&>(std::__invoke_other, main::{lambda()#3}&)
bool std::__invoke_impl<bool, main::{lambda()#3}&>(std::__invoke_other, main::{lambda()#3}&):
.LFB6040:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#3}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&)
void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&):
.LFB6041:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3} const& std::forward<main::{lambda()#3} const&>(std::remove_reference<main::{lambda()#3} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6042:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3}& std::_Any_data::_M_access<main::{lambda()#3}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#4} const& std::_Any_data::_M_access<main::{lambda()#4}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4} const& std::_Any_data::_M_access<main::{lambda()#4}>() const
main::{lambda()#4} const& std::_Any_data::_M_access<main::{lambda()#4}>() const:
.LFB6043:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#4} const* std::__addressof<main::{lambda()#4} const>(main::{lambda()#4} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4} const* std::__addressof<main::{lambda()#4} const>(main::{lambda()#4} const&)
main::{lambda()#4} const* std::__addressof<main::{lambda()#4} const>(main::{lambda()#4} const&):
.LFB6044:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#4}& std::forward<main::{lambda()#4}&>(std::remove_reference<main::{lambda()#4}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4}& std::forward<main::{lambda()#4}&>(std::remove_reference<main::{lambda()#4}&>::type&)
main::{lambda()#4}& std::forward<main::{lambda()#4}&>(std::remove_reference<main::{lambda()#4}&>::type&):
.LFB6045:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#4}&>(std::__invoke_other, main::{lambda()#4}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#4}&>(std::__invoke_other, main::{lambda()#4}&)
bool std::__invoke_impl<bool, main::{lambda()#4}&>(std::__invoke_other, main::{lambda()#4}&):
.LFB6046:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}& std::forward<main::{lambda()#4}&>(std::remove_reference<main::{lambda()#4}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#4}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&)
void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&):
.LFB6047:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4} const& std::forward<main::{lambda()#4} const&>(std::remove_reference<main::{lambda()#4} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6048:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4}& std::_Any_data::_M_access<main::{lambda()#4}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#5} const& std::_Any_data::_M_access<main::{lambda()#5}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5} const& std::_Any_data::_M_access<main::{lambda()#5}>() const
main::{lambda()#5} const& std::_Any_data::_M_access<main::{lambda()#5}>() const:
.LFB6049:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#5} const* std::__addressof<main::{lambda()#5} const>(main::{lambda()#5} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5} const* std::__addressof<main::{lambda()#5} const>(main::{lambda()#5} const&)
main::{lambda()#5} const* std::__addressof<main::{lambda()#5} const>(main::{lambda()#5} const&):
.LFB6050:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#5}& std::forward<main::{lambda()#5}&>(std::remove_reference<main::{lambda()#5}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5}& std::forward<main::{lambda()#5}&>(std::remove_reference<main::{lambda()#5}&>::type&)
main::{lambda()#5}& std::forward<main::{lambda()#5}&>(std::remove_reference<main::{lambda()#5}&>::type&):
.LFB6051:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#5}&>(std::__invoke_other, main::{lambda()#5}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#5}&>(std::__invoke_other, main::{lambda()#5}&)
bool std::__invoke_impl<bool, main::{lambda()#5}&>(std::__invoke_other, main::{lambda()#5}&):
.LFB6052:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}& std::forward<main::{lambda()#5}&>(std::remove_reference<main::{lambda()#5}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#5}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&)
void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&):
.LFB6053:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5} const& std::forward<main::{lambda()#5} const&>(std::remove_reference<main::{lambda()#5} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6054:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5}& std::_Any_data::_M_access<main::{lambda()#5}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#6} const& std::_Any_data::_M_access<main::{lambda()#6}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6} const& std::_Any_data::_M_access<main::{lambda()#6}>() const
main::{lambda()#6} const& std::_Any_data::_M_access<main::{lambda()#6}>() const:
.LFB6055:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#6} const* std::__addressof<main::{lambda()#6} const>(main::{lambda()#6} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6} const* std::__addressof<main::{lambda()#6} const>(main::{lambda()#6} const&)
main::{lambda()#6} const* std::__addressof<main::{lambda()#6} const>(main::{lambda()#6} const&):
.LFB6056:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#6}& std::forward<main::{lambda()#6}&>(std::remove_reference<main::{lambda()#6}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6}& std::forward<main::{lambda()#6}&>(std::remove_reference<main::{lambda()#6}&>::type&)
main::{lambda()#6}& std::forward<main::{lambda()#6}&>(std::remove_reference<main::{lambda()#6}&>::type&):
.LFB6057:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#6}&>(std::__invoke_other, main::{lambda()#6}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#6}&>(std::__invoke_other, main::{lambda()#6}&)
bool std::__invoke_impl<bool, main::{lambda()#6}&>(std::__invoke_other, main::{lambda()#6}&):
.LFB6058:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}& std::forward<main::{lambda()#6}&>(std::remove_reference<main::{lambda()#6}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#6}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&)
void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&):
.LFB6059:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6} const& std::forward<main::{lambda()#6} const&>(std::remove_reference<main::{lambda()#6} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6060:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6}& std::_Any_data::_M_access<main::{lambda()#6}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#7} const& std::_Any_data::_M_access<main::{lambda()#7}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7} const& std::_Any_data::_M_access<main::{lambda()#7}>() const
main::{lambda()#7} const& std::_Any_data::_M_access<main::{lambda()#7}>() const:
.LFB6061:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#7} const* std::__addressof<main::{lambda()#7} const>(main::{lambda()#7} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7} const* std::__addressof<main::{lambda()#7} const>(main::{lambda()#7} const&)
main::{lambda()#7} const* std::__addressof<main::{lambda()#7} const>(main::{lambda()#7} const&):
.LFB6062:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#7}& std::forward<main::{lambda()#7}&>(std::remove_reference<main::{lambda()#7}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7}& std::forward<main::{lambda()#7}&>(std::remove_reference<main::{lambda()#7}&>::type&)
main::{lambda()#7}& std::forward<main::{lambda()#7}&>(std::remove_reference<main::{lambda()#7}&>::type&):
.LFB6063:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#7}&>(std::__invoke_other, main::{lambda()#7}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#7}&>(std::__invoke_other, main::{lambda()#7}&)
bool std::__invoke_impl<bool, main::{lambda()#7}&>(std::__invoke_other, main::{lambda()#7}&):
.LFB6064:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}& std::forward<main::{lambda()#7}&>(std::remove_reference<main::{lambda()#7}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#7}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&)
void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&):
.LFB6065:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7} const& std::forward<main::{lambda()#7} const&>(std::remove_reference<main::{lambda()#7} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6066:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7}& std::_Any_data::_M_access<main::{lambda()#7}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#8} const& std::_Any_data::_M_access<main::{lambda()#8}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8} const& std::_Any_data::_M_access<main::{lambda()#8}>() const
main::{lambda()#8} const& std::_Any_data::_M_access<main::{lambda()#8}>() const:
.LFB6067:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#8} const* std::__addressof<main::{lambda()#8} const>(main::{lambda()#8} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8} const* std::__addressof<main::{lambda()#8} const>(main::{lambda()#8} const&)
main::{lambda()#8} const* std::__addressof<main::{lambda()#8} const>(main::{lambda()#8} const&):
.LFB6068:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#8}& std::forward<main::{lambda()#8}&>(std::remove_reference<main::{lambda()#8}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8}& std::forward<main::{lambda()#8}&>(std::remove_reference<main::{lambda()#8}&>::type&)
main::{lambda()#8}& std::forward<main::{lambda()#8}&>(std::remove_reference<main::{lambda()#8}&>::type&):
.LFB6069:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#8}&>(std::__invoke_other, main::{lambda()#8}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#8}&>(std::__invoke_other, main::{lambda()#8}&)
bool std::__invoke_impl<bool, main::{lambda()#8}&>(std::__invoke_other, main::{lambda()#8}&):
.LFB6070:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}& std::forward<main::{lambda()#8}&>(std::remove_reference<main::{lambda()#8}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#8}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&)
void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&):
.LFB6071:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8} const& std::forward<main::{lambda()#8} const&>(std::remove_reference<main::{lambda()#8} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6072:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8}& std::_Any_data::_M_access<main::{lambda()#8}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#9} const& std::_Any_data::_M_access<main::{lambda()#9}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9} const& std::_Any_data::_M_access<main::{lambda()#9}>() const
main::{lambda()#9} const& std::_Any_data::_M_access<main::{lambda()#9}>() const:
.LFB6073:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#9} const* std::__addressof<main::{lambda()#9} const>(main::{lambda()#9} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9} const* std::__addressof<main::{lambda()#9} const>(main::{lambda()#9} const&)
main::{lambda()#9} const* std::__addressof<main::{lambda()#9} const>(main::{lambda()#9} const&):
.LFB6074:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#9}& std::forward<main::{lambda()#9}&>(std::remove_reference<main::{lambda()#9}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9}& std::forward<main::{lambda()#9}&>(std::remove_reference<main::{lambda()#9}&>::type&)
main::{lambda()#9}& std::forward<main::{lambda()#9}&>(std::remove_reference<main::{lambda()#9}&>::type&):
.LFB6075:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#9}&>(std::__invoke_other, main::{lambda()#9}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#9}&>(std::__invoke_other, main::{lambda()#9}&)
bool std::__invoke_impl<bool, main::{lambda()#9}&>(std::__invoke_other, main::{lambda()#9}&):
.LFB6076:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}& std::forward<main::{lambda()#9}&>(std::remove_reference<main::{lambda()#9}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#9}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&)
void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&):
.LFB6077:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9} const& std::forward<main::{lambda()#9} const&>(std::remove_reference<main::{lambda()#9} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6078:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9}& std::_Any_data::_M_access<main::{lambda()#9}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#10} const& std::_Any_data::_M_access<main::{lambda()#10}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10} const& std::_Any_data::_M_access<main::{lambda()#10}>() const
main::{lambda()#10} const& std::_Any_data::_M_access<main::{lambda()#10}>() const:
.LFB6079:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#10} const* std::__addressof<main::{lambda()#10} const>(main::{lambda()#10} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10} const* std::__addressof<main::{lambda()#10} const>(main::{lambda()#10} const&)
main::{lambda()#10} const* std::__addressof<main::{lambda()#10} const>(main::{lambda()#10} const&):
.LFB6080:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#10}& std::forward<main::{lambda()#10}&>(std::remove_reference<main::{lambda()#10}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10}& std::forward<main::{lambda()#10}&>(std::remove_reference<main::{lambda()#10}&>::type&)
main::{lambda()#10}& std::forward<main::{lambda()#10}&>(std::remove_reference<main::{lambda()#10}&>::type&):
.LFB6081:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#10}&>(std::__invoke_other, main::{lambda()#10}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#10}&>(std::__invoke_other, main::{lambda()#10}&)
bool std::__invoke_impl<bool, main::{lambda()#10}&>(std::__invoke_other, main::{lambda()#10}&):
.LFB6082:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}& std::forward<main::{lambda()#10}&>(std::remove_reference<main::{lambda()#10}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#10}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&)
void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&):
.LFB6083:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10} const& std::forward<main::{lambda()#10} const&>(std::remove_reference<main::{lambda()#10} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6084:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10}& std::_Any_data::_M_access<main::{lambda()#10}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#11} const& std::_Any_data::_M_access<main::{lambda()#11}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11} const& std::_Any_data::_M_access<main::{lambda()#11}>() const
main::{lambda()#11} const& std::_Any_data::_M_access<main::{lambda()#11}>() const:
.LFB6085:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#11} const* std::__addressof<main::{lambda()#11} const>(main::{lambda()#11} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11} const* std::__addressof<main::{lambda()#11} const>(main::{lambda()#11} const&)
main::{lambda()#11} const* std::__addressof<main::{lambda()#11} const>(main::{lambda()#11} const&):
.LFB6086:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#11}& std::forward<main::{lambda()#11}&>(std::remove_reference<main::{lambda()#11}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11}& std::forward<main::{lambda()#11}&>(std::remove_reference<main::{lambda()#11}&>::type&)
main::{lambda()#11}& std::forward<main::{lambda()#11}&>(std::remove_reference<main::{lambda()#11}&>::type&):
.LFB6087:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#11}&>(std::__invoke_other, main::{lambda()#11}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#11}&>(std::__invoke_other, main::{lambda()#11}&)
bool std::__invoke_impl<bool, main::{lambda()#11}&>(std::__invoke_other, main::{lambda()#11}&):
.LFB6088:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}& std::forward<main::{lambda()#11}&>(std::remove_reference<main::{lambda()#11}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#11}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&)
void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&):
.LFB6089:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11} const& std::forward<main::{lambda()#11} const&>(std::remove_reference<main::{lambda()#11} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6090:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11}& std::_Any_data::_M_access<main::{lambda()#11}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#12} const& std::_Any_data::_M_access<main::{lambda()#12}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12} const& std::_Any_data::_M_access<main::{lambda()#12}>() const
main::{lambda()#12} const& std::_Any_data::_M_access<main::{lambda()#12}>() const:
.LFB6091:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#12} const* std::__addressof<main::{lambda()#12} const>(main::{lambda()#12} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12} const* std::__addressof<main::{lambda()#12} const>(main::{lambda()#12} const&)
main::{lambda()#12} const* std::__addressof<main::{lambda()#12} const>(main::{lambda()#12} const&):
.LFB6092:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#12}& std::forward<main::{lambda()#12}&>(std::remove_reference<main::{lambda()#12}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12}& std::forward<main::{lambda()#12}&>(std::remove_reference<main::{lambda()#12}&>::type&)
main::{lambda()#12}& std::forward<main::{lambda()#12}&>(std::remove_reference<main::{lambda()#12}&>::type&):
.LFB6093:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#12}&>(std::__invoke_other, main::{lambda()#12}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#12}&>(std::__invoke_other, main::{lambda()#12}&)
bool std::__invoke_impl<bool, main::{lambda()#12}&>(std::__invoke_other, main::{lambda()#12}&):
.LFB6094:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}& std::forward<main::{lambda()#12}&>(std::remove_reference<main::{lambda()#12}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#12}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&)
void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&):
.LFB6095:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12} const& std::forward<main::{lambda()#12} const&>(std::remove_reference<main::{lambda()#12} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6096:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12}& std::_Any_data::_M_access<main::{lambda()#12}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#13} const& std::_Any_data::_M_access<main::{lambda()#13}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13} const& std::_Any_data::_M_access<main::{lambda()#13}>() const
main::{lambda()#13} const& std::_Any_data::_M_access<main::{lambda()#13}>() const:
.LFB6097:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#13} const* std::__addressof<main::{lambda()#13} const>(main::{lambda()#13} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13} const* std::__addressof<main::{lambda()#13} const>(main::{lambda()#13} const&)
main::{lambda()#13} const* std::__addressof<main::{lambda()#13} const>(main::{lambda()#13} const&):
.LFB6098:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#13}& std::forward<main::{lambda()#13}&>(std::remove_reference<main::{lambda()#13}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13}& std::forward<main::{lambda()#13}&>(std::remove_reference<main::{lambda()#13}&>::type&)
main::{lambda()#13}& std::forward<main::{lambda()#13}&>(std::remove_reference<main::{lambda()#13}&>::type&):
.LFB6099:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#13}&>(std::__invoke_other, main::{lambda()#13}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#13}&>(std::__invoke_other, main::{lambda()#13}&)
bool std::__invoke_impl<bool, main::{lambda()#13}&>(std::__invoke_other, main::{lambda()#13}&):
.LFB6100:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}& std::forward<main::{lambda()#13}&>(std::remove_reference<main::{lambda()#13}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#13}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&)
void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&):
.LFB6101:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13} const& std::forward<main::{lambda()#13} const&>(std::remove_reference<main::{lambda()#13} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6102:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13}& std::_Any_data::_M_access<main::{lambda()#13}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#14} const& std::_Any_data::_M_access<main::{lambda()#14}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14} const& std::_Any_data::_M_access<main::{lambda()#14}>() const
main::{lambda()#14} const& std::_Any_data::_M_access<main::{lambda()#14}>() const:
.LFB6103:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#14} const* std::__addressof<main::{lambda()#14} const>(main::{lambda()#14} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14} const* std::__addressof<main::{lambda()#14} const>(main::{lambda()#14} const&)
main::{lambda()#14} const* std::__addressof<main::{lambda()#14} const>(main::{lambda()#14} const&):
.LFB6104:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#14}& std::forward<main::{lambda()#14}&>(std::remove_reference<main::{lambda()#14}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14}& std::forward<main::{lambda()#14}&>(std::remove_reference<main::{lambda()#14}&>::type&)
main::{lambda()#14}& std::forward<main::{lambda()#14}&>(std::remove_reference<main::{lambda()#14}&>::type&):
.LFB6105:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#14}&>(std::__invoke_other, main::{lambda()#14}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#14}&>(std::__invoke_other, main::{lambda()#14}&)
bool std::__invoke_impl<bool, main::{lambda()#14}&>(std::__invoke_other, main::{lambda()#14}&):
.LFB6106:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}& std::forward<main::{lambda()#14}&>(std::remove_reference<main::{lambda()#14}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#14}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&)
void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&):
.LFB6107:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14} const& std::forward<main::{lambda()#14} const&>(std::remove_reference<main::{lambda()#14} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6108:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14}& std::_Any_data::_M_access<main::{lambda()#14}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#15} const& std::_Any_data::_M_access<main::{lambda()#15}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15} const& std::_Any_data::_M_access<main::{lambda()#15}>() const
main::{lambda()#15} const& std::_Any_data::_M_access<main::{lambda()#15}>() const:
.LFB6109:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#15} const* std::__addressof<main::{lambda()#15} const>(main::{lambda()#15} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15} const* std::__addressof<main::{lambda()#15} const>(main::{lambda()#15} const&)
main::{lambda()#15} const* std::__addressof<main::{lambda()#15} const>(main::{lambda()#15} const&):
.LFB6110:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#15}& std::forward<main::{lambda()#15}&>(std::remove_reference<main::{lambda()#15}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15}& std::forward<main::{lambda()#15}&>(std::remove_reference<main::{lambda()#15}&>::type&)
main::{lambda()#15}& std::forward<main::{lambda()#15}&>(std::remove_reference<main::{lambda()#15}&>::type&):
.LFB6111:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#15}&>(std::__invoke_other, main::{lambda()#15}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#15}&>(std::__invoke_other, main::{lambda()#15}&)
bool std::__invoke_impl<bool, main::{lambda()#15}&>(std::__invoke_other, main::{lambda()#15}&):
.LFB6112:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}& std::forward<main::{lambda()#15}&>(std::remove_reference<main::{lambda()#15}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#15}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&)
void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&):
.LFB6113:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15} const& std::forward<main::{lambda()#15} const&>(std::remove_reference<main::{lambda()#15} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6114:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15}& std::_Any_data::_M_access<main::{lambda()#15}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#16} const& std::_Any_data::_M_access<main::{lambda()#16}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16} const& std::_Any_data::_M_access<main::{lambda()#16}>() const
main::{lambda()#16} const& std::_Any_data::_M_access<main::{lambda()#16}>() const:
.LFB6115:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#16} const* std::__addressof<main::{lambda()#16} const>(main::{lambda()#16} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16} const* std::__addressof<main::{lambda()#16} const>(main::{lambda()#16} const&)
main::{lambda()#16} const* std::__addressof<main::{lambda()#16} const>(main::{lambda()#16} const&):
.LFB6116:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#16}& std::forward<main::{lambda()#16}&>(std::remove_reference<main::{lambda()#16}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16}& std::forward<main::{lambda()#16}&>(std::remove_reference<main::{lambda()#16}&>::type&)
main::{lambda()#16}& std::forward<main::{lambda()#16}&>(std::remove_reference<main::{lambda()#16}&>::type&):
.LFB6117:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#16}&>(std::__invoke_other, main::{lambda()#16}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#16}&>(std::__invoke_other, main::{lambda()#16}&)
bool std::__invoke_impl<bool, main::{lambda()#16}&>(std::__invoke_other, main::{lambda()#16}&):
.LFB6118:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}& std::forward<main::{lambda()#16}&>(std::remove_reference<main::{lambda()#16}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#16}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&)
void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&):
.LFB6119:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16} const& std::forward<main::{lambda()#16} const&>(std::remove_reference<main::{lambda()#16} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6120:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16}& std::_Any_data::_M_access<main::{lambda()#16}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#17} const& std::_Any_data::_M_access<main::{lambda()#17}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17} const& std::_Any_data::_M_access<main::{lambda()#17}>() const
main::{lambda()#17} const& std::_Any_data::_M_access<main::{lambda()#17}>() const:
.LFB6121:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#17} const* std::__addressof<main::{lambda()#17} const>(main::{lambda()#17} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17} const* std::__addressof<main::{lambda()#17} const>(main::{lambda()#17} const&)
main::{lambda()#17} const* std::__addressof<main::{lambda()#17} const>(main::{lambda()#17} const&):
.LFB6122:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#17}& std::forward<main::{lambda()#17}&>(std::remove_reference<main::{lambda()#17}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17}& std::forward<main::{lambda()#17}&>(std::remove_reference<main::{lambda()#17}&>::type&)
main::{lambda()#17}& std::forward<main::{lambda()#17}&>(std::remove_reference<main::{lambda()#17}&>::type&):
.LFB6123:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#17}&>(std::__invoke_other, main::{lambda()#17}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#17}&>(std::__invoke_other, main::{lambda()#17}&)
bool std::__invoke_impl<bool, main::{lambda()#17}&>(std::__invoke_other, main::{lambda()#17}&):
.LFB6124:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}& std::forward<main::{lambda()#17}&>(std::remove_reference<main::{lambda()#17}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#17}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&)
void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_init_functor<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&):
.LFB6125:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17} const& std::forward<main::{lambda()#17} const&>(std::remove_reference<main::{lambda()#17} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6126:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17}& std::_Any_data::_M_access<main::{lambda()#17}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#18} const& std::_Any_data::_M_access<main::{lambda()#18}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18} const& std::_Any_data::_M_access<main::{lambda()#18}>() const
main::{lambda()#18} const& std::_Any_data::_M_access<main::{lambda()#18}>() const:
.LFB6127:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#18} const* std::__addressof<main::{lambda()#18} const>(main::{lambda()#18} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18} const* std::__addressof<main::{lambda()#18} const>(main::{lambda()#18} const&)
main::{lambda()#18} const* std::__addressof<main::{lambda()#18} const>(main::{lambda()#18} const&):
.LFB6128:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#18}& std::forward<main::{lambda()#18}&>(std::remove_reference<main::{lambda()#18}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18}& std::forward<main::{lambda()#18}&>(std::remove_reference<main::{lambda()#18}&>::type&)
main::{lambda()#18}& std::forward<main::{lambda()#18}&>(std::remove_reference<main::{lambda()#18}&>::type&):
.LFB6129:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#18}&>(std::__invoke_other, main::{lambda()#18}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#18}&>(std::__invoke_other, main::{lambda()#18}&)
bool std::__invoke_impl<bool, main::{lambda()#18}&>(std::__invoke_other, main::{lambda()#18}&):
.LFB6130:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}& std::forward<main::{lambda()#18}&>(std::remove_reference<main::{lambda()#18}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#18}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&)
void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_init_functor<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&):
.LFB6131:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18} const& std::forward<main::{lambda()#18} const&>(std::remove_reference<main::{lambda()#18} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6132:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18}& std::_Any_data::_M_access<main::{lambda()#18}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#19} const& std::_Any_data::_M_access<main::{lambda()#19}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19} const& std::_Any_data::_M_access<main::{lambda()#19}>() const
main::{lambda()#19} const& std::_Any_data::_M_access<main::{lambda()#19}>() const:
.LFB6133:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#19} const* std::__addressof<main::{lambda()#19} const>(main::{lambda()#19} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19} const* std::__addressof<main::{lambda()#19} const>(main::{lambda()#19} const&)
main::{lambda()#19} const* std::__addressof<main::{lambda()#19} const>(main::{lambda()#19} const&):
.LFB6134:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#19}& std::forward<main::{lambda()#19}&>(std::remove_reference<main::{lambda()#19}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19}& std::forward<main::{lambda()#19}&>(std::remove_reference<main::{lambda()#19}&>::type&)
main::{lambda()#19}& std::forward<main::{lambda()#19}&>(std::remove_reference<main::{lambda()#19}&>::type&):
.LFB6135:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#19}&>(std::__invoke_other, main::{lambda()#19}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#19}&>(std::__invoke_other, main::{lambda()#19}&)
bool std::__invoke_impl<bool, main::{lambda()#19}&>(std::__invoke_other, main::{lambda()#19}&):
.LFB6136:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}& std::forward<main::{lambda()#19}&>(std::remove_reference<main::{lambda()#19}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#19}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&)
void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_init_functor<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&):
.LFB6137:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19} const& std::forward<main::{lambda()#19} const&>(std::remove_reference<main::{lambda()#19} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6138:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19}& std::_Any_data::_M_access<main::{lambda()#19}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#20} const& std::_Any_data::_M_access<main::{lambda()#20}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20} const& std::_Any_data::_M_access<main::{lambda()#20}>() const
main::{lambda()#20} const& std::_Any_data::_M_access<main::{lambda()#20}>() const:
.LFB6139:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#20} const* std::__addressof<main::{lambda()#20} const>(main::{lambda()#20} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20} const* std::__addressof<main::{lambda()#20} const>(main::{lambda()#20} const&)
main::{lambda()#20} const* std::__addressof<main::{lambda()#20} const>(main::{lambda()#20} const&):
.LFB6140:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#20}& std::forward<main::{lambda()#20}&>(std::remove_reference<main::{lambda()#20}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20}& std::forward<main::{lambda()#20}&>(std::remove_reference<main::{lambda()#20}&>::type&)
main::{lambda()#20}& std::forward<main::{lambda()#20}&>(std::remove_reference<main::{lambda()#20}&>::type&):
.LFB6141:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#20}&>(std::__invoke_other, main::{lambda()#20}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#20}&>(std::__invoke_other, main::{lambda()#20}&)
bool std::__invoke_impl<bool, main::{lambda()#20}&>(std::__invoke_other, main::{lambda()#20}&):
.LFB6142:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}& std::forward<main::{lambda()#20}&>(std::remove_reference<main::{lambda()#20}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#20}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&)
void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_init_functor<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&):
.LFB6143:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20} const& std::forward<main::{lambda()#20} const&>(std::remove_reference<main::{lambda()#20} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6144:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20}& std::_Any_data::_M_access<main::{lambda()#20}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#21} const& std::_Any_data::_M_access<main::{lambda()#21}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21} const& std::_Any_data::_M_access<main::{lambda()#21}>() const
main::{lambda()#21} const& std::_Any_data::_M_access<main::{lambda()#21}>() const:
.LFB6145:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#21} const* std::__addressof<main::{lambda()#21} const>(main::{lambda()#21} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21} const* std::__addressof<main::{lambda()#21} const>(main::{lambda()#21} const&)
main::{lambda()#21} const* std::__addressof<main::{lambda()#21} const>(main::{lambda()#21} const&):
.LFB6146:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#21}& std::forward<main::{lambda()#21}&>(std::remove_reference<main::{lambda()#21}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21}& std::forward<main::{lambda()#21}&>(std::remove_reference<main::{lambda()#21}&>::type&)
main::{lambda()#21}& std::forward<main::{lambda()#21}&>(std::remove_reference<main::{lambda()#21}&>::type&):
.LFB6147:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#21}&>(std::__invoke_other, main::{lambda()#21}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#21}&>(std::__invoke_other, main::{lambda()#21}&)
bool std::__invoke_impl<bool, main::{lambda()#21}&>(std::__invoke_other, main::{lambda()#21}&):
.LFB6148:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}& std::forward<main::{lambda()#21}&>(std::remove_reference<main::{lambda()#21}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#21}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&)
void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_init_functor<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&):
.LFB6149:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21} const& std::forward<main::{lambda()#21} const&>(std::remove_reference<main::{lambda()#21} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6150:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21}& std::_Any_data::_M_access<main::{lambda()#21}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#22} const& std::_Any_data::_M_access<main::{lambda()#22}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22} const& std::_Any_data::_M_access<main::{lambda()#22}>() const
main::{lambda()#22} const& std::_Any_data::_M_access<main::{lambda()#22}>() const:
.LFB6151:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#22} const* std::__addressof<main::{lambda()#22} const>(main::{lambda()#22} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22} const* std::__addressof<main::{lambda()#22} const>(main::{lambda()#22} const&)
main::{lambda()#22} const* std::__addressof<main::{lambda()#22} const>(main::{lambda()#22} const&):
.LFB6152:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#22}& std::forward<main::{lambda()#22}&>(std::remove_reference<main::{lambda()#22}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22}& std::forward<main::{lambda()#22}&>(std::remove_reference<main::{lambda()#22}&>::type&)
main::{lambda()#22}& std::forward<main::{lambda()#22}&>(std::remove_reference<main::{lambda()#22}&>::type&):
.LFB6153:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#22}&>(std::__invoke_other, main::{lambda()#22}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#22}&>(std::__invoke_other, main::{lambda()#22}&)
bool std::__invoke_impl<bool, main::{lambda()#22}&>(std::__invoke_other, main::{lambda()#22}&):
.LFB6154:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}& std::forward<main::{lambda()#22}&>(std::remove_reference<main::{lambda()#22}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#22}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&)
void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_init_functor<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&):
.LFB6155:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22} const& std::forward<main::{lambda()#22} const&>(std::remove_reference<main::{lambda()#22} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6156:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22}& std::_Any_data::_M_access<main::{lambda()#22}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#23} const& std::_Any_data::_M_access<main::{lambda()#23}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23} const& std::_Any_data::_M_access<main::{lambda()#23}>() const
main::{lambda()#23} const& std::_Any_data::_M_access<main::{lambda()#23}>() const:
.LFB6157:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#23} const* std::__addressof<main::{lambda()#23} const>(main::{lambda()#23} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23} const* std::__addressof<main::{lambda()#23} const>(main::{lambda()#23} const&)
main::{lambda()#23} const* std::__addressof<main::{lambda()#23} const>(main::{lambda()#23} const&):
.LFB6158:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#23}& std::forward<main::{lambda()#23}&>(std::remove_reference<main::{lambda()#23}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23}& std::forward<main::{lambda()#23}&>(std::remove_reference<main::{lambda()#23}&>::type&)
main::{lambda()#23}& std::forward<main::{lambda()#23}&>(std::remove_reference<main::{lambda()#23}&>::type&):
.LFB6159:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#23}&>(std::__invoke_other, main::{lambda()#23}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#23}&>(std::__invoke_other, main::{lambda()#23}&)
bool std::__invoke_impl<bool, main::{lambda()#23}&>(std::__invoke_other, main::{lambda()#23}&):
.LFB6160:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}& std::forward<main::{lambda()#23}&>(std::remove_reference<main::{lambda()#23}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#23}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&)
void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_init_functor<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&):
.LFB6161:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23} const& std::forward<main::{lambda()#23} const&>(std::remove_reference<main::{lambda()#23} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6162:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23}& std::_Any_data::_M_access<main::{lambda()#23}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#24} const& std::_Any_data::_M_access<main::{lambda()#24}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24} const& std::_Any_data::_M_access<main::{lambda()#24}>() const
main::{lambda()#24} const& std::_Any_data::_M_access<main::{lambda()#24}>() const:
.LFB6163:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#24} const* std::__addressof<main::{lambda()#24} const>(main::{lambda()#24} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24} const* std::__addressof<main::{lambda()#24} const>(main::{lambda()#24} const&)
main::{lambda()#24} const* std::__addressof<main::{lambda()#24} const>(main::{lambda()#24} const&):
.LFB6164:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#24}& std::forward<main::{lambda()#24}&>(std::remove_reference<main::{lambda()#24}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24}& std::forward<main::{lambda()#24}&>(std::remove_reference<main::{lambda()#24}&>::type&)
main::{lambda()#24}& std::forward<main::{lambda()#24}&>(std::remove_reference<main::{lambda()#24}&>::type&):
.LFB6165:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#24}&>(std::__invoke_other, main::{lambda()#24}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#24}&>(std::__invoke_other, main::{lambda()#24}&)
bool std::__invoke_impl<bool, main::{lambda()#24}&>(std::__invoke_other, main::{lambda()#24}&):
.LFB6166:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}& std::forward<main::{lambda()#24}&>(std::remove_reference<main::{lambda()#24}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#24}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&)
void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_init_functor<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&):
.LFB6167:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24} const& std::forward<main::{lambda()#24} const&>(std::remove_reference<main::{lambda()#24} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6168:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24}& std::_Any_data::_M_access<main::{lambda()#24}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#25} const& std::_Any_data::_M_access<main::{lambda()#25}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25} const& std::_Any_data::_M_access<main::{lambda()#25}>() const
main::{lambda()#25} const& std::_Any_data::_M_access<main::{lambda()#25}>() const:
.LFB6169:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#25} const* std::__addressof<main::{lambda()#25} const>(main::{lambda()#25} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25} const* std::__addressof<main::{lambda()#25} const>(main::{lambda()#25} const&)
main::{lambda()#25} const* std::__addressof<main::{lambda()#25} const>(main::{lambda()#25} const&):
.LFB6170:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#25}& std::forward<main::{lambda()#25}&>(std::remove_reference<main::{lambda()#25}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25}& std::forward<main::{lambda()#25}&>(std::remove_reference<main::{lambda()#25}&>::type&)
main::{lambda()#25}& std::forward<main::{lambda()#25}&>(std::remove_reference<main::{lambda()#25}&>::type&):
.LFB6171:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#25}&>(std::__invoke_other, main::{lambda()#25}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#25}&>(std::__invoke_other, main::{lambda()#25}&)
bool std::__invoke_impl<bool, main::{lambda()#25}&>(std::__invoke_other, main::{lambda()#25}&):
.LFB6172:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}& std::forward<main::{lambda()#25}&>(std::remove_reference<main::{lambda()#25}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#25}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&)
void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_init_functor<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&):
.LFB6173:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25} const& std::forward<main::{lambda()#25} const&>(std::remove_reference<main::{lambda()#25} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6174:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25}& std::_Any_data::_M_access<main::{lambda()#25}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#26} const& std::_Any_data::_M_access<main::{lambda()#26}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26} const& std::_Any_data::_M_access<main::{lambda()#26}>() const
main::{lambda()#26} const& std::_Any_data::_M_access<main::{lambda()#26}>() const:
.LFB6175:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#26} const* std::__addressof<main::{lambda()#26} const>(main::{lambda()#26} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26} const* std::__addressof<main::{lambda()#26} const>(main::{lambda()#26} const&)
main::{lambda()#26} const* std::__addressof<main::{lambda()#26} const>(main::{lambda()#26} const&):
.LFB6176:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#26}& std::forward<main::{lambda()#26}&>(std::remove_reference<main::{lambda()#26}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26}& std::forward<main::{lambda()#26}&>(std::remove_reference<main::{lambda()#26}&>::type&)
main::{lambda()#26}& std::forward<main::{lambda()#26}&>(std::remove_reference<main::{lambda()#26}&>::type&):
.LFB6177:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#26}&>(std::__invoke_other, main::{lambda()#26}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#26}&>(std::__invoke_other, main::{lambda()#26}&)
bool std::__invoke_impl<bool, main::{lambda()#26}&>(std::__invoke_other, main::{lambda()#26}&):
.LFB6178:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}& std::forward<main::{lambda()#26}&>(std::remove_reference<main::{lambda()#26}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#26}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&)
void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_init_functor<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&):
.LFB6179:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26} const& std::forward<main::{lambda()#26} const&>(std::remove_reference<main::{lambda()#26} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6180:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26}& std::_Any_data::_M_access<main::{lambda()#26}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#27} const& std::_Any_data::_M_access<main::{lambda()#27}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27} const& std::_Any_data::_M_access<main::{lambda()#27}>() const
main::{lambda()#27} const& std::_Any_data::_M_access<main::{lambda()#27}>() const:
.LFB6181:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#27} const* std::__addressof<main::{lambda()#27} const>(main::{lambda()#27} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27} const* std::__addressof<main::{lambda()#27} const>(main::{lambda()#27} const&)
main::{lambda()#27} const* std::__addressof<main::{lambda()#27} const>(main::{lambda()#27} const&):
.LFB6182:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#27}& std::forward<main::{lambda()#27}&>(std::remove_reference<main::{lambda()#27}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27}& std::forward<main::{lambda()#27}&>(std::remove_reference<main::{lambda()#27}&>::type&)
main::{lambda()#27}& std::forward<main::{lambda()#27}&>(std::remove_reference<main::{lambda()#27}&>::type&):
.LFB6183:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#27}&>(std::__invoke_other, main::{lambda()#27}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#27}&>(std::__invoke_other, main::{lambda()#27}&)
bool std::__invoke_impl<bool, main::{lambda()#27}&>(std::__invoke_other, main::{lambda()#27}&):
.LFB6184:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}& std::forward<main::{lambda()#27}&>(std::remove_reference<main::{lambda()#27}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#27}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&)
void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_init_functor<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&):
.LFB6185:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27} const& std::forward<main::{lambda()#27} const&>(std::remove_reference<main::{lambda()#27} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6186:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27}& std::_Any_data::_M_access<main::{lambda()#27}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#28} const& std::_Any_data::_M_access<main::{lambda()#28}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28} const& std::_Any_data::_M_access<main::{lambda()#28}>() const
main::{lambda()#28} const& std::_Any_data::_M_access<main::{lambda()#28}>() const:
.LFB6187:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#28} const* std::__addressof<main::{lambda()#28} const>(main::{lambda()#28} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28} const* std::__addressof<main::{lambda()#28} const>(main::{lambda()#28} const&)
main::{lambda()#28} const* std::__addressof<main::{lambda()#28} const>(main::{lambda()#28} const&):
.LFB6188:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#28}& std::forward<main::{lambda()#28}&>(std::remove_reference<main::{lambda()#28}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28}& std::forward<main::{lambda()#28}&>(std::remove_reference<main::{lambda()#28}&>::type&)
main::{lambda()#28}& std::forward<main::{lambda()#28}&>(std::remove_reference<main::{lambda()#28}&>::type&):
.LFB6189:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#28}&>(std::__invoke_other, main::{lambda()#28}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#28}&>(std::__invoke_other, main::{lambda()#28}&)
bool std::__invoke_impl<bool, main::{lambda()#28}&>(std::__invoke_other, main::{lambda()#28}&):
.LFB6190:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}& std::forward<main::{lambda()#28}&>(std::remove_reference<main::{lambda()#28}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#28}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&)
void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_init_functor<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&):
.LFB6191:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28} const& std::forward<main::{lambda()#28} const&>(std::remove_reference<main::{lambda()#28} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6192:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28}& std::_Any_data::_M_access<main::{lambda()#28}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#29} const& std::_Any_data::_M_access<main::{lambda()#29}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29} const& std::_Any_data::_M_access<main::{lambda()#29}>() const
main::{lambda()#29} const& std::_Any_data::_M_access<main::{lambda()#29}>() const:
.LFB6193:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#29} const* std::__addressof<main::{lambda()#29} const>(main::{lambda()#29} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29} const* std::__addressof<main::{lambda()#29} const>(main::{lambda()#29} const&)
main::{lambda()#29} const* std::__addressof<main::{lambda()#29} const>(main::{lambda()#29} const&):
.LFB6194:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#29}& std::forward<main::{lambda()#29}&>(std::remove_reference<main::{lambda()#29}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29}& std::forward<main::{lambda()#29}&>(std::remove_reference<main::{lambda()#29}&>::type&)
main::{lambda()#29}& std::forward<main::{lambda()#29}&>(std::remove_reference<main::{lambda()#29}&>::type&):
.LFB6195:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#29}&>(std::__invoke_other, main::{lambda()#29}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#29}&>(std::__invoke_other, main::{lambda()#29}&)
bool std::__invoke_impl<bool, main::{lambda()#29}&>(std::__invoke_other, main::{lambda()#29}&):
.LFB6196:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}& std::forward<main::{lambda()#29}&>(std::remove_reference<main::{lambda()#29}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#29}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&)
void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_init_functor<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&):
.LFB6197:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29} const& std::forward<main::{lambda()#29} const&>(std::remove_reference<main::{lambda()#29} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6198:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29}& std::_Any_data::_M_access<main::{lambda()#29}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#30} const& std::_Any_data::_M_access<main::{lambda()#30}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30} const& std::_Any_data::_M_access<main::{lambda()#30}>() const
main::{lambda()#30} const& std::_Any_data::_M_access<main::{lambda()#30}>() const:
.LFB6199:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#30} const* std::__addressof<main::{lambda()#30} const>(main::{lambda()#30} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30} const* std::__addressof<main::{lambda()#30} const>(main::{lambda()#30} const&)
main::{lambda()#30} const* std::__addressof<main::{lambda()#30} const>(main::{lambda()#30} const&):
.LFB6200:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#30}& std::forward<main::{lambda()#30}&>(std::remove_reference<main::{lambda()#30}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30}& std::forward<main::{lambda()#30}&>(std::remove_reference<main::{lambda()#30}&>::type&)
main::{lambda()#30}& std::forward<main::{lambda()#30}&>(std::remove_reference<main::{lambda()#30}&>::type&):
.LFB6201:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#30}&>(std::__invoke_other, main::{lambda()#30}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#30}&>(std::__invoke_other, main::{lambda()#30}&)
bool std::__invoke_impl<bool, main::{lambda()#30}&>(std::__invoke_other, main::{lambda()#30}&):
.LFB6202:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}& std::forward<main::{lambda()#30}&>(std::remove_reference<main::{lambda()#30}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#30}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&)
void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_init_functor<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&):
.LFB6203:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30} const& std::forward<main::{lambda()#30} const&>(std::remove_reference<main::{lambda()#30} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6204:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30}& std::_Any_data::_M_access<main::{lambda()#30}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#31} const& std::_Any_data::_M_access<main::{lambda()#31}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31} const& std::_Any_data::_M_access<main::{lambda()#31}>() const
main::{lambda()#31} const& std::_Any_data::_M_access<main::{lambda()#31}>() const:
.LFB6205:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#31} const* std::__addressof<main::{lambda()#31} const>(main::{lambda()#31} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31} const* std::__addressof<main::{lambda()#31} const>(main::{lambda()#31} const&)
main::{lambda()#31} const* std::__addressof<main::{lambda()#31} const>(main::{lambda()#31} const&):
.LFB6206:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#31}& std::forward<main::{lambda()#31}&>(std::remove_reference<main::{lambda()#31}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31}& std::forward<main::{lambda()#31}&>(std::remove_reference<main::{lambda()#31}&>::type&)
main::{lambda()#31}& std::forward<main::{lambda()#31}&>(std::remove_reference<main::{lambda()#31}&>::type&):
.LFB6207:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#31}&>(std::__invoke_other, main::{lambda()#31}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#31}&>(std::__invoke_other, main::{lambda()#31}&)
bool std::__invoke_impl<bool, main::{lambda()#31}&>(std::__invoke_other, main::{lambda()#31}&):
.LFB6208:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}& std::forward<main::{lambda()#31}&>(std::remove_reference<main::{lambda()#31}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#31}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&)
void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_init_functor<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&):
.LFB6209:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31} const& std::forward<main::{lambda()#31} const&>(std::remove_reference<main::{lambda()#31} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6210:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31}& std::_Any_data::_M_access<main::{lambda()#31}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#32} const& std::_Any_data::_M_access<main::{lambda()#32}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32} const& std::_Any_data::_M_access<main::{lambda()#32}>() const
main::{lambda()#32} const& std::_Any_data::_M_access<main::{lambda()#32}>() const:
.LFB6211:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#32} const* std::__addressof<main::{lambda()#32} const>(main::{lambda()#32} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32} const* std::__addressof<main::{lambda()#32} const>(main::{lambda()#32} const&)
main::{lambda()#32} const* std::__addressof<main::{lambda()#32} const>(main::{lambda()#32} const&):
.LFB6212:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#32}& std::forward<main::{lambda()#32}&>(std::remove_reference<main::{lambda()#32}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32}& std::forward<main::{lambda()#32}&>(std::remove_reference<main::{lambda()#32}&>::type&)
main::{lambda()#32}& std::forward<main::{lambda()#32}&>(std::remove_reference<main::{lambda()#32}&>::type&):
.LFB6213:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#32}&>(std::__invoke_other, main::{lambda()#32}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#32}&>(std::__invoke_other, main::{lambda()#32}&)
bool std::__invoke_impl<bool, main::{lambda()#32}&>(std::__invoke_other, main::{lambda()#32}&):
.LFB6214:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}& std::forward<main::{lambda()#32}&>(std::remove_reference<main::{lambda()#32}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#32}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&)
void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_init_functor<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&):
.LFB6215:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32} const& std::forward<main::{lambda()#32} const&>(std::remove_reference<main::{lambda()#32} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6216:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32}& std::_Any_data::_M_access<main::{lambda()#32}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#33} const& std::_Any_data::_M_access<main::{lambda()#33}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33} const& std::_Any_data::_M_access<main::{lambda()#33}>() const
main::{lambda()#33} const& std::_Any_data::_M_access<main::{lambda()#33}>() const:
.LFB6217:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#33} const* std::__addressof<main::{lambda()#33} const>(main::{lambda()#33} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33} const* std::__addressof<main::{lambda()#33} const>(main::{lambda()#33} const&)
main::{lambda()#33} const* std::__addressof<main::{lambda()#33} const>(main::{lambda()#33} const&):
.LFB6218:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#33}& std::forward<main::{lambda()#33}&>(std::remove_reference<main::{lambda()#33}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33}& std::forward<main::{lambda()#33}&>(std::remove_reference<main::{lambda()#33}&>::type&)
main::{lambda()#33}& std::forward<main::{lambda()#33}&>(std::remove_reference<main::{lambda()#33}&>::type&):
.LFB6219:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#33}&>(std::__invoke_other, main::{lambda()#33}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#33}&>(std::__invoke_other, main::{lambda()#33}&)
bool std::__invoke_impl<bool, main::{lambda()#33}&>(std::__invoke_other, main::{lambda()#33}&):
.LFB6220:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}& std::forward<main::{lambda()#33}&>(std::remove_reference<main::{lambda()#33}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#33}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&)
void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_init_functor<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&):
.LFB6221:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33} const& std::forward<main::{lambda()#33} const&>(std::remove_reference<main::{lambda()#33} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6222:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33}& std::_Any_data::_M_access<main::{lambda()#33}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#34} const& std::_Any_data::_M_access<main::{lambda()#34}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34} const& std::_Any_data::_M_access<main::{lambda()#34}>() const
main::{lambda()#34} const& std::_Any_data::_M_access<main::{lambda()#34}>() const:
.LFB6223:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#34} const* std::__addressof<main::{lambda()#34} const>(main::{lambda()#34} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34} const* std::__addressof<main::{lambda()#34} const>(main::{lambda()#34} const&)
main::{lambda()#34} const* std::__addressof<main::{lambda()#34} const>(main::{lambda()#34} const&):
.LFB6224:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#34}& std::forward<main::{lambda()#34}&>(std::remove_reference<main::{lambda()#34}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34}& std::forward<main::{lambda()#34}&>(std::remove_reference<main::{lambda()#34}&>::type&)
main::{lambda()#34}& std::forward<main::{lambda()#34}&>(std::remove_reference<main::{lambda()#34}&>::type&):
.LFB6225:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#34}&>(std::__invoke_other, main::{lambda()#34}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#34}&>(std::__invoke_other, main::{lambda()#34}&)
bool std::__invoke_impl<bool, main::{lambda()#34}&>(std::__invoke_other, main::{lambda()#34}&):
.LFB6226:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}& std::forward<main::{lambda()#34}&>(std::remove_reference<main::{lambda()#34}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#34}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&)
void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_init_functor<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&):
.LFB6227:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34} const& std::forward<main::{lambda()#34} const&>(std::remove_reference<main::{lambda()#34} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6228:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34}& std::_Any_data::_M_access<main::{lambda()#34}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#35} const& std::_Any_data::_M_access<main::{lambda()#35}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35} const& std::_Any_data::_M_access<main::{lambda()#35}>() const
main::{lambda()#35} const& std::_Any_data::_M_access<main::{lambda()#35}>() const:
.LFB6229:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#35} const* std::__addressof<main::{lambda()#35} const>(main::{lambda()#35} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35} const* std::__addressof<main::{lambda()#35} const>(main::{lambda()#35} const&)
main::{lambda()#35} const* std::__addressof<main::{lambda()#35} const>(main::{lambda()#35} const&):
.LFB6230:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#35}& std::forward<main::{lambda()#35}&>(std::remove_reference<main::{lambda()#35}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35}& std::forward<main::{lambda()#35}&>(std::remove_reference<main::{lambda()#35}&>::type&)
main::{lambda()#35}& std::forward<main::{lambda()#35}&>(std::remove_reference<main::{lambda()#35}&>::type&):
.LFB6231:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#35}&>(std::__invoke_other, main::{lambda()#35}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#35}&>(std::__invoke_other, main::{lambda()#35}&)
bool std::__invoke_impl<bool, main::{lambda()#35}&>(std::__invoke_other, main::{lambda()#35}&):
.LFB6232:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}& std::forward<main::{lambda()#35}&>(std::remove_reference<main::{lambda()#35}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#35}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&)
void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_init_functor<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&):
.LFB6233:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35} const& std::forward<main::{lambda()#35} const&>(std::remove_reference<main::{lambda()#35} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6234:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35}& std::_Any_data::_M_access<main::{lambda()#35}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#36} const& std::_Any_data::_M_access<main::{lambda()#36}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36} const& std::_Any_data::_M_access<main::{lambda()#36}>() const
main::{lambda()#36} const& std::_Any_data::_M_access<main::{lambda()#36}>() const:
.LFB6235:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#36} const* std::__addressof<main::{lambda()#36} const>(main::{lambda()#36} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36} const* std::__addressof<main::{lambda()#36} const>(main::{lambda()#36} const&)
main::{lambda()#36} const* std::__addressof<main::{lambda()#36} const>(main::{lambda()#36} const&):
.LFB6236:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#36}& std::forward<main::{lambda()#36}&>(std::remove_reference<main::{lambda()#36}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36}& std::forward<main::{lambda()#36}&>(std::remove_reference<main::{lambda()#36}&>::type&)
main::{lambda()#36}& std::forward<main::{lambda()#36}&>(std::remove_reference<main::{lambda()#36}&>::type&):
.LFB6237:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#36}&>(std::__invoke_other, main::{lambda()#36}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#36}&>(std::__invoke_other, main::{lambda()#36}&)
bool std::__invoke_impl<bool, main::{lambda()#36}&>(std::__invoke_other, main::{lambda()#36}&):
.LFB6238:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}& std::forward<main::{lambda()#36}&>(std::remove_reference<main::{lambda()#36}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#36}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&)
void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_init_functor<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&):
.LFB6239:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36} const& std::forward<main::{lambda()#36} const&>(std::remove_reference<main::{lambda()#36} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6240:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36}& std::_Any_data::_M_access<main::{lambda()#36}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#37} const& std::_Any_data::_M_access<main::{lambda()#37}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37} const& std::_Any_data::_M_access<main::{lambda()#37}>() const
main::{lambda()#37} const& std::_Any_data::_M_access<main::{lambda()#37}>() const:
.LFB6241:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#37} const* std::__addressof<main::{lambda()#37} const>(main::{lambda()#37} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37} const* std::__addressof<main::{lambda()#37} const>(main::{lambda()#37} const&)
main::{lambda()#37} const* std::__addressof<main::{lambda()#37} const>(main::{lambda()#37} const&):
.LFB6242:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#37}& std::forward<main::{lambda()#37}&>(std::remove_reference<main::{lambda()#37}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37}& std::forward<main::{lambda()#37}&>(std::remove_reference<main::{lambda()#37}&>::type&)
main::{lambda()#37}& std::forward<main::{lambda()#37}&>(std::remove_reference<main::{lambda()#37}&>::type&):
.LFB6243:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#37}&>(std::__invoke_other, main::{lambda()#37}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#37}&>(std::__invoke_other, main::{lambda()#37}&)
bool std::__invoke_impl<bool, main::{lambda()#37}&>(std::__invoke_other, main::{lambda()#37}&):
.LFB6244:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}& std::forward<main::{lambda()#37}&>(std::remove_reference<main::{lambda()#37}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#37}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&)
void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_init_functor<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&):
.LFB6245:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37} const& std::forward<main::{lambda()#37} const&>(std::remove_reference<main::{lambda()#37} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6246:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37}& std::_Any_data::_M_access<main::{lambda()#37}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#38} const& std::_Any_data::_M_access<main::{lambda()#38}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38} const& std::_Any_data::_M_access<main::{lambda()#38}>() const
main::{lambda()#38} const& std::_Any_data::_M_access<main::{lambda()#38}>() const:
.LFB6247:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#38} const* std::__addressof<main::{lambda()#38} const>(main::{lambda()#38} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38} const* std::__addressof<main::{lambda()#38} const>(main::{lambda()#38} const&)
main::{lambda()#38} const* std::__addressof<main::{lambda()#38} const>(main::{lambda()#38} const&):
.LFB6248:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#38}& std::forward<main::{lambda()#38}&>(std::remove_reference<main::{lambda()#38}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38}& std::forward<main::{lambda()#38}&>(std::remove_reference<main::{lambda()#38}&>::type&)
main::{lambda()#38}& std::forward<main::{lambda()#38}&>(std::remove_reference<main::{lambda()#38}&>::type&):
.LFB6249:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#38}&>(std::__invoke_other, main::{lambda()#38}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#38}&>(std::__invoke_other, main::{lambda()#38}&)
bool std::__invoke_impl<bool, main::{lambda()#38}&>(std::__invoke_other, main::{lambda()#38}&):
.LFB6250:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}& std::forward<main::{lambda()#38}&>(std::remove_reference<main::{lambda()#38}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#38}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&)
void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_init_functor<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&):
.LFB6251:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38} const& std::forward<main::{lambda()#38} const&>(std::remove_reference<main::{lambda()#38} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6252:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38}& std::_Any_data::_M_access<main::{lambda()#38}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#39} const& std::_Any_data::_M_access<main::{lambda()#39}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39} const& std::_Any_data::_M_access<main::{lambda()#39}>() const
main::{lambda()#39} const& std::_Any_data::_M_access<main::{lambda()#39}>() const:
.LFB6253:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#39} const* std::__addressof<main::{lambda()#39} const>(main::{lambda()#39} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39} const* std::__addressof<main::{lambda()#39} const>(main::{lambda()#39} const&)
main::{lambda()#39} const* std::__addressof<main::{lambda()#39} const>(main::{lambda()#39} const&):
.LFB6254:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#39}& std::forward<main::{lambda()#39}&>(std::remove_reference<main::{lambda()#39}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39}& std::forward<main::{lambda()#39}&>(std::remove_reference<main::{lambda()#39}&>::type&)
main::{lambda()#39}& std::forward<main::{lambda()#39}&>(std::remove_reference<main::{lambda()#39}&>::type&):
.LFB6255:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#39}&>(std::__invoke_other, main::{lambda()#39}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#39}&>(std::__invoke_other, main::{lambda()#39}&)
bool std::__invoke_impl<bool, main::{lambda()#39}&>(std::__invoke_other, main::{lambda()#39}&):
.LFB6256:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}& std::forward<main::{lambda()#39}&>(std::remove_reference<main::{lambda()#39}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#39}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&)
void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_init_functor<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&):
.LFB6257:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39} const& std::forward<main::{lambda()#39} const&>(std::remove_reference<main::{lambda()#39} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6258:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39}& std::_Any_data::_M_access<main::{lambda()#39}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#40} const& std::_Any_data::_M_access<main::{lambda()#40}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40} const& std::_Any_data::_M_access<main::{lambda()#40}>() const
main::{lambda()#40} const& std::_Any_data::_M_access<main::{lambda()#40}>() const:
.LFB6259:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#40} const* std::__addressof<main::{lambda()#40} const>(main::{lambda()#40} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40} const* std::__addressof<main::{lambda()#40} const>(main::{lambda()#40} const&)
main::{lambda()#40} const* std::__addressof<main::{lambda()#40} const>(main::{lambda()#40} const&):
.LFB6260:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#40}& std::forward<main::{lambda()#40}&>(std::remove_reference<main::{lambda()#40}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40}& std::forward<main::{lambda()#40}&>(std::remove_reference<main::{lambda()#40}&>::type&)
main::{lambda()#40}& std::forward<main::{lambda()#40}&>(std::remove_reference<main::{lambda()#40}&>::type&):
.LFB6261:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#40}&>(std::__invoke_other, main::{lambda()#40}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#40}&>(std::__invoke_other, main::{lambda()#40}&)
bool std::__invoke_impl<bool, main::{lambda()#40}&>(std::__invoke_other, main::{lambda()#40}&):
.LFB6262:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}& std::forward<main::{lambda()#40}&>(std::remove_reference<main::{lambda()#40}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#40}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&)
void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_init_functor<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&):
.LFB6263:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40} const& std::forward<main::{lambda()#40} const&>(std::remove_reference<main::{lambda()#40} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6264:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40}& std::_Any_data::_M_access<main::{lambda()#40}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#41} const& std::_Any_data::_M_access<main::{lambda()#41}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41} const& std::_Any_data::_M_access<main::{lambda()#41}>() const
main::{lambda()#41} const& std::_Any_data::_M_access<main::{lambda()#41}>() const:
.LFB6265:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#41} const* std::__addressof<main::{lambda()#41} const>(main::{lambda()#41} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41} const* std::__addressof<main::{lambda()#41} const>(main::{lambda()#41} const&)
main::{lambda()#41} const* std::__addressof<main::{lambda()#41} const>(main::{lambda()#41} const&):
.LFB6266:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#41}& std::forward<main::{lambda()#41}&>(std::remove_reference<main::{lambda()#41}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41}& std::forward<main::{lambda()#41}&>(std::remove_reference<main::{lambda()#41}&>::type&)
main::{lambda()#41}& std::forward<main::{lambda()#41}&>(std::remove_reference<main::{lambda()#41}&>::type&):
.LFB6267:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#41}&>(std::__invoke_other, main::{lambda()#41}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#41}&>(std::__invoke_other, main::{lambda()#41}&)
bool std::__invoke_impl<bool, main::{lambda()#41}&>(std::__invoke_other, main::{lambda()#41}&):
.LFB6268:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}& std::forward<main::{lambda()#41}&>(std::remove_reference<main::{lambda()#41}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#41}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&)
void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_init_functor<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&):
.LFB6269:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41} const& std::forward<main::{lambda()#41} const&>(std::remove_reference<main::{lambda()#41} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6270:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41}& std::_Any_data::_M_access<main::{lambda()#41}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#42} const& std::_Any_data::_M_access<main::{lambda()#42}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42} const& std::_Any_data::_M_access<main::{lambda()#42}>() const
main::{lambda()#42} const& std::_Any_data::_M_access<main::{lambda()#42}>() const:
.LFB6271:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#42} const* std::__addressof<main::{lambda()#42} const>(main::{lambda()#42} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42} const* std::__addressof<main::{lambda()#42} const>(main::{lambda()#42} const&)
main::{lambda()#42} const* std::__addressof<main::{lambda()#42} const>(main::{lambda()#42} const&):
.LFB6272:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#42}& std::forward<main::{lambda()#42}&>(std::remove_reference<main::{lambda()#42}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42}& std::forward<main::{lambda()#42}&>(std::remove_reference<main::{lambda()#42}&>::type&)
main::{lambda()#42}& std::forward<main::{lambda()#42}&>(std::remove_reference<main::{lambda()#42}&>::type&):
.LFB6273:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#42}&>(std::__invoke_other, main::{lambda()#42}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#42}&>(std::__invoke_other, main::{lambda()#42}&)
bool std::__invoke_impl<bool, main::{lambda()#42}&>(std::__invoke_other, main::{lambda()#42}&):
.LFB6274:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}& std::forward<main::{lambda()#42}&>(std::remove_reference<main::{lambda()#42}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#42}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&)
void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_init_functor<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&):
.LFB6275:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42} const& std::forward<main::{lambda()#42} const&>(std::remove_reference<main::{lambda()#42} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6276:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42}& std::_Any_data::_M_access<main::{lambda()#42}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#43} const& std::_Any_data::_M_access<main::{lambda()#43}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43} const& std::_Any_data::_M_access<main::{lambda()#43}>() const
main::{lambda()#43} const& std::_Any_data::_M_access<main::{lambda()#43}>() const:
.LFB6277:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#43} const* std::__addressof<main::{lambda()#43} const>(main::{lambda()#43} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43} const* std::__addressof<main::{lambda()#43} const>(main::{lambda()#43} const&)
main::{lambda()#43} const* std::__addressof<main::{lambda()#43} const>(main::{lambda()#43} const&):
.LFB6278:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#43}& std::forward<main::{lambda()#43}&>(std::remove_reference<main::{lambda()#43}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43}& std::forward<main::{lambda()#43}&>(std::remove_reference<main::{lambda()#43}&>::type&)
main::{lambda()#43}& std::forward<main::{lambda()#43}&>(std::remove_reference<main::{lambda()#43}&>::type&):
.LFB6279:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#43}&>(std::__invoke_other, main::{lambda()#43}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#43}&>(std::__invoke_other, main::{lambda()#43}&)
bool std::__invoke_impl<bool, main::{lambda()#43}&>(std::__invoke_other, main::{lambda()#43}&):
.LFB6280:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}& std::forward<main::{lambda()#43}&>(std::remove_reference<main::{lambda()#43}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#43}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&)
void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_init_functor<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&):
.LFB6281:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43} const& std::forward<main::{lambda()#43} const&>(std::remove_reference<main::{lambda()#43} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6282:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43}& std::_Any_data::_M_access<main::{lambda()#43}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSC_,"x"
	.linkonce discard
	.align 2
	.globl	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
	.def	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocator(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&):
.LFB6284:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator(std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end()
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end()
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end():
.LFB6286:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rdx
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_iterator(std::__detail::_List_node_base*)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt7forwardIRKSt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISD_E4typeE,"x"
	.linkonce discard
	.globl	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&):
.LFB6287:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE9_M_insertIJRKSA_EEEvSt14_List_iteratorISA_EDpOT_,"x"
	.linkonce discard
	.align 2
	.globl	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
void std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB6288:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	movq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_create_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	24(%rbp), %rdx
	movq	%rax, %rcx
	call	std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
	movq	16(%rbp), %rax
	movl	$1, %edx
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_inc_size(unsigned long long)
	nop
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE4backEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::back()
	.def	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::back();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::back()
std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::back():
.LFB6289:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::end()
	movq	%rax, -8(%rbp)
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator--()
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
	addq	$48, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx16__aligned_membufISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE6_M_ptrEv,"x"
	.linkonce discard
	.align 2
	.globl	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr()
	.def	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr();	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr()
__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_ptr():
.LFB6290:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyISB_EEvPT_,"x"
	.linkonce discard
	.align 2
	.globl	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
	.def	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::destroy<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*):
.LFB6291:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE10deallocateERSD_PSC_y,"x"
	.linkonce discard
	.globl	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
	.def	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long);	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long):
.LFB6292:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	32(%rbp), %rcx
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::deallocate(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.align 2
	.def	main::{lambda()#44} const& std::_Any_data::_M_access<main::{lambda()#44}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44} const& std::_Any_data::_M_access<main::{lambda()#44}>() const
main::{lambda()#44} const& std::_Any_data::_M_access<main::{lambda()#44}>() const:
.LFB6293:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#44} const* std::__addressof<main::{lambda()#44} const>(main::{lambda()#44} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44} const* std::__addressof<main::{lambda()#44} const>(main::{lambda()#44} const&)
main::{lambda()#44} const* std::__addressof<main::{lambda()#44} const>(main::{lambda()#44} const&):
.LFB6294:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#44}& std::forward<main::{lambda()#44}&>(std::remove_reference<main::{lambda()#44}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44}& std::forward<main::{lambda()#44}&>(std::remove_reference<main::{lambda()#44}&>::type&)
main::{lambda()#44}& std::forward<main::{lambda()#44}&>(std::remove_reference<main::{lambda()#44}&>::type&):
.LFB6295:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#44}&>(std::__invoke_other, main::{lambda()#44}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#44}&>(std::__invoke_other, main::{lambda()#44}&)
bool std::__invoke_impl<bool, main::{lambda()#44}&>(std::__invoke_other, main::{lambda()#44}&):
.LFB6296:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}& std::forward<main::{lambda()#44}&>(std::remove_reference<main::{lambda()#44}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#44}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&)
void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_init_functor<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&):
.LFB6297:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44} const& std::forward<main::{lambda()#44} const&>(std::remove_reference<main::{lambda()#44} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6298:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44}& std::_Any_data::_M_access<main::{lambda()#44}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#45} const& std::_Any_data::_M_access<main::{lambda()#45}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45} const& std::_Any_data::_M_access<main::{lambda()#45}>() const
main::{lambda()#45} const& std::_Any_data::_M_access<main::{lambda()#45}>() const:
.LFB6299:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#45} const* std::__addressof<main::{lambda()#45} const>(main::{lambda()#45} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45} const* std::__addressof<main::{lambda()#45} const>(main::{lambda()#45} const&)
main::{lambda()#45} const* std::__addressof<main::{lambda()#45} const>(main::{lambda()#45} const&):
.LFB6300:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#45}& std::forward<main::{lambda()#45}&>(std::remove_reference<main::{lambda()#45}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45}& std::forward<main::{lambda()#45}&>(std::remove_reference<main::{lambda()#45}&>::type&)
main::{lambda()#45}& std::forward<main::{lambda()#45}&>(std::remove_reference<main::{lambda()#45}&>::type&):
.LFB6301:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#45}&>(std::__invoke_other, main::{lambda()#45}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#45}&>(std::__invoke_other, main::{lambda()#45}&)
bool std::__invoke_impl<bool, main::{lambda()#45}&>(std::__invoke_other, main::{lambda()#45}&):
.LFB6302:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}& std::forward<main::{lambda()#45}&>(std::remove_reference<main::{lambda()#45}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#45}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&)
void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_init_functor<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&):
.LFB6303:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45} const& std::forward<main::{lambda()#45} const&>(std::remove_reference<main::{lambda()#45} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6304:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45}& std::_Any_data::_M_access<main::{lambda()#45}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#46} const& std::_Any_data::_M_access<main::{lambda()#46}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46} const& std::_Any_data::_M_access<main::{lambda()#46}>() const
main::{lambda()#46} const& std::_Any_data::_M_access<main::{lambda()#46}>() const:
.LFB6305:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#46} const* std::__addressof<main::{lambda()#46} const>(main::{lambda()#46} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46} const* std::__addressof<main::{lambda()#46} const>(main::{lambda()#46} const&)
main::{lambda()#46} const* std::__addressof<main::{lambda()#46} const>(main::{lambda()#46} const&):
.LFB6306:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#46}& std::forward<main::{lambda()#46}&>(std::remove_reference<main::{lambda()#46}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46}& std::forward<main::{lambda()#46}&>(std::remove_reference<main::{lambda()#46}&>::type&)
main::{lambda()#46}& std::forward<main::{lambda()#46}&>(std::remove_reference<main::{lambda()#46}&>::type&):
.LFB6307:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#46}&>(std::__invoke_other, main::{lambda()#46}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#46}&>(std::__invoke_other, main::{lambda()#46}&)
bool std::__invoke_impl<bool, main::{lambda()#46}&>(std::__invoke_other, main::{lambda()#46}&):
.LFB6308:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}& std::forward<main::{lambda()#46}&>(std::remove_reference<main::{lambda()#46}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#46}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&)
void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_init_functor<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&):
.LFB6309:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46} const& std::forward<main::{lambda()#46} const&>(std::remove_reference<main::{lambda()#46} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6310:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46}& std::_Any_data::_M_access<main::{lambda()#46}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#47} const& std::_Any_data::_M_access<main::{lambda()#47}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47} const& std::_Any_data::_M_access<main::{lambda()#47}>() const
main::{lambda()#47} const& std::_Any_data::_M_access<main::{lambda()#47}>() const:
.LFB6311:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#47} const* std::__addressof<main::{lambda()#47} const>(main::{lambda()#47} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47} const* std::__addressof<main::{lambda()#47} const>(main::{lambda()#47} const&)
main::{lambda()#47} const* std::__addressof<main::{lambda()#47} const>(main::{lambda()#47} const&):
.LFB6312:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#47}& std::forward<main::{lambda()#47}&>(std::remove_reference<main::{lambda()#47}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47}& std::forward<main::{lambda()#47}&>(std::remove_reference<main::{lambda()#47}&>::type&)
main::{lambda()#47}& std::forward<main::{lambda()#47}&>(std::remove_reference<main::{lambda()#47}&>::type&):
.LFB6313:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#47}&>(std::__invoke_other, main::{lambda()#47}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#47}&>(std::__invoke_other, main::{lambda()#47}&)
bool std::__invoke_impl<bool, main::{lambda()#47}&>(std::__invoke_other, main::{lambda()#47}&):
.LFB6314:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}& std::forward<main::{lambda()#47}&>(std::remove_reference<main::{lambda()#47}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#47}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&)
void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_init_functor<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&):
.LFB6315:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47} const& std::forward<main::{lambda()#47} const&>(std::remove_reference<main::{lambda()#47} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6316:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47}& std::_Any_data::_M_access<main::{lambda()#47}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#48} const& std::_Any_data::_M_access<main::{lambda()#48}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48} const& std::_Any_data::_M_access<main::{lambda()#48}>() const
main::{lambda()#48} const& std::_Any_data::_M_access<main::{lambda()#48}>() const:
.LFB6317:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#48} const* std::__addressof<main::{lambda()#48} const>(main::{lambda()#48} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48} const* std::__addressof<main::{lambda()#48} const>(main::{lambda()#48} const&)
main::{lambda()#48} const* std::__addressof<main::{lambda()#48} const>(main::{lambda()#48} const&):
.LFB6318:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#48}& std::forward<main::{lambda()#48}&>(std::remove_reference<main::{lambda()#48}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48}& std::forward<main::{lambda()#48}&>(std::remove_reference<main::{lambda()#48}&>::type&)
main::{lambda()#48}& std::forward<main::{lambda()#48}&>(std::remove_reference<main::{lambda()#48}&>::type&):
.LFB6319:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#48}&>(std::__invoke_other, main::{lambda()#48}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#48}&>(std::__invoke_other, main::{lambda()#48}&)
bool std::__invoke_impl<bool, main::{lambda()#48}&>(std::__invoke_other, main::{lambda()#48}&):
.LFB6320:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}& std::forward<main::{lambda()#48}&>(std::remove_reference<main::{lambda()#48}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#48}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&)
void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_init_functor<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&):
.LFB6321:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48} const& std::forward<main::{lambda()#48} const&>(std::remove_reference<main::{lambda()#48} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6322:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48}& std::_Any_data::_M_access<main::{lambda()#48}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#49} const& std::_Any_data::_M_access<main::{lambda()#49}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49} const& std::_Any_data::_M_access<main::{lambda()#49}>() const
main::{lambda()#49} const& std::_Any_data::_M_access<main::{lambda()#49}>() const:
.LFB6323:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#49} const* std::__addressof<main::{lambda()#49} const>(main::{lambda()#49} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49} const* std::__addressof<main::{lambda()#49} const>(main::{lambda()#49} const&)
main::{lambda()#49} const* std::__addressof<main::{lambda()#49} const>(main::{lambda()#49} const&):
.LFB6324:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#49}& std::forward<main::{lambda()#49}&>(std::remove_reference<main::{lambda()#49}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49}& std::forward<main::{lambda()#49}&>(std::remove_reference<main::{lambda()#49}&>::type&)
main::{lambda()#49}& std::forward<main::{lambda()#49}&>(std::remove_reference<main::{lambda()#49}&>::type&):
.LFB6325:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#49}&>(std::__invoke_other, main::{lambda()#49}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#49}&>(std::__invoke_other, main::{lambda()#49}&)
bool std::__invoke_impl<bool, main::{lambda()#49}&>(std::__invoke_other, main::{lambda()#49}&):
.LFB6326:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}& std::forward<main::{lambda()#49}&>(std::remove_reference<main::{lambda()#49}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#49}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&)
void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_init_functor<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&):
.LFB6327:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49} const& std::forward<main::{lambda()#49} const&>(std::remove_reference<main::{lambda()#49} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6328:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49}& std::_Any_data::_M_access<main::{lambda()#49}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#50} const& std::_Any_data::_M_access<main::{lambda()#50}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50} const& std::_Any_data::_M_access<main::{lambda()#50}>() const
main::{lambda()#50} const& std::_Any_data::_M_access<main::{lambda()#50}>() const:
.LFB6329:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#50} const* std::__addressof<main::{lambda()#50} const>(main::{lambda()#50} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50} const* std::__addressof<main::{lambda()#50} const>(main::{lambda()#50} const&)
main::{lambda()#50} const* std::__addressof<main::{lambda()#50} const>(main::{lambda()#50} const&):
.LFB6330:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#50}& std::forward<main::{lambda()#50}&>(std::remove_reference<main::{lambda()#50}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50}& std::forward<main::{lambda()#50}&>(std::remove_reference<main::{lambda()#50}&>::type&)
main::{lambda()#50}& std::forward<main::{lambda()#50}&>(std::remove_reference<main::{lambda()#50}&>::type&):
.LFB6331:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#50}&>(std::__invoke_other, main::{lambda()#50}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#50}&>(std::__invoke_other, main::{lambda()#50}&)
bool std::__invoke_impl<bool, main::{lambda()#50}&>(std::__invoke_other, main::{lambda()#50}&):
.LFB6332:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}& std::forward<main::{lambda()#50}&>(std::remove_reference<main::{lambda()#50}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#50}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&)
void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_init_functor<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&):
.LFB6333:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50} const& std::forward<main::{lambda()#50} const&>(std::remove_reference<main::{lambda()#50} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6334:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50}& std::_Any_data::_M_access<main::{lambda()#50}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#51} const& std::_Any_data::_M_access<main::{lambda()#51}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51} const& std::_Any_data::_M_access<main::{lambda()#51}>() const
main::{lambda()#51} const& std::_Any_data::_M_access<main::{lambda()#51}>() const:
.LFB6335:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#51} const* std::__addressof<main::{lambda()#51} const>(main::{lambda()#51} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51} const* std::__addressof<main::{lambda()#51} const>(main::{lambda()#51} const&)
main::{lambda()#51} const* std::__addressof<main::{lambda()#51} const>(main::{lambda()#51} const&):
.LFB6336:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#51}& std::forward<main::{lambda()#51}&>(std::remove_reference<main::{lambda()#51}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51}& std::forward<main::{lambda()#51}&>(std::remove_reference<main::{lambda()#51}&>::type&)
main::{lambda()#51}& std::forward<main::{lambda()#51}&>(std::remove_reference<main::{lambda()#51}&>::type&):
.LFB6337:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#51}&>(std::__invoke_other, main::{lambda()#51}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#51}&>(std::__invoke_other, main::{lambda()#51}&)
bool std::__invoke_impl<bool, main::{lambda()#51}&>(std::__invoke_other, main::{lambda()#51}&):
.LFB6338:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}& std::forward<main::{lambda()#51}&>(std::remove_reference<main::{lambda()#51}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#51}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&)
void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_init_functor<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&):
.LFB6339:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51} const& std::forward<main::{lambda()#51} const&>(std::remove_reference<main::{lambda()#51} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6340:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51}& std::_Any_data::_M_access<main::{lambda()#51}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#52} const& std::_Any_data::_M_access<main::{lambda()#52}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52} const& std::_Any_data::_M_access<main::{lambda()#52}>() const
main::{lambda()#52} const& std::_Any_data::_M_access<main::{lambda()#52}>() const:
.LFB6341:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#52} const* std::__addressof<main::{lambda()#52} const>(main::{lambda()#52} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52} const* std::__addressof<main::{lambda()#52} const>(main::{lambda()#52} const&)
main::{lambda()#52} const* std::__addressof<main::{lambda()#52} const>(main::{lambda()#52} const&):
.LFB6342:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#52}& std::forward<main::{lambda()#52}&>(std::remove_reference<main::{lambda()#52}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52}& std::forward<main::{lambda()#52}&>(std::remove_reference<main::{lambda()#52}&>::type&)
main::{lambda()#52}& std::forward<main::{lambda()#52}&>(std::remove_reference<main::{lambda()#52}&>::type&):
.LFB6343:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#52}&>(std::__invoke_other, main::{lambda()#52}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#52}&>(std::__invoke_other, main::{lambda()#52}&)
bool std::__invoke_impl<bool, main::{lambda()#52}&>(std::__invoke_other, main::{lambda()#52}&):
.LFB6344:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}& std::forward<main::{lambda()#52}&>(std::remove_reference<main::{lambda()#52}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#52}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&)
void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_init_functor<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&):
.LFB6345:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52} const& std::forward<main::{lambda()#52} const&>(std::remove_reference<main::{lambda()#52} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6346:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52}& std::_Any_data::_M_access<main::{lambda()#52}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#53} const& std::_Any_data::_M_access<main::{lambda()#53}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53} const& std::_Any_data::_M_access<main::{lambda()#53}>() const
main::{lambda()#53} const& std::_Any_data::_M_access<main::{lambda()#53}>() const:
.LFB6347:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#53} const* std::__addressof<main::{lambda()#53} const>(main::{lambda()#53} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53} const* std::__addressof<main::{lambda()#53} const>(main::{lambda()#53} const&)
main::{lambda()#53} const* std::__addressof<main::{lambda()#53} const>(main::{lambda()#53} const&):
.LFB6348:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#53}& std::forward<main::{lambda()#53}&>(std::remove_reference<main::{lambda()#53}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53}& std::forward<main::{lambda()#53}&>(std::remove_reference<main::{lambda()#53}&>::type&)
main::{lambda()#53}& std::forward<main::{lambda()#53}&>(std::remove_reference<main::{lambda()#53}&>::type&):
.LFB6349:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#53}&>(std::__invoke_other, main::{lambda()#53}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#53}&>(std::__invoke_other, main::{lambda()#53}&)
bool std::__invoke_impl<bool, main::{lambda()#53}&>(std::__invoke_other, main::{lambda()#53}&):
.LFB6350:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}& std::forward<main::{lambda()#53}&>(std::remove_reference<main::{lambda()#53}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#53}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&)
void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_init_functor<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&):
.LFB6351:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53} const& std::forward<main::{lambda()#53} const&>(std::remove_reference<main::{lambda()#53} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6352:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53}& std::_Any_data::_M_access<main::{lambda()#53}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#54} const& std::_Any_data::_M_access<main::{lambda()#54}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54} const& std::_Any_data::_M_access<main::{lambda()#54}>() const
main::{lambda()#54} const& std::_Any_data::_M_access<main::{lambda()#54}>() const:
.LFB6353:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#54} const* std::__addressof<main::{lambda()#54} const>(main::{lambda()#54} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54} const* std::__addressof<main::{lambda()#54} const>(main::{lambda()#54} const&)
main::{lambda()#54} const* std::__addressof<main::{lambda()#54} const>(main::{lambda()#54} const&):
.LFB6354:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#54}& std::forward<main::{lambda()#54}&>(std::remove_reference<main::{lambda()#54}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54}& std::forward<main::{lambda()#54}&>(std::remove_reference<main::{lambda()#54}&>::type&)
main::{lambda()#54}& std::forward<main::{lambda()#54}&>(std::remove_reference<main::{lambda()#54}&>::type&):
.LFB6355:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#54}&>(std::__invoke_other, main::{lambda()#54}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#54}&>(std::__invoke_other, main::{lambda()#54}&)
bool std::__invoke_impl<bool, main::{lambda()#54}&>(std::__invoke_other, main::{lambda()#54}&):
.LFB6356:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}& std::forward<main::{lambda()#54}&>(std::remove_reference<main::{lambda()#54}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#54}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&)
void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_init_functor<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&):
.LFB6357:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54} const& std::forward<main::{lambda()#54} const&>(std::remove_reference<main::{lambda()#54} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6358:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54}& std::_Any_data::_M_access<main::{lambda()#54}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#55} const& std::_Any_data::_M_access<main::{lambda()#55}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55} const& std::_Any_data::_M_access<main::{lambda()#55}>() const
main::{lambda()#55} const& std::_Any_data::_M_access<main::{lambda()#55}>() const:
.LFB6359:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#55} const* std::__addressof<main::{lambda()#55} const>(main::{lambda()#55} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55} const* std::__addressof<main::{lambda()#55} const>(main::{lambda()#55} const&)
main::{lambda()#55} const* std::__addressof<main::{lambda()#55} const>(main::{lambda()#55} const&):
.LFB6360:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#55}& std::forward<main::{lambda()#55}&>(std::remove_reference<main::{lambda()#55}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55}& std::forward<main::{lambda()#55}&>(std::remove_reference<main::{lambda()#55}&>::type&)
main::{lambda()#55}& std::forward<main::{lambda()#55}&>(std::remove_reference<main::{lambda()#55}&>::type&):
.LFB6361:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#55}&>(std::__invoke_other, main::{lambda()#55}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#55}&>(std::__invoke_other, main::{lambda()#55}&)
bool std::__invoke_impl<bool, main::{lambda()#55}&>(std::__invoke_other, main::{lambda()#55}&):
.LFB6362:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}& std::forward<main::{lambda()#55}&>(std::remove_reference<main::{lambda()#55}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#55}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&)
void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_init_functor<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&):
.LFB6363:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55} const& std::forward<main::{lambda()#55} const&>(std::remove_reference<main::{lambda()#55} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6364:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55}& std::_Any_data::_M_access<main::{lambda()#55}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#56} const& std::_Any_data::_M_access<main::{lambda()#56}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56} const& std::_Any_data::_M_access<main::{lambda()#56}>() const
main::{lambda()#56} const& std::_Any_data::_M_access<main::{lambda()#56}>() const:
.LFB6365:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#56} const* std::__addressof<main::{lambda()#56} const>(main::{lambda()#56} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56} const* std::__addressof<main::{lambda()#56} const>(main::{lambda()#56} const&)
main::{lambda()#56} const* std::__addressof<main::{lambda()#56} const>(main::{lambda()#56} const&):
.LFB6366:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#56}& std::forward<main::{lambda()#56}&>(std::remove_reference<main::{lambda()#56}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56}& std::forward<main::{lambda()#56}&>(std::remove_reference<main::{lambda()#56}&>::type&)
main::{lambda()#56}& std::forward<main::{lambda()#56}&>(std::remove_reference<main::{lambda()#56}&>::type&):
.LFB6367:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#56}&>(std::__invoke_other, main::{lambda()#56}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#56}&>(std::__invoke_other, main::{lambda()#56}&)
bool std::__invoke_impl<bool, main::{lambda()#56}&>(std::__invoke_other, main::{lambda()#56}&):
.LFB6368:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}& std::forward<main::{lambda()#56}&>(std::remove_reference<main::{lambda()#56}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#56}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&)
void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_init_functor<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&):
.LFB6369:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56} const& std::forward<main::{lambda()#56} const&>(std::remove_reference<main::{lambda()#56} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6370:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56}& std::_Any_data::_M_access<main::{lambda()#56}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#57} const& std::_Any_data::_M_access<main::{lambda()#57}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57} const& std::_Any_data::_M_access<main::{lambda()#57}>() const
main::{lambda()#57} const& std::_Any_data::_M_access<main::{lambda()#57}>() const:
.LFB6371:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#57} const* std::__addressof<main::{lambda()#57} const>(main::{lambda()#57} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57} const* std::__addressof<main::{lambda()#57} const>(main::{lambda()#57} const&)
main::{lambda()#57} const* std::__addressof<main::{lambda()#57} const>(main::{lambda()#57} const&):
.LFB6372:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#57}& std::forward<main::{lambda()#57}&>(std::remove_reference<main::{lambda()#57}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57}& std::forward<main::{lambda()#57}&>(std::remove_reference<main::{lambda()#57}&>::type&)
main::{lambda()#57}& std::forward<main::{lambda()#57}&>(std::remove_reference<main::{lambda()#57}&>::type&):
.LFB6373:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#57}&>(std::__invoke_other, main::{lambda()#57}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#57}&>(std::__invoke_other, main::{lambda()#57}&)
bool std::__invoke_impl<bool, main::{lambda()#57}&>(std::__invoke_other, main::{lambda()#57}&):
.LFB6374:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}& std::forward<main::{lambda()#57}&>(std::remove_reference<main::{lambda()#57}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#57}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&)
void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_init_functor<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&):
.LFB6375:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57} const& std::forward<main::{lambda()#57} const&>(std::remove_reference<main::{lambda()#57} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6376:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57}& std::_Any_data::_M_access<main::{lambda()#57}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#58} const& std::_Any_data::_M_access<main::{lambda()#58}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58} const& std::_Any_data::_M_access<main::{lambda()#58}>() const
main::{lambda()#58} const& std::_Any_data::_M_access<main::{lambda()#58}>() const:
.LFB6377:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#58} const* std::__addressof<main::{lambda()#58} const>(main::{lambda()#58} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58} const* std::__addressof<main::{lambda()#58} const>(main::{lambda()#58} const&)
main::{lambda()#58} const* std::__addressof<main::{lambda()#58} const>(main::{lambda()#58} const&):
.LFB6378:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#58}& std::forward<main::{lambda()#58}&>(std::remove_reference<main::{lambda()#58}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58}& std::forward<main::{lambda()#58}&>(std::remove_reference<main::{lambda()#58}&>::type&)
main::{lambda()#58}& std::forward<main::{lambda()#58}&>(std::remove_reference<main::{lambda()#58}&>::type&):
.LFB6379:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#58}&>(std::__invoke_other, main::{lambda()#58}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#58}&>(std::__invoke_other, main::{lambda()#58}&)
bool std::__invoke_impl<bool, main::{lambda()#58}&>(std::__invoke_other, main::{lambda()#58}&):
.LFB6380:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}& std::forward<main::{lambda()#58}&>(std::remove_reference<main::{lambda()#58}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#58}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&)
void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_init_functor<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&):
.LFB6381:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58} const& std::forward<main::{lambda()#58} const&>(std::remove_reference<main::{lambda()#58} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6382:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58}& std::_Any_data::_M_access<main::{lambda()#58}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#59} const& std::_Any_data::_M_access<main::{lambda()#59}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59} const& std::_Any_data::_M_access<main::{lambda()#59}>() const
main::{lambda()#59} const& std::_Any_data::_M_access<main::{lambda()#59}>() const:
.LFB6383:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#59} const* std::__addressof<main::{lambda()#59} const>(main::{lambda()#59} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59} const* std::__addressof<main::{lambda()#59} const>(main::{lambda()#59} const&)
main::{lambda()#59} const* std::__addressof<main::{lambda()#59} const>(main::{lambda()#59} const&):
.LFB6384:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#59}& std::forward<main::{lambda()#59}&>(std::remove_reference<main::{lambda()#59}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59}& std::forward<main::{lambda()#59}&>(std::remove_reference<main::{lambda()#59}&>::type&)
main::{lambda()#59}& std::forward<main::{lambda()#59}&>(std::remove_reference<main::{lambda()#59}&>::type&):
.LFB6385:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#59}&>(std::__invoke_other, main::{lambda()#59}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#59}&>(std::__invoke_other, main::{lambda()#59}&)
bool std::__invoke_impl<bool, main::{lambda()#59}&>(std::__invoke_other, main::{lambda()#59}&):
.LFB6386:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}& std::forward<main::{lambda()#59}&>(std::remove_reference<main::{lambda()#59}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#59}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&)
void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_init_functor<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&):
.LFB6387:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59} const& std::forward<main::{lambda()#59} const&>(std::remove_reference<main::{lambda()#59} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6388:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59}& std::_Any_data::_M_access<main::{lambda()#59}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#60} const& std::_Any_data::_M_access<main::{lambda()#60}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60} const& std::_Any_data::_M_access<main::{lambda()#60}>() const
main::{lambda()#60} const& std::_Any_data::_M_access<main::{lambda()#60}>() const:
.LFB6389:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#60} const* std::__addressof<main::{lambda()#60} const>(main::{lambda()#60} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60} const* std::__addressof<main::{lambda()#60} const>(main::{lambda()#60} const&)
main::{lambda()#60} const* std::__addressof<main::{lambda()#60} const>(main::{lambda()#60} const&):
.LFB6390:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#60}& std::forward<main::{lambda()#60}&>(std::remove_reference<main::{lambda()#60}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60}& std::forward<main::{lambda()#60}&>(std::remove_reference<main::{lambda()#60}&>::type&)
main::{lambda()#60}& std::forward<main::{lambda()#60}&>(std::remove_reference<main::{lambda()#60}&>::type&):
.LFB6391:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#60}&>(std::__invoke_other, main::{lambda()#60}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#60}&>(std::__invoke_other, main::{lambda()#60}&)
bool std::__invoke_impl<bool, main::{lambda()#60}&>(std::__invoke_other, main::{lambda()#60}&):
.LFB6392:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}& std::forward<main::{lambda()#60}&>(std::remove_reference<main::{lambda()#60}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#60}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&)
void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_init_functor<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&):
.LFB6393:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60} const& std::forward<main::{lambda()#60} const&>(std::remove_reference<main::{lambda()#60} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6394:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60}& std::_Any_data::_M_access<main::{lambda()#60}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#61} const& std::_Any_data::_M_access<main::{lambda()#61}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61} const& std::_Any_data::_M_access<main::{lambda()#61}>() const
main::{lambda()#61} const& std::_Any_data::_M_access<main::{lambda()#61}>() const:
.LFB6395:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#61} const* std::__addressof<main::{lambda()#61} const>(main::{lambda()#61} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61} const* std::__addressof<main::{lambda()#61} const>(main::{lambda()#61} const&)
main::{lambda()#61} const* std::__addressof<main::{lambda()#61} const>(main::{lambda()#61} const&):
.LFB6396:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#61}& std::forward<main::{lambda()#61}&>(std::remove_reference<main::{lambda()#61}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61}& std::forward<main::{lambda()#61}&>(std::remove_reference<main::{lambda()#61}&>::type&)
main::{lambda()#61}& std::forward<main::{lambda()#61}&>(std::remove_reference<main::{lambda()#61}&>::type&):
.LFB6397:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#61}&>(std::__invoke_other, main::{lambda()#61}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#61}&>(std::__invoke_other, main::{lambda()#61}&)
bool std::__invoke_impl<bool, main::{lambda()#61}&>(std::__invoke_other, main::{lambda()#61}&):
.LFB6398:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}& std::forward<main::{lambda()#61}&>(std::remove_reference<main::{lambda()#61}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#61}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&)
void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_init_functor<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&):
.LFB6399:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61} const& std::forward<main::{lambda()#61} const&>(std::remove_reference<main::{lambda()#61} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6400:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61}& std::_Any_data::_M_access<main::{lambda()#61}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#62} const& std::_Any_data::_M_access<main::{lambda()#62}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62} const& std::_Any_data::_M_access<main::{lambda()#62}>() const
main::{lambda()#62} const& std::_Any_data::_M_access<main::{lambda()#62}>() const:
.LFB6401:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#62} const* std::__addressof<main::{lambda()#62} const>(main::{lambda()#62} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62} const* std::__addressof<main::{lambda()#62} const>(main::{lambda()#62} const&)
main::{lambda()#62} const* std::__addressof<main::{lambda()#62} const>(main::{lambda()#62} const&):
.LFB6402:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#62}& std::forward<main::{lambda()#62}&>(std::remove_reference<main::{lambda()#62}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62}& std::forward<main::{lambda()#62}&>(std::remove_reference<main::{lambda()#62}&>::type&)
main::{lambda()#62}& std::forward<main::{lambda()#62}&>(std::remove_reference<main::{lambda()#62}&>::type&):
.LFB6403:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#62}&>(std::__invoke_other, main::{lambda()#62}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#62}&>(std::__invoke_other, main::{lambda()#62}&)
bool std::__invoke_impl<bool, main::{lambda()#62}&>(std::__invoke_other, main::{lambda()#62}&):
.LFB6404:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}& std::forward<main::{lambda()#62}&>(std::remove_reference<main::{lambda()#62}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#62}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&)
void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_init_functor<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&):
.LFB6405:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62} const& std::forward<main::{lambda()#62} const&>(std::remove_reference<main::{lambda()#62} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6406:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62}& std::_Any_data::_M_access<main::{lambda()#62}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#63} const& std::_Any_data::_M_access<main::{lambda()#63}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63} const& std::_Any_data::_M_access<main::{lambda()#63}>() const
main::{lambda()#63} const& std::_Any_data::_M_access<main::{lambda()#63}>() const:
.LFB6407:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#63} const* std::__addressof<main::{lambda()#63} const>(main::{lambda()#63} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63} const* std::__addressof<main::{lambda()#63} const>(main::{lambda()#63} const&)
main::{lambda()#63} const* std::__addressof<main::{lambda()#63} const>(main::{lambda()#63} const&):
.LFB6408:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#63}& std::forward<main::{lambda()#63}&>(std::remove_reference<main::{lambda()#63}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63}& std::forward<main::{lambda()#63}&>(std::remove_reference<main::{lambda()#63}&>::type&)
main::{lambda()#63}& std::forward<main::{lambda()#63}&>(std::remove_reference<main::{lambda()#63}&>::type&):
.LFB6409:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#63}&>(std::__invoke_other, main::{lambda()#63}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#63}&>(std::__invoke_other, main::{lambda()#63}&)
bool std::__invoke_impl<bool, main::{lambda()#63}&>(std::__invoke_other, main::{lambda()#63}&):
.LFB6410:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}& std::forward<main::{lambda()#63}&>(std::remove_reference<main::{lambda()#63}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#63}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&)
void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_init_functor<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&):
.LFB6411:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63} const& std::forward<main::{lambda()#63} const&>(std::remove_reference<main::{lambda()#63} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6412:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63}& std::_Any_data::_M_access<main::{lambda()#63}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#64} const& std::_Any_data::_M_access<main::{lambda()#64}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64} const& std::_Any_data::_M_access<main::{lambda()#64}>() const
main::{lambda()#64} const& std::_Any_data::_M_access<main::{lambda()#64}>() const:
.LFB6413:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#64} const* std::__addressof<main::{lambda()#64} const>(main::{lambda()#64} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64} const* std::__addressof<main::{lambda()#64} const>(main::{lambda()#64} const&)
main::{lambda()#64} const* std::__addressof<main::{lambda()#64} const>(main::{lambda()#64} const&):
.LFB6414:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#64}& std::forward<main::{lambda()#64}&>(std::remove_reference<main::{lambda()#64}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64}& std::forward<main::{lambda()#64}&>(std::remove_reference<main::{lambda()#64}&>::type&)
main::{lambda()#64}& std::forward<main::{lambda()#64}&>(std::remove_reference<main::{lambda()#64}&>::type&):
.LFB6415:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#64}&>(std::__invoke_other, main::{lambda()#64}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#64}&>(std::__invoke_other, main::{lambda()#64}&)
bool std::__invoke_impl<bool, main::{lambda()#64}&>(std::__invoke_other, main::{lambda()#64}&):
.LFB6416:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}& std::forward<main::{lambda()#64}&>(std::remove_reference<main::{lambda()#64}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#64}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&)
void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_init_functor<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&):
.LFB6417:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64} const& std::forward<main::{lambda()#64} const&>(std::remove_reference<main::{lambda()#64} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6418:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64}& std::_Any_data::_M_access<main::{lambda()#64}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#65} const& std::_Any_data::_M_access<main::{lambda()#65}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65} const& std::_Any_data::_M_access<main::{lambda()#65}>() const
main::{lambda()#65} const& std::_Any_data::_M_access<main::{lambda()#65}>() const:
.LFB6419:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#65} const* std::__addressof<main::{lambda()#65} const>(main::{lambda()#65} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65} const* std::__addressof<main::{lambda()#65} const>(main::{lambda()#65} const&)
main::{lambda()#65} const* std::__addressof<main::{lambda()#65} const>(main::{lambda()#65} const&):
.LFB6420:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#65}& std::forward<main::{lambda()#65}&>(std::remove_reference<main::{lambda()#65}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65}& std::forward<main::{lambda()#65}&>(std::remove_reference<main::{lambda()#65}&>::type&)
main::{lambda()#65}& std::forward<main::{lambda()#65}&>(std::remove_reference<main::{lambda()#65}&>::type&):
.LFB6421:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#65}&>(std::__invoke_other, main::{lambda()#65}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#65}&>(std::__invoke_other, main::{lambda()#65}&)
bool std::__invoke_impl<bool, main::{lambda()#65}&>(std::__invoke_other, main::{lambda()#65}&):
.LFB6422:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}& std::forward<main::{lambda()#65}&>(std::remove_reference<main::{lambda()#65}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#65}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&)
void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_init_functor<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&):
.LFB6423:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65} const& std::forward<main::{lambda()#65} const&>(std::remove_reference<main::{lambda()#65} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6424:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65}& std::_Any_data::_M_access<main::{lambda()#65}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#66} const& std::_Any_data::_M_access<main::{lambda()#66}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66} const& std::_Any_data::_M_access<main::{lambda()#66}>() const
main::{lambda()#66} const& std::_Any_data::_M_access<main::{lambda()#66}>() const:
.LFB6425:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#66} const* std::__addressof<main::{lambda()#66} const>(main::{lambda()#66} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66} const* std::__addressof<main::{lambda()#66} const>(main::{lambda()#66} const&)
main::{lambda()#66} const* std::__addressof<main::{lambda()#66} const>(main::{lambda()#66} const&):
.LFB6426:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#66}& std::forward<main::{lambda()#66}&>(std::remove_reference<main::{lambda()#66}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66}& std::forward<main::{lambda()#66}&>(std::remove_reference<main::{lambda()#66}&>::type&)
main::{lambda()#66}& std::forward<main::{lambda()#66}&>(std::remove_reference<main::{lambda()#66}&>::type&):
.LFB6427:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#66}&>(std::__invoke_other, main::{lambda()#66}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#66}&>(std::__invoke_other, main::{lambda()#66}&)
bool std::__invoke_impl<bool, main::{lambda()#66}&>(std::__invoke_other, main::{lambda()#66}&):
.LFB6428:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}& std::forward<main::{lambda()#66}&>(std::remove_reference<main::{lambda()#66}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#66}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&)
void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_init_functor<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&):
.LFB6429:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66} const& std::forward<main::{lambda()#66} const&>(std::remove_reference<main::{lambda()#66} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6430:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66}& std::_Any_data::_M_access<main::{lambda()#66}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#67} const& std::_Any_data::_M_access<main::{lambda()#67}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67} const& std::_Any_data::_M_access<main::{lambda()#67}>() const
main::{lambda()#67} const& std::_Any_data::_M_access<main::{lambda()#67}>() const:
.LFB6431:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#67} const* std::__addressof<main::{lambda()#67} const>(main::{lambda()#67} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67} const* std::__addressof<main::{lambda()#67} const>(main::{lambda()#67} const&)
main::{lambda()#67} const* std::__addressof<main::{lambda()#67} const>(main::{lambda()#67} const&):
.LFB6432:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#67}& std::forward<main::{lambda()#67}&>(std::remove_reference<main::{lambda()#67}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67}& std::forward<main::{lambda()#67}&>(std::remove_reference<main::{lambda()#67}&>::type&)
main::{lambda()#67}& std::forward<main::{lambda()#67}&>(std::remove_reference<main::{lambda()#67}&>::type&):
.LFB6433:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#67}&>(std::__invoke_other, main::{lambda()#67}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#67}&>(std::__invoke_other, main::{lambda()#67}&)
bool std::__invoke_impl<bool, main::{lambda()#67}&>(std::__invoke_other, main::{lambda()#67}&):
.LFB6434:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}& std::forward<main::{lambda()#67}&>(std::remove_reference<main::{lambda()#67}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#67}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&)
void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_init_functor<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&):
.LFB6435:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67} const& std::forward<main::{lambda()#67} const&>(std::remove_reference<main::{lambda()#67} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6436:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67}& std::_Any_data::_M_access<main::{lambda()#67}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#68} const& std::_Any_data::_M_access<main::{lambda()#68}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68} const& std::_Any_data::_M_access<main::{lambda()#68}>() const
main::{lambda()#68} const& std::_Any_data::_M_access<main::{lambda()#68}>() const:
.LFB6437:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#68} const* std::__addressof<main::{lambda()#68} const>(main::{lambda()#68} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68} const* std::__addressof<main::{lambda()#68} const>(main::{lambda()#68} const&)
main::{lambda()#68} const* std::__addressof<main::{lambda()#68} const>(main::{lambda()#68} const&):
.LFB6438:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#68}& std::forward<main::{lambda()#68}&>(std::remove_reference<main::{lambda()#68}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68}& std::forward<main::{lambda()#68}&>(std::remove_reference<main::{lambda()#68}&>::type&)
main::{lambda()#68}& std::forward<main::{lambda()#68}&>(std::remove_reference<main::{lambda()#68}&>::type&):
.LFB6439:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#68}&>(std::__invoke_other, main::{lambda()#68}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#68}&>(std::__invoke_other, main::{lambda()#68}&)
bool std::__invoke_impl<bool, main::{lambda()#68}&>(std::__invoke_other, main::{lambda()#68}&):
.LFB6440:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}& std::forward<main::{lambda()#68}&>(std::remove_reference<main::{lambda()#68}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#68}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&)
void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_init_functor<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&):
.LFB6441:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68} const& std::forward<main::{lambda()#68} const&>(std::remove_reference<main::{lambda()#68} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6442:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68}& std::_Any_data::_M_access<main::{lambda()#68}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#69} const& std::_Any_data::_M_access<main::{lambda()#69}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69} const& std::_Any_data::_M_access<main::{lambda()#69}>() const
main::{lambda()#69} const& std::_Any_data::_M_access<main::{lambda()#69}>() const:
.LFB6443:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#69} const* std::__addressof<main::{lambda()#69} const>(main::{lambda()#69} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69} const* std::__addressof<main::{lambda()#69} const>(main::{lambda()#69} const&)
main::{lambda()#69} const* std::__addressof<main::{lambda()#69} const>(main::{lambda()#69} const&):
.LFB6444:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#69}& std::forward<main::{lambda()#69}&>(std::remove_reference<main::{lambda()#69}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69}& std::forward<main::{lambda()#69}&>(std::remove_reference<main::{lambda()#69}&>::type&)
main::{lambda()#69}& std::forward<main::{lambda()#69}&>(std::remove_reference<main::{lambda()#69}&>::type&):
.LFB6445:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#69}&>(std::__invoke_other, main::{lambda()#69}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#69}&>(std::__invoke_other, main::{lambda()#69}&)
bool std::__invoke_impl<bool, main::{lambda()#69}&>(std::__invoke_other, main::{lambda()#69}&):
.LFB6446:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}& std::forward<main::{lambda()#69}&>(std::remove_reference<main::{lambda()#69}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#69}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&)
void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_init_functor<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&):
.LFB6447:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69} const& std::forward<main::{lambda()#69} const&>(std::remove_reference<main::{lambda()#69} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6448:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69}& std::_Any_data::_M_access<main::{lambda()#69}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#70} const& std::_Any_data::_M_access<main::{lambda()#70}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70} const& std::_Any_data::_M_access<main::{lambda()#70}>() const
main::{lambda()#70} const& std::_Any_data::_M_access<main::{lambda()#70}>() const:
.LFB6449:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#70} const* std::__addressof<main::{lambda()#70} const>(main::{lambda()#70} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70} const* std::__addressof<main::{lambda()#70} const>(main::{lambda()#70} const&)
main::{lambda()#70} const* std::__addressof<main::{lambda()#70} const>(main::{lambda()#70} const&):
.LFB6450:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#70}& std::forward<main::{lambda()#70}&>(std::remove_reference<main::{lambda()#70}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70}& std::forward<main::{lambda()#70}&>(std::remove_reference<main::{lambda()#70}&>::type&)
main::{lambda()#70}& std::forward<main::{lambda()#70}&>(std::remove_reference<main::{lambda()#70}&>::type&):
.LFB6451:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#70}&>(std::__invoke_other, main::{lambda()#70}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#70}&>(std::__invoke_other, main::{lambda()#70}&)
bool std::__invoke_impl<bool, main::{lambda()#70}&>(std::__invoke_other, main::{lambda()#70}&):
.LFB6452:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}& std::forward<main::{lambda()#70}&>(std::remove_reference<main::{lambda()#70}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#70}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&)
void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_init_functor<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&):
.LFB6453:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70} const& std::forward<main::{lambda()#70} const&>(std::remove_reference<main::{lambda()#70} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6454:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70}& std::_Any_data::_M_access<main::{lambda()#70}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#71} const& std::_Any_data::_M_access<main::{lambda()#71}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71} const& std::_Any_data::_M_access<main::{lambda()#71}>() const
main::{lambda()#71} const& std::_Any_data::_M_access<main::{lambda()#71}>() const:
.LFB6455:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#71} const* std::__addressof<main::{lambda()#71} const>(main::{lambda()#71} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71} const* std::__addressof<main::{lambda()#71} const>(main::{lambda()#71} const&)
main::{lambda()#71} const* std::__addressof<main::{lambda()#71} const>(main::{lambda()#71} const&):
.LFB6456:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#71}& std::forward<main::{lambda()#71}&>(std::remove_reference<main::{lambda()#71}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71}& std::forward<main::{lambda()#71}&>(std::remove_reference<main::{lambda()#71}&>::type&)
main::{lambda()#71}& std::forward<main::{lambda()#71}&>(std::remove_reference<main::{lambda()#71}&>::type&):
.LFB6457:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#71}&>(std::__invoke_other, main::{lambda()#71}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#71}&>(std::__invoke_other, main::{lambda()#71}&)
bool std::__invoke_impl<bool, main::{lambda()#71}&>(std::__invoke_other, main::{lambda()#71}&):
.LFB6458:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}& std::forward<main::{lambda()#71}&>(std::remove_reference<main::{lambda()#71}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#71}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&)
void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_init_functor<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&):
.LFB6459:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71} const& std::forward<main::{lambda()#71} const&>(std::remove_reference<main::{lambda()#71} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6460:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71}& std::_Any_data::_M_access<main::{lambda()#71}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#72} const& std::_Any_data::_M_access<main::{lambda()#72}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72} const& std::_Any_data::_M_access<main::{lambda()#72}>() const
main::{lambda()#72} const& std::_Any_data::_M_access<main::{lambda()#72}>() const:
.LFB6461:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#72} const* std::__addressof<main::{lambda()#72} const>(main::{lambda()#72} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72} const* std::__addressof<main::{lambda()#72} const>(main::{lambda()#72} const&)
main::{lambda()#72} const* std::__addressof<main::{lambda()#72} const>(main::{lambda()#72} const&):
.LFB6462:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#72}& std::forward<main::{lambda()#72}&>(std::remove_reference<main::{lambda()#72}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72}& std::forward<main::{lambda()#72}&>(std::remove_reference<main::{lambda()#72}&>::type&)
main::{lambda()#72}& std::forward<main::{lambda()#72}&>(std::remove_reference<main::{lambda()#72}&>::type&):
.LFB6463:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#72}&>(std::__invoke_other, main::{lambda()#72}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#72}&>(std::__invoke_other, main::{lambda()#72}&)
bool std::__invoke_impl<bool, main::{lambda()#72}&>(std::__invoke_other, main::{lambda()#72}&):
.LFB6464:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}& std::forward<main::{lambda()#72}&>(std::remove_reference<main::{lambda()#72}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#72}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&)
void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_init_functor<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&):
.LFB6465:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72} const& std::forward<main::{lambda()#72} const&>(std::remove_reference<main::{lambda()#72} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6466:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72}& std::_Any_data::_M_access<main::{lambda()#72}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#73} const& std::_Any_data::_M_access<main::{lambda()#73}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73} const& std::_Any_data::_M_access<main::{lambda()#73}>() const
main::{lambda()#73} const& std::_Any_data::_M_access<main::{lambda()#73}>() const:
.LFB6467:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#73} const* std::__addressof<main::{lambda()#73} const>(main::{lambda()#73} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73} const* std::__addressof<main::{lambda()#73} const>(main::{lambda()#73} const&)
main::{lambda()#73} const* std::__addressof<main::{lambda()#73} const>(main::{lambda()#73} const&):
.LFB6468:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#73}& std::forward<main::{lambda()#73}&>(std::remove_reference<main::{lambda()#73}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73}& std::forward<main::{lambda()#73}&>(std::remove_reference<main::{lambda()#73}&>::type&)
main::{lambda()#73}& std::forward<main::{lambda()#73}&>(std::remove_reference<main::{lambda()#73}&>::type&):
.LFB6469:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#73}&>(std::__invoke_other, main::{lambda()#73}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#73}&>(std::__invoke_other, main::{lambda()#73}&)
bool std::__invoke_impl<bool, main::{lambda()#73}&>(std::__invoke_other, main::{lambda()#73}&):
.LFB6470:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}& std::forward<main::{lambda()#73}&>(std::remove_reference<main::{lambda()#73}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#73}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&)
void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_init_functor<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&):
.LFB6471:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73} const& std::forward<main::{lambda()#73} const&>(std::remove_reference<main::{lambda()#73} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6472:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73}& std::_Any_data::_M_access<main::{lambda()#73}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#74} const& std::_Any_data::_M_access<main::{lambda()#74}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74} const& std::_Any_data::_M_access<main::{lambda()#74}>() const
main::{lambda()#74} const& std::_Any_data::_M_access<main::{lambda()#74}>() const:
.LFB6473:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#74} const* std::__addressof<main::{lambda()#74} const>(main::{lambda()#74} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74} const* std::__addressof<main::{lambda()#74} const>(main::{lambda()#74} const&)
main::{lambda()#74} const* std::__addressof<main::{lambda()#74} const>(main::{lambda()#74} const&):
.LFB6474:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#74}& std::forward<main::{lambda()#74}&>(std::remove_reference<main::{lambda()#74}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74}& std::forward<main::{lambda()#74}&>(std::remove_reference<main::{lambda()#74}&>::type&)
main::{lambda()#74}& std::forward<main::{lambda()#74}&>(std::remove_reference<main::{lambda()#74}&>::type&):
.LFB6475:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#74}&>(std::__invoke_other, main::{lambda()#74}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#74}&>(std::__invoke_other, main::{lambda()#74}&)
bool std::__invoke_impl<bool, main::{lambda()#74}&>(std::__invoke_other, main::{lambda()#74}&):
.LFB6476:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}& std::forward<main::{lambda()#74}&>(std::remove_reference<main::{lambda()#74}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#74}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&)
void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_init_functor<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&):
.LFB6477:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74} const& std::forward<main::{lambda()#74} const&>(std::remove_reference<main::{lambda()#74} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6478:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74}& std::_Any_data::_M_access<main::{lambda()#74}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#75} const& std::_Any_data::_M_access<main::{lambda()#75}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75} const& std::_Any_data::_M_access<main::{lambda()#75}>() const
main::{lambda()#75} const& std::_Any_data::_M_access<main::{lambda()#75}>() const:
.LFB6479:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#75} const* std::__addressof<main::{lambda()#75} const>(main::{lambda()#75} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75} const* std::__addressof<main::{lambda()#75} const>(main::{lambda()#75} const&)
main::{lambda()#75} const* std::__addressof<main::{lambda()#75} const>(main::{lambda()#75} const&):
.LFB6480:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#75}& std::forward<main::{lambda()#75}&>(std::remove_reference<main::{lambda()#75}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75}& std::forward<main::{lambda()#75}&>(std::remove_reference<main::{lambda()#75}&>::type&)
main::{lambda()#75}& std::forward<main::{lambda()#75}&>(std::remove_reference<main::{lambda()#75}&>::type&):
.LFB6481:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#75}&>(std::__invoke_other, main::{lambda()#75}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#75}&>(std::__invoke_other, main::{lambda()#75}&)
bool std::__invoke_impl<bool, main::{lambda()#75}&>(std::__invoke_other, main::{lambda()#75}&):
.LFB6482:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}& std::forward<main::{lambda()#75}&>(std::remove_reference<main::{lambda()#75}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#75}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&)
void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_init_functor<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&):
.LFB6483:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75} const& std::forward<main::{lambda()#75} const&>(std::remove_reference<main::{lambda()#75} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6484:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75}& std::_Any_data::_M_access<main::{lambda()#75}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#76} const& std::_Any_data::_M_access<main::{lambda()#76}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76} const& std::_Any_data::_M_access<main::{lambda()#76}>() const
main::{lambda()#76} const& std::_Any_data::_M_access<main::{lambda()#76}>() const:
.LFB6485:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#76} const* std::__addressof<main::{lambda()#76} const>(main::{lambda()#76} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76} const* std::__addressof<main::{lambda()#76} const>(main::{lambda()#76} const&)
main::{lambda()#76} const* std::__addressof<main::{lambda()#76} const>(main::{lambda()#76} const&):
.LFB6486:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#76}& std::forward<main::{lambda()#76}&>(std::remove_reference<main::{lambda()#76}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76}& std::forward<main::{lambda()#76}&>(std::remove_reference<main::{lambda()#76}&>::type&)
main::{lambda()#76}& std::forward<main::{lambda()#76}&>(std::remove_reference<main::{lambda()#76}&>::type&):
.LFB6487:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#76}&>(std::__invoke_other, main::{lambda()#76}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#76}&>(std::__invoke_other, main::{lambda()#76}&)
bool std::__invoke_impl<bool, main::{lambda()#76}&>(std::__invoke_other, main::{lambda()#76}&):
.LFB6488:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}& std::forward<main::{lambda()#76}&>(std::remove_reference<main::{lambda()#76}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#76}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&)
void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_init_functor<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&):
.LFB6489:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76} const& std::forward<main::{lambda()#76} const&>(std::remove_reference<main::{lambda()#76} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6490:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76}& std::_Any_data::_M_access<main::{lambda()#76}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#77} const& std::_Any_data::_M_access<main::{lambda()#77}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77} const& std::_Any_data::_M_access<main::{lambda()#77}>() const
main::{lambda()#77} const& std::_Any_data::_M_access<main::{lambda()#77}>() const:
.LFB6491:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#77} const* std::__addressof<main::{lambda()#77} const>(main::{lambda()#77} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77} const* std::__addressof<main::{lambda()#77} const>(main::{lambda()#77} const&)
main::{lambda()#77} const* std::__addressof<main::{lambda()#77} const>(main::{lambda()#77} const&):
.LFB6492:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#77}& std::forward<main::{lambda()#77}&>(std::remove_reference<main::{lambda()#77}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77}& std::forward<main::{lambda()#77}&>(std::remove_reference<main::{lambda()#77}&>::type&)
main::{lambda()#77}& std::forward<main::{lambda()#77}&>(std::remove_reference<main::{lambda()#77}&>::type&):
.LFB6493:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#77}&>(std::__invoke_other, main::{lambda()#77}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#77}&>(std::__invoke_other, main::{lambda()#77}&)
bool std::__invoke_impl<bool, main::{lambda()#77}&>(std::__invoke_other, main::{lambda()#77}&):
.LFB6494:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}& std::forward<main::{lambda()#77}&>(std::remove_reference<main::{lambda()#77}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#77}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&)
void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_init_functor<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&):
.LFB6495:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77} const& std::forward<main::{lambda()#77} const&>(std::remove_reference<main::{lambda()#77} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6496:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77}& std::_Any_data::_M_access<main::{lambda()#77}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#78} const& std::_Any_data::_M_access<main::{lambda()#78}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78} const& std::_Any_data::_M_access<main::{lambda()#78}>() const
main::{lambda()#78} const& std::_Any_data::_M_access<main::{lambda()#78}>() const:
.LFB6497:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#78} const* std::__addressof<main::{lambda()#78} const>(main::{lambda()#78} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78} const* std::__addressof<main::{lambda()#78} const>(main::{lambda()#78} const&)
main::{lambda()#78} const* std::__addressof<main::{lambda()#78} const>(main::{lambda()#78} const&):
.LFB6498:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#78}& std::forward<main::{lambda()#78}&>(std::remove_reference<main::{lambda()#78}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78}& std::forward<main::{lambda()#78}&>(std::remove_reference<main::{lambda()#78}&>::type&)
main::{lambda()#78}& std::forward<main::{lambda()#78}&>(std::remove_reference<main::{lambda()#78}&>::type&):
.LFB6499:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#78}&>(std::__invoke_other, main::{lambda()#78}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#78}&>(std::__invoke_other, main::{lambda()#78}&)
bool std::__invoke_impl<bool, main::{lambda()#78}&>(std::__invoke_other, main::{lambda()#78}&):
.LFB6500:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}& std::forward<main::{lambda()#78}&>(std::remove_reference<main::{lambda()#78}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#78}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&)
void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_init_functor<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&):
.LFB6501:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78} const& std::forward<main::{lambda()#78} const&>(std::remove_reference<main::{lambda()#78} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6502:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78}& std::_Any_data::_M_access<main::{lambda()#78}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#79} const& std::_Any_data::_M_access<main::{lambda()#79}>() const;	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79} const& std::_Any_data::_M_access<main::{lambda()#79}>() const
main::{lambda()#79} const& std::_Any_data::_M_access<main::{lambda()#79}>() const:
.LFB6503:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#79} const* std::__addressof<main::{lambda()#79} const>(main::{lambda()#79} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79} const* std::__addressof<main::{lambda()#79} const>(main::{lambda()#79} const&)
main::{lambda()#79} const* std::__addressof<main::{lambda()#79} const>(main::{lambda()#79} const&):
.LFB6504:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#79}& std::forward<main::{lambda()#79}&>(std::remove_reference<main::{lambda()#79}&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79}& std::forward<main::{lambda()#79}&>(std::remove_reference<main::{lambda()#79}&>::type&)
main::{lambda()#79}& std::forward<main::{lambda()#79}&>(std::remove_reference<main::{lambda()#79}&>::type&):
.LFB6505:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	bool std::__invoke_impl<bool, main::{lambda()#79}&>(std::__invoke_other, main::{lambda()#79}&);	.scl	3;	.type	32;	.endef
	.seh_proc	bool std::__invoke_impl<bool, main::{lambda()#79}&>(std::__invoke_other, main::{lambda()#79}&)
bool std::__invoke_impl<bool, main::{lambda()#79}&>(std::__invoke_other, main::{lambda()#79}&):
.LFB6506:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rdx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}& std::forward<main::{lambda()#79}&>(std::remove_reference<main::{lambda()#79}&>::type&)
	movq	%rax, %rcx
	call	main::{lambda()#79}::operator()() const
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&)
void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_init_functor<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&):
.LFB6507:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79} const& std::forward<main::{lambda()#79} const&>(std::remove_reference<main::{lambda()#79} const&>::type&)
	movq	%rax, %rdx
	movq	32(%rbp), %rax
	movl	%ebx, %r8d
	movq	%rax, %rcx
	call	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&, std::integral_constant<bool, true>)
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_endproc
	.def	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>):
.LFB6508:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79}& std::_Any_data::_M_access<main::{lambda()#79}>()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx16__aligned_membufISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_addrEv,"x"
	.linkonce discard
	.align 2
	.globl	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr() const
	.def	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr() const;	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr() const
__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr() const:
.LFB6509:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	main::{lambda()#1} const& std::forward<main::{lambda()#1} const&>(std::remove_reference<main::{lambda()#1} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1} const& std::forward<main::{lambda()#1} const&>(std::remove_reference<main::{lambda()#1} const&>::type&)
main::{lambda()#1} const& std::forward<main::{lambda()#1} const&>(std::remove_reference<main::{lambda()#1} const&>::type&):
.LFB6531:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1} const&>(std::_Any_data&, main::{lambda()#1} const&, std::integral_constant<bool, true>):
.LFB6532:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#1} const& std::forward<main::{lambda()#1} const&>(std::remove_reference<main::{lambda()#1} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#1}& std::_Any_data::_M_access<main::{lambda()#1}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#1}& std::_Any_data::_M_access<main::{lambda()#1}>()
main::{lambda()#1}& std::_Any_data::_M_access<main::{lambda()#1}>():
.LFB6533:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#2} const& std::forward<main::{lambda()#2} const&>(std::remove_reference<main::{lambda()#2} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2} const& std::forward<main::{lambda()#2} const&>(std::remove_reference<main::{lambda()#2} const&>::type&)
main::{lambda()#2} const& std::forward<main::{lambda()#2} const&>(std::remove_reference<main::{lambda()#2} const&>::type&):
.LFB6534:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_create<main::{lambda()#2} const&>(std::_Any_data&, main::{lambda()#2} const&, std::integral_constant<bool, true>):
.LFB6535:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#2} const& std::forward<main::{lambda()#2} const&>(std::remove_reference<main::{lambda()#2} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#2}& std::_Any_data::_M_access<main::{lambda()#2}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#2}& std::_Any_data::_M_access<main::{lambda()#2}>()
main::{lambda()#2}& std::_Any_data::_M_access<main::{lambda()#2}>():
.LFB6536:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#3} const& std::forward<main::{lambda()#3} const&>(std::remove_reference<main::{lambda()#3} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3} const& std::forward<main::{lambda()#3} const&>(std::remove_reference<main::{lambda()#3} const&>::type&)
main::{lambda()#3} const& std::forward<main::{lambda()#3} const&>(std::remove_reference<main::{lambda()#3} const&>::type&):
.LFB6537:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_create<main::{lambda()#3} const&>(std::_Any_data&, main::{lambda()#3} const&, std::integral_constant<bool, true>):
.LFB6538:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#3} const& std::forward<main::{lambda()#3} const&>(std::remove_reference<main::{lambda()#3} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#3}& std::_Any_data::_M_access<main::{lambda()#3}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#3}& std::_Any_data::_M_access<main::{lambda()#3}>()
main::{lambda()#3}& std::_Any_data::_M_access<main::{lambda()#3}>():
.LFB6539:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#4} const& std::forward<main::{lambda()#4} const&>(std::remove_reference<main::{lambda()#4} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4} const& std::forward<main::{lambda()#4} const&>(std::remove_reference<main::{lambda()#4} const&>::type&)
main::{lambda()#4} const& std::forward<main::{lambda()#4} const&>(std::remove_reference<main::{lambda()#4} const&>::type&):
.LFB6540:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_create<main::{lambda()#4} const&>(std::_Any_data&, main::{lambda()#4} const&, std::integral_constant<bool, true>):
.LFB6541:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#4} const& std::forward<main::{lambda()#4} const&>(std::remove_reference<main::{lambda()#4} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#4}& std::_Any_data::_M_access<main::{lambda()#4}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#4}& std::_Any_data::_M_access<main::{lambda()#4}>()
main::{lambda()#4}& std::_Any_data::_M_access<main::{lambda()#4}>():
.LFB6542:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#5} const& std::forward<main::{lambda()#5} const&>(std::remove_reference<main::{lambda()#5} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5} const& std::forward<main::{lambda()#5} const&>(std::remove_reference<main::{lambda()#5} const&>::type&)
main::{lambda()#5} const& std::forward<main::{lambda()#5} const&>(std::remove_reference<main::{lambda()#5} const&>::type&):
.LFB6543:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_create<main::{lambda()#5} const&>(std::_Any_data&, main::{lambda()#5} const&, std::integral_constant<bool, true>):
.LFB6544:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#5} const& std::forward<main::{lambda()#5} const&>(std::remove_reference<main::{lambda()#5} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#5}& std::_Any_data::_M_access<main::{lambda()#5}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#5}& std::_Any_data::_M_access<main::{lambda()#5}>()
main::{lambda()#5}& std::_Any_data::_M_access<main::{lambda()#5}>():
.LFB6545:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#6} const& std::forward<main::{lambda()#6} const&>(std::remove_reference<main::{lambda()#6} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6} const& std::forward<main::{lambda()#6} const&>(std::remove_reference<main::{lambda()#6} const&>::type&)
main::{lambda()#6} const& std::forward<main::{lambda()#6} const&>(std::remove_reference<main::{lambda()#6} const&>::type&):
.LFB6546:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_create<main::{lambda()#6} const&>(std::_Any_data&, main::{lambda()#6} const&, std::integral_constant<bool, true>):
.LFB6547:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#6} const& std::forward<main::{lambda()#6} const&>(std::remove_reference<main::{lambda()#6} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#6}& std::_Any_data::_M_access<main::{lambda()#6}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#6}& std::_Any_data::_M_access<main::{lambda()#6}>()
main::{lambda()#6}& std::_Any_data::_M_access<main::{lambda()#6}>():
.LFB6548:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#7} const& std::forward<main::{lambda()#7} const&>(std::remove_reference<main::{lambda()#7} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7} const& std::forward<main::{lambda()#7} const&>(std::remove_reference<main::{lambda()#7} const&>::type&)
main::{lambda()#7} const& std::forward<main::{lambda()#7} const&>(std::remove_reference<main::{lambda()#7} const&>::type&):
.LFB6549:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_create<main::{lambda()#7} const&>(std::_Any_data&, main::{lambda()#7} const&, std::integral_constant<bool, true>):
.LFB6550:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#7} const& std::forward<main::{lambda()#7} const&>(std::remove_reference<main::{lambda()#7} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#7}& std::_Any_data::_M_access<main::{lambda()#7}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#7}& std::_Any_data::_M_access<main::{lambda()#7}>()
main::{lambda()#7}& std::_Any_data::_M_access<main::{lambda()#7}>():
.LFB6551:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#8} const& std::forward<main::{lambda()#8} const&>(std::remove_reference<main::{lambda()#8} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8} const& std::forward<main::{lambda()#8} const&>(std::remove_reference<main::{lambda()#8} const&>::type&)
main::{lambda()#8} const& std::forward<main::{lambda()#8} const&>(std::remove_reference<main::{lambda()#8} const&>::type&):
.LFB6552:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_create<main::{lambda()#8} const&>(std::_Any_data&, main::{lambda()#8} const&, std::integral_constant<bool, true>):
.LFB6553:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#8} const& std::forward<main::{lambda()#8} const&>(std::remove_reference<main::{lambda()#8} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#8}& std::_Any_data::_M_access<main::{lambda()#8}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#8}& std::_Any_data::_M_access<main::{lambda()#8}>()
main::{lambda()#8}& std::_Any_data::_M_access<main::{lambda()#8}>():
.LFB6554:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#9} const& std::forward<main::{lambda()#9} const&>(std::remove_reference<main::{lambda()#9} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9} const& std::forward<main::{lambda()#9} const&>(std::remove_reference<main::{lambda()#9} const&>::type&)
main::{lambda()#9} const& std::forward<main::{lambda()#9} const&>(std::remove_reference<main::{lambda()#9} const&>::type&):
.LFB6555:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_create<main::{lambda()#9} const&>(std::_Any_data&, main::{lambda()#9} const&, std::integral_constant<bool, true>):
.LFB6556:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#9} const& std::forward<main::{lambda()#9} const&>(std::remove_reference<main::{lambda()#9} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#9}& std::_Any_data::_M_access<main::{lambda()#9}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#9}& std::_Any_data::_M_access<main::{lambda()#9}>()
main::{lambda()#9}& std::_Any_data::_M_access<main::{lambda()#9}>():
.LFB6557:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#10} const& std::forward<main::{lambda()#10} const&>(std::remove_reference<main::{lambda()#10} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10} const& std::forward<main::{lambda()#10} const&>(std::remove_reference<main::{lambda()#10} const&>::type&)
main::{lambda()#10} const& std::forward<main::{lambda()#10} const&>(std::remove_reference<main::{lambda()#10} const&>::type&):
.LFB6558:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_create<main::{lambda()#10} const&>(std::_Any_data&, main::{lambda()#10} const&, std::integral_constant<bool, true>):
.LFB6559:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#10} const& std::forward<main::{lambda()#10} const&>(std::remove_reference<main::{lambda()#10} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#10}& std::_Any_data::_M_access<main::{lambda()#10}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#10}& std::_Any_data::_M_access<main::{lambda()#10}>()
main::{lambda()#10}& std::_Any_data::_M_access<main::{lambda()#10}>():
.LFB6560:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#11} const& std::forward<main::{lambda()#11} const&>(std::remove_reference<main::{lambda()#11} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11} const& std::forward<main::{lambda()#11} const&>(std::remove_reference<main::{lambda()#11} const&>::type&)
main::{lambda()#11} const& std::forward<main::{lambda()#11} const&>(std::remove_reference<main::{lambda()#11} const&>::type&):
.LFB6561:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_create<main::{lambda()#11} const&>(std::_Any_data&, main::{lambda()#11} const&, std::integral_constant<bool, true>):
.LFB6562:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#11} const& std::forward<main::{lambda()#11} const&>(std::remove_reference<main::{lambda()#11} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#11}& std::_Any_data::_M_access<main::{lambda()#11}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#11}& std::_Any_data::_M_access<main::{lambda()#11}>()
main::{lambda()#11}& std::_Any_data::_M_access<main::{lambda()#11}>():
.LFB6563:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#12} const& std::forward<main::{lambda()#12} const&>(std::remove_reference<main::{lambda()#12} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12} const& std::forward<main::{lambda()#12} const&>(std::remove_reference<main::{lambda()#12} const&>::type&)
main::{lambda()#12} const& std::forward<main::{lambda()#12} const&>(std::remove_reference<main::{lambda()#12} const&>::type&):
.LFB6564:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_create<main::{lambda()#12} const&>(std::_Any_data&, main::{lambda()#12} const&, std::integral_constant<bool, true>):
.LFB6565:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#12} const& std::forward<main::{lambda()#12} const&>(std::remove_reference<main::{lambda()#12} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#12}& std::_Any_data::_M_access<main::{lambda()#12}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#12}& std::_Any_data::_M_access<main::{lambda()#12}>()
main::{lambda()#12}& std::_Any_data::_M_access<main::{lambda()#12}>():
.LFB6566:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#13} const& std::forward<main::{lambda()#13} const&>(std::remove_reference<main::{lambda()#13} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13} const& std::forward<main::{lambda()#13} const&>(std::remove_reference<main::{lambda()#13} const&>::type&)
main::{lambda()#13} const& std::forward<main::{lambda()#13} const&>(std::remove_reference<main::{lambda()#13} const&>::type&):
.LFB6567:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_create<main::{lambda()#13} const&>(std::_Any_data&, main::{lambda()#13} const&, std::integral_constant<bool, true>):
.LFB6568:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#13} const& std::forward<main::{lambda()#13} const&>(std::remove_reference<main::{lambda()#13} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#13}& std::_Any_data::_M_access<main::{lambda()#13}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#13}& std::_Any_data::_M_access<main::{lambda()#13}>()
main::{lambda()#13}& std::_Any_data::_M_access<main::{lambda()#13}>():
.LFB6569:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#14} const& std::forward<main::{lambda()#14} const&>(std::remove_reference<main::{lambda()#14} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14} const& std::forward<main::{lambda()#14} const&>(std::remove_reference<main::{lambda()#14} const&>::type&)
main::{lambda()#14} const& std::forward<main::{lambda()#14} const&>(std::remove_reference<main::{lambda()#14} const&>::type&):
.LFB6570:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_create<main::{lambda()#14} const&>(std::_Any_data&, main::{lambda()#14} const&, std::integral_constant<bool, true>):
.LFB6571:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#14} const& std::forward<main::{lambda()#14} const&>(std::remove_reference<main::{lambda()#14} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#14}& std::_Any_data::_M_access<main::{lambda()#14}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#14}& std::_Any_data::_M_access<main::{lambda()#14}>()
main::{lambda()#14}& std::_Any_data::_M_access<main::{lambda()#14}>():
.LFB6572:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#15} const& std::forward<main::{lambda()#15} const&>(std::remove_reference<main::{lambda()#15} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15} const& std::forward<main::{lambda()#15} const&>(std::remove_reference<main::{lambda()#15} const&>::type&)
main::{lambda()#15} const& std::forward<main::{lambda()#15} const&>(std::remove_reference<main::{lambda()#15} const&>::type&):
.LFB6573:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_create<main::{lambda()#15} const&>(std::_Any_data&, main::{lambda()#15} const&, std::integral_constant<bool, true>):
.LFB6574:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#15} const& std::forward<main::{lambda()#15} const&>(std::remove_reference<main::{lambda()#15} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#15}& std::_Any_data::_M_access<main::{lambda()#15}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#15}& std::_Any_data::_M_access<main::{lambda()#15}>()
main::{lambda()#15}& std::_Any_data::_M_access<main::{lambda()#15}>():
.LFB6575:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#16} const& std::forward<main::{lambda()#16} const&>(std::remove_reference<main::{lambda()#16} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16} const& std::forward<main::{lambda()#16} const&>(std::remove_reference<main::{lambda()#16} const&>::type&)
main::{lambda()#16} const& std::forward<main::{lambda()#16} const&>(std::remove_reference<main::{lambda()#16} const&>::type&):
.LFB6576:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_create<main::{lambda()#16} const&>(std::_Any_data&, main::{lambda()#16} const&, std::integral_constant<bool, true>):
.LFB6577:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#16} const& std::forward<main::{lambda()#16} const&>(std::remove_reference<main::{lambda()#16} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#16}& std::_Any_data::_M_access<main::{lambda()#16}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#16}& std::_Any_data::_M_access<main::{lambda()#16}>()
main::{lambda()#16}& std::_Any_data::_M_access<main::{lambda()#16}>():
.LFB6578:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#17} const& std::forward<main::{lambda()#17} const&>(std::remove_reference<main::{lambda()#17} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17} const& std::forward<main::{lambda()#17} const&>(std::remove_reference<main::{lambda()#17} const&>::type&)
main::{lambda()#17} const& std::forward<main::{lambda()#17} const&>(std::remove_reference<main::{lambda()#17} const&>::type&):
.LFB6579:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#17}>::_M_create<main::{lambda()#17} const&>(std::_Any_data&, main::{lambda()#17} const&, std::integral_constant<bool, true>):
.LFB6580:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#17} const& std::forward<main::{lambda()#17} const&>(std::remove_reference<main::{lambda()#17} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#17}& std::_Any_data::_M_access<main::{lambda()#17}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#17}& std::_Any_data::_M_access<main::{lambda()#17}>()
main::{lambda()#17}& std::_Any_data::_M_access<main::{lambda()#17}>():
.LFB6581:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#18} const& std::forward<main::{lambda()#18} const&>(std::remove_reference<main::{lambda()#18} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18} const& std::forward<main::{lambda()#18} const&>(std::remove_reference<main::{lambda()#18} const&>::type&)
main::{lambda()#18} const& std::forward<main::{lambda()#18} const&>(std::remove_reference<main::{lambda()#18} const&>::type&):
.LFB6582:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#18}>::_M_create<main::{lambda()#18} const&>(std::_Any_data&, main::{lambda()#18} const&, std::integral_constant<bool, true>):
.LFB6583:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#18} const& std::forward<main::{lambda()#18} const&>(std::remove_reference<main::{lambda()#18} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#18}& std::_Any_data::_M_access<main::{lambda()#18}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#18}& std::_Any_data::_M_access<main::{lambda()#18}>()
main::{lambda()#18}& std::_Any_data::_M_access<main::{lambda()#18}>():
.LFB6584:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#19} const& std::forward<main::{lambda()#19} const&>(std::remove_reference<main::{lambda()#19} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19} const& std::forward<main::{lambda()#19} const&>(std::remove_reference<main::{lambda()#19} const&>::type&)
main::{lambda()#19} const& std::forward<main::{lambda()#19} const&>(std::remove_reference<main::{lambda()#19} const&>::type&):
.LFB6585:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#19}>::_M_create<main::{lambda()#19} const&>(std::_Any_data&, main::{lambda()#19} const&, std::integral_constant<bool, true>):
.LFB6586:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#19} const& std::forward<main::{lambda()#19} const&>(std::remove_reference<main::{lambda()#19} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#19}& std::_Any_data::_M_access<main::{lambda()#19}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#19}& std::_Any_data::_M_access<main::{lambda()#19}>()
main::{lambda()#19}& std::_Any_data::_M_access<main::{lambda()#19}>():
.LFB6587:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#20} const& std::forward<main::{lambda()#20} const&>(std::remove_reference<main::{lambda()#20} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20} const& std::forward<main::{lambda()#20} const&>(std::remove_reference<main::{lambda()#20} const&>::type&)
main::{lambda()#20} const& std::forward<main::{lambda()#20} const&>(std::remove_reference<main::{lambda()#20} const&>::type&):
.LFB6588:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#20}>::_M_create<main::{lambda()#20} const&>(std::_Any_data&, main::{lambda()#20} const&, std::integral_constant<bool, true>):
.LFB6589:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#20} const& std::forward<main::{lambda()#20} const&>(std::remove_reference<main::{lambda()#20} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#20}& std::_Any_data::_M_access<main::{lambda()#20}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#20}& std::_Any_data::_M_access<main::{lambda()#20}>()
main::{lambda()#20}& std::_Any_data::_M_access<main::{lambda()#20}>():
.LFB6590:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#21} const& std::forward<main::{lambda()#21} const&>(std::remove_reference<main::{lambda()#21} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21} const& std::forward<main::{lambda()#21} const&>(std::remove_reference<main::{lambda()#21} const&>::type&)
main::{lambda()#21} const& std::forward<main::{lambda()#21} const&>(std::remove_reference<main::{lambda()#21} const&>::type&):
.LFB6591:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#21}>::_M_create<main::{lambda()#21} const&>(std::_Any_data&, main::{lambda()#21} const&, std::integral_constant<bool, true>):
.LFB6592:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#21} const& std::forward<main::{lambda()#21} const&>(std::remove_reference<main::{lambda()#21} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#21}& std::_Any_data::_M_access<main::{lambda()#21}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#21}& std::_Any_data::_M_access<main::{lambda()#21}>()
main::{lambda()#21}& std::_Any_data::_M_access<main::{lambda()#21}>():
.LFB6593:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#22} const& std::forward<main::{lambda()#22} const&>(std::remove_reference<main::{lambda()#22} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22} const& std::forward<main::{lambda()#22} const&>(std::remove_reference<main::{lambda()#22} const&>::type&)
main::{lambda()#22} const& std::forward<main::{lambda()#22} const&>(std::remove_reference<main::{lambda()#22} const&>::type&):
.LFB6594:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#22}>::_M_create<main::{lambda()#22} const&>(std::_Any_data&, main::{lambda()#22} const&, std::integral_constant<bool, true>):
.LFB6595:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#22} const& std::forward<main::{lambda()#22} const&>(std::remove_reference<main::{lambda()#22} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#22}& std::_Any_data::_M_access<main::{lambda()#22}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#22}& std::_Any_data::_M_access<main::{lambda()#22}>()
main::{lambda()#22}& std::_Any_data::_M_access<main::{lambda()#22}>():
.LFB6596:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#23} const& std::forward<main::{lambda()#23} const&>(std::remove_reference<main::{lambda()#23} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23} const& std::forward<main::{lambda()#23} const&>(std::remove_reference<main::{lambda()#23} const&>::type&)
main::{lambda()#23} const& std::forward<main::{lambda()#23} const&>(std::remove_reference<main::{lambda()#23} const&>::type&):
.LFB6597:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#23}>::_M_create<main::{lambda()#23} const&>(std::_Any_data&, main::{lambda()#23} const&, std::integral_constant<bool, true>):
.LFB6598:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#23} const& std::forward<main::{lambda()#23} const&>(std::remove_reference<main::{lambda()#23} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#23}& std::_Any_data::_M_access<main::{lambda()#23}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#23}& std::_Any_data::_M_access<main::{lambda()#23}>()
main::{lambda()#23}& std::_Any_data::_M_access<main::{lambda()#23}>():
.LFB6599:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#24} const& std::forward<main::{lambda()#24} const&>(std::remove_reference<main::{lambda()#24} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24} const& std::forward<main::{lambda()#24} const&>(std::remove_reference<main::{lambda()#24} const&>::type&)
main::{lambda()#24} const& std::forward<main::{lambda()#24} const&>(std::remove_reference<main::{lambda()#24} const&>::type&):
.LFB6600:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#24}>::_M_create<main::{lambda()#24} const&>(std::_Any_data&, main::{lambda()#24} const&, std::integral_constant<bool, true>):
.LFB6601:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#24} const& std::forward<main::{lambda()#24} const&>(std::remove_reference<main::{lambda()#24} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#24}& std::_Any_data::_M_access<main::{lambda()#24}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#24}& std::_Any_data::_M_access<main::{lambda()#24}>()
main::{lambda()#24}& std::_Any_data::_M_access<main::{lambda()#24}>():
.LFB6602:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#25} const& std::forward<main::{lambda()#25} const&>(std::remove_reference<main::{lambda()#25} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25} const& std::forward<main::{lambda()#25} const&>(std::remove_reference<main::{lambda()#25} const&>::type&)
main::{lambda()#25} const& std::forward<main::{lambda()#25} const&>(std::remove_reference<main::{lambda()#25} const&>::type&):
.LFB6603:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#25}>::_M_create<main::{lambda()#25} const&>(std::_Any_data&, main::{lambda()#25} const&, std::integral_constant<bool, true>):
.LFB6604:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#25} const& std::forward<main::{lambda()#25} const&>(std::remove_reference<main::{lambda()#25} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#25}& std::_Any_data::_M_access<main::{lambda()#25}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#25}& std::_Any_data::_M_access<main::{lambda()#25}>()
main::{lambda()#25}& std::_Any_data::_M_access<main::{lambda()#25}>():
.LFB6605:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#26} const& std::forward<main::{lambda()#26} const&>(std::remove_reference<main::{lambda()#26} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26} const& std::forward<main::{lambda()#26} const&>(std::remove_reference<main::{lambda()#26} const&>::type&)
main::{lambda()#26} const& std::forward<main::{lambda()#26} const&>(std::remove_reference<main::{lambda()#26} const&>::type&):
.LFB6606:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#26}>::_M_create<main::{lambda()#26} const&>(std::_Any_data&, main::{lambda()#26} const&, std::integral_constant<bool, true>):
.LFB6607:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#26} const& std::forward<main::{lambda()#26} const&>(std::remove_reference<main::{lambda()#26} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#26}& std::_Any_data::_M_access<main::{lambda()#26}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#26}& std::_Any_data::_M_access<main::{lambda()#26}>()
main::{lambda()#26}& std::_Any_data::_M_access<main::{lambda()#26}>():
.LFB6608:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#27} const& std::forward<main::{lambda()#27} const&>(std::remove_reference<main::{lambda()#27} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27} const& std::forward<main::{lambda()#27} const&>(std::remove_reference<main::{lambda()#27} const&>::type&)
main::{lambda()#27} const& std::forward<main::{lambda()#27} const&>(std::remove_reference<main::{lambda()#27} const&>::type&):
.LFB6609:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#27}>::_M_create<main::{lambda()#27} const&>(std::_Any_data&, main::{lambda()#27} const&, std::integral_constant<bool, true>):
.LFB6610:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#27} const& std::forward<main::{lambda()#27} const&>(std::remove_reference<main::{lambda()#27} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#27}& std::_Any_data::_M_access<main::{lambda()#27}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#27}& std::_Any_data::_M_access<main::{lambda()#27}>()
main::{lambda()#27}& std::_Any_data::_M_access<main::{lambda()#27}>():
.LFB6611:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#28} const& std::forward<main::{lambda()#28} const&>(std::remove_reference<main::{lambda()#28} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28} const& std::forward<main::{lambda()#28} const&>(std::remove_reference<main::{lambda()#28} const&>::type&)
main::{lambda()#28} const& std::forward<main::{lambda()#28} const&>(std::remove_reference<main::{lambda()#28} const&>::type&):
.LFB6612:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#28}>::_M_create<main::{lambda()#28} const&>(std::_Any_data&, main::{lambda()#28} const&, std::integral_constant<bool, true>):
.LFB6613:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#28} const& std::forward<main::{lambda()#28} const&>(std::remove_reference<main::{lambda()#28} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#28}& std::_Any_data::_M_access<main::{lambda()#28}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#28}& std::_Any_data::_M_access<main::{lambda()#28}>()
main::{lambda()#28}& std::_Any_data::_M_access<main::{lambda()#28}>():
.LFB6614:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#29} const& std::forward<main::{lambda()#29} const&>(std::remove_reference<main::{lambda()#29} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29} const& std::forward<main::{lambda()#29} const&>(std::remove_reference<main::{lambda()#29} const&>::type&)
main::{lambda()#29} const& std::forward<main::{lambda()#29} const&>(std::remove_reference<main::{lambda()#29} const&>::type&):
.LFB6615:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#29}>::_M_create<main::{lambda()#29} const&>(std::_Any_data&, main::{lambda()#29} const&, std::integral_constant<bool, true>):
.LFB6616:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#29} const& std::forward<main::{lambda()#29} const&>(std::remove_reference<main::{lambda()#29} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#29}& std::_Any_data::_M_access<main::{lambda()#29}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#29}& std::_Any_data::_M_access<main::{lambda()#29}>()
main::{lambda()#29}& std::_Any_data::_M_access<main::{lambda()#29}>():
.LFB6617:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#30} const& std::forward<main::{lambda()#30} const&>(std::remove_reference<main::{lambda()#30} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30} const& std::forward<main::{lambda()#30} const&>(std::remove_reference<main::{lambda()#30} const&>::type&)
main::{lambda()#30} const& std::forward<main::{lambda()#30} const&>(std::remove_reference<main::{lambda()#30} const&>::type&):
.LFB6618:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#30}>::_M_create<main::{lambda()#30} const&>(std::_Any_data&, main::{lambda()#30} const&, std::integral_constant<bool, true>):
.LFB6619:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#30} const& std::forward<main::{lambda()#30} const&>(std::remove_reference<main::{lambda()#30} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#30}& std::_Any_data::_M_access<main::{lambda()#30}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#30}& std::_Any_data::_M_access<main::{lambda()#30}>()
main::{lambda()#30}& std::_Any_data::_M_access<main::{lambda()#30}>():
.LFB6620:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#31} const& std::forward<main::{lambda()#31} const&>(std::remove_reference<main::{lambda()#31} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31} const& std::forward<main::{lambda()#31} const&>(std::remove_reference<main::{lambda()#31} const&>::type&)
main::{lambda()#31} const& std::forward<main::{lambda()#31} const&>(std::remove_reference<main::{lambda()#31} const&>::type&):
.LFB6621:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#31}>::_M_create<main::{lambda()#31} const&>(std::_Any_data&, main::{lambda()#31} const&, std::integral_constant<bool, true>):
.LFB6622:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#31} const& std::forward<main::{lambda()#31} const&>(std::remove_reference<main::{lambda()#31} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#31}& std::_Any_data::_M_access<main::{lambda()#31}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#31}& std::_Any_data::_M_access<main::{lambda()#31}>()
main::{lambda()#31}& std::_Any_data::_M_access<main::{lambda()#31}>():
.LFB6623:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#32} const& std::forward<main::{lambda()#32} const&>(std::remove_reference<main::{lambda()#32} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32} const& std::forward<main::{lambda()#32} const&>(std::remove_reference<main::{lambda()#32} const&>::type&)
main::{lambda()#32} const& std::forward<main::{lambda()#32} const&>(std::remove_reference<main::{lambda()#32} const&>::type&):
.LFB6624:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#32}>::_M_create<main::{lambda()#32} const&>(std::_Any_data&, main::{lambda()#32} const&, std::integral_constant<bool, true>):
.LFB6625:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#32} const& std::forward<main::{lambda()#32} const&>(std::remove_reference<main::{lambda()#32} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#32}& std::_Any_data::_M_access<main::{lambda()#32}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#32}& std::_Any_data::_M_access<main::{lambda()#32}>()
main::{lambda()#32}& std::_Any_data::_M_access<main::{lambda()#32}>():
.LFB6626:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#33} const& std::forward<main::{lambda()#33} const&>(std::remove_reference<main::{lambda()#33} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33} const& std::forward<main::{lambda()#33} const&>(std::remove_reference<main::{lambda()#33} const&>::type&)
main::{lambda()#33} const& std::forward<main::{lambda()#33} const&>(std::remove_reference<main::{lambda()#33} const&>::type&):
.LFB6627:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#33}>::_M_create<main::{lambda()#33} const&>(std::_Any_data&, main::{lambda()#33} const&, std::integral_constant<bool, true>):
.LFB6628:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#33} const& std::forward<main::{lambda()#33} const&>(std::remove_reference<main::{lambda()#33} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#33}& std::_Any_data::_M_access<main::{lambda()#33}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#33}& std::_Any_data::_M_access<main::{lambda()#33}>()
main::{lambda()#33}& std::_Any_data::_M_access<main::{lambda()#33}>():
.LFB6629:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#34} const& std::forward<main::{lambda()#34} const&>(std::remove_reference<main::{lambda()#34} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34} const& std::forward<main::{lambda()#34} const&>(std::remove_reference<main::{lambda()#34} const&>::type&)
main::{lambda()#34} const& std::forward<main::{lambda()#34} const&>(std::remove_reference<main::{lambda()#34} const&>::type&):
.LFB6630:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#34}>::_M_create<main::{lambda()#34} const&>(std::_Any_data&, main::{lambda()#34} const&, std::integral_constant<bool, true>):
.LFB6631:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#34} const& std::forward<main::{lambda()#34} const&>(std::remove_reference<main::{lambda()#34} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#34}& std::_Any_data::_M_access<main::{lambda()#34}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#34}& std::_Any_data::_M_access<main::{lambda()#34}>()
main::{lambda()#34}& std::_Any_data::_M_access<main::{lambda()#34}>():
.LFB6632:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#35} const& std::forward<main::{lambda()#35} const&>(std::remove_reference<main::{lambda()#35} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35} const& std::forward<main::{lambda()#35} const&>(std::remove_reference<main::{lambda()#35} const&>::type&)
main::{lambda()#35} const& std::forward<main::{lambda()#35} const&>(std::remove_reference<main::{lambda()#35} const&>::type&):
.LFB6633:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#35}>::_M_create<main::{lambda()#35} const&>(std::_Any_data&, main::{lambda()#35} const&, std::integral_constant<bool, true>):
.LFB6634:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#35} const& std::forward<main::{lambda()#35} const&>(std::remove_reference<main::{lambda()#35} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#35}& std::_Any_data::_M_access<main::{lambda()#35}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#35}& std::_Any_data::_M_access<main::{lambda()#35}>()
main::{lambda()#35}& std::_Any_data::_M_access<main::{lambda()#35}>():
.LFB6635:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#36} const& std::forward<main::{lambda()#36} const&>(std::remove_reference<main::{lambda()#36} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36} const& std::forward<main::{lambda()#36} const&>(std::remove_reference<main::{lambda()#36} const&>::type&)
main::{lambda()#36} const& std::forward<main::{lambda()#36} const&>(std::remove_reference<main::{lambda()#36} const&>::type&):
.LFB6636:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#36}>::_M_create<main::{lambda()#36} const&>(std::_Any_data&, main::{lambda()#36} const&, std::integral_constant<bool, true>):
.LFB6637:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#36} const& std::forward<main::{lambda()#36} const&>(std::remove_reference<main::{lambda()#36} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#36}& std::_Any_data::_M_access<main::{lambda()#36}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#36}& std::_Any_data::_M_access<main::{lambda()#36}>()
main::{lambda()#36}& std::_Any_data::_M_access<main::{lambda()#36}>():
.LFB6638:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#37} const& std::forward<main::{lambda()#37} const&>(std::remove_reference<main::{lambda()#37} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37} const& std::forward<main::{lambda()#37} const&>(std::remove_reference<main::{lambda()#37} const&>::type&)
main::{lambda()#37} const& std::forward<main::{lambda()#37} const&>(std::remove_reference<main::{lambda()#37} const&>::type&):
.LFB6639:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#37}>::_M_create<main::{lambda()#37} const&>(std::_Any_data&, main::{lambda()#37} const&, std::integral_constant<bool, true>):
.LFB6640:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#37} const& std::forward<main::{lambda()#37} const&>(std::remove_reference<main::{lambda()#37} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#37}& std::_Any_data::_M_access<main::{lambda()#37}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#37}& std::_Any_data::_M_access<main::{lambda()#37}>()
main::{lambda()#37}& std::_Any_data::_M_access<main::{lambda()#37}>():
.LFB6641:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#38} const& std::forward<main::{lambda()#38} const&>(std::remove_reference<main::{lambda()#38} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38} const& std::forward<main::{lambda()#38} const&>(std::remove_reference<main::{lambda()#38} const&>::type&)
main::{lambda()#38} const& std::forward<main::{lambda()#38} const&>(std::remove_reference<main::{lambda()#38} const&>::type&):
.LFB6642:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#38}>::_M_create<main::{lambda()#38} const&>(std::_Any_data&, main::{lambda()#38} const&, std::integral_constant<bool, true>):
.LFB6643:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#38} const& std::forward<main::{lambda()#38} const&>(std::remove_reference<main::{lambda()#38} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#38}& std::_Any_data::_M_access<main::{lambda()#38}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#38}& std::_Any_data::_M_access<main::{lambda()#38}>()
main::{lambda()#38}& std::_Any_data::_M_access<main::{lambda()#38}>():
.LFB6644:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#39} const& std::forward<main::{lambda()#39} const&>(std::remove_reference<main::{lambda()#39} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39} const& std::forward<main::{lambda()#39} const&>(std::remove_reference<main::{lambda()#39} const&>::type&)
main::{lambda()#39} const& std::forward<main::{lambda()#39} const&>(std::remove_reference<main::{lambda()#39} const&>::type&):
.LFB6645:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#39}>::_M_create<main::{lambda()#39} const&>(std::_Any_data&, main::{lambda()#39} const&, std::integral_constant<bool, true>):
.LFB6646:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#39} const& std::forward<main::{lambda()#39} const&>(std::remove_reference<main::{lambda()#39} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#39}& std::_Any_data::_M_access<main::{lambda()#39}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#39}& std::_Any_data::_M_access<main::{lambda()#39}>()
main::{lambda()#39}& std::_Any_data::_M_access<main::{lambda()#39}>():
.LFB6647:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#40} const& std::forward<main::{lambda()#40} const&>(std::remove_reference<main::{lambda()#40} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40} const& std::forward<main::{lambda()#40} const&>(std::remove_reference<main::{lambda()#40} const&>::type&)
main::{lambda()#40} const& std::forward<main::{lambda()#40} const&>(std::remove_reference<main::{lambda()#40} const&>::type&):
.LFB6648:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#40}>::_M_create<main::{lambda()#40} const&>(std::_Any_data&, main::{lambda()#40} const&, std::integral_constant<bool, true>):
.LFB6649:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#40} const& std::forward<main::{lambda()#40} const&>(std::remove_reference<main::{lambda()#40} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#40}& std::_Any_data::_M_access<main::{lambda()#40}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#40}& std::_Any_data::_M_access<main::{lambda()#40}>()
main::{lambda()#40}& std::_Any_data::_M_access<main::{lambda()#40}>():
.LFB6650:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#41} const& std::forward<main::{lambda()#41} const&>(std::remove_reference<main::{lambda()#41} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41} const& std::forward<main::{lambda()#41} const&>(std::remove_reference<main::{lambda()#41} const&>::type&)
main::{lambda()#41} const& std::forward<main::{lambda()#41} const&>(std::remove_reference<main::{lambda()#41} const&>::type&):
.LFB6651:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#41}>::_M_create<main::{lambda()#41} const&>(std::_Any_data&, main::{lambda()#41} const&, std::integral_constant<bool, true>):
.LFB6652:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#41} const& std::forward<main::{lambda()#41} const&>(std::remove_reference<main::{lambda()#41} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#41}& std::_Any_data::_M_access<main::{lambda()#41}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#41}& std::_Any_data::_M_access<main::{lambda()#41}>()
main::{lambda()#41}& std::_Any_data::_M_access<main::{lambda()#41}>():
.LFB6653:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#42} const& std::forward<main::{lambda()#42} const&>(std::remove_reference<main::{lambda()#42} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42} const& std::forward<main::{lambda()#42} const&>(std::remove_reference<main::{lambda()#42} const&>::type&)
main::{lambda()#42} const& std::forward<main::{lambda()#42} const&>(std::remove_reference<main::{lambda()#42} const&>::type&):
.LFB6654:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#42}>::_M_create<main::{lambda()#42} const&>(std::_Any_data&, main::{lambda()#42} const&, std::integral_constant<bool, true>):
.LFB6655:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#42} const& std::forward<main::{lambda()#42} const&>(std::remove_reference<main::{lambda()#42} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#42}& std::_Any_data::_M_access<main::{lambda()#42}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#42}& std::_Any_data::_M_access<main::{lambda()#42}>()
main::{lambda()#42}& std::_Any_data::_M_access<main::{lambda()#42}>():
.LFB6656:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#43} const& std::forward<main::{lambda()#43} const&>(std::remove_reference<main::{lambda()#43} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43} const& std::forward<main::{lambda()#43} const&>(std::remove_reference<main::{lambda()#43} const&>::type&)
main::{lambda()#43} const& std::forward<main::{lambda()#43} const&>(std::remove_reference<main::{lambda()#43} const&>::type&):
.LFB6657:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#43}>::_M_create<main::{lambda()#43} const&>(std::_Any_data&, main::{lambda()#43} const&, std::integral_constant<bool, true>):
.LFB6658:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#43} const& std::forward<main::{lambda()#43} const&>(std::remove_reference<main::{lambda()#43} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#43}& std::_Any_data::_M_access<main::{lambda()#43}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#43}& std::_Any_data::_M_access<main::{lambda()#43}>()
main::{lambda()#43}& std::_Any_data::_M_access<main::{lambda()#43}>():
.LFB6659:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSD_,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator(std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator(std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator(std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__new_allocator(std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&):
.LFB6661:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt14_List_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EPNSt8__detail15_List_node_baseE,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_iterator(std::__detail::_List_node_base*)
	.def	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_iterator(std::__detail::_List_node_base*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_iterator(std::__detail::_List_node_base*)
std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_iterator(std::__detail::_List_node_base*):
.LFB6665:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	24(%rbp), %rdx
	movq	%rdx, (%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE14_M_create_nodeIJRKSA_EEEPSt10_List_nodeISA_EDpOT_,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_create_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_create_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_create_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::__cxx11::list<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_create_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB6666:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$72, %rsp
	.seh_stackalloc	72
	leaq	64(%rsp), %rbp
	.seh_setframe	%rbp, 64
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
.LEHB171:
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_node()
.LEHE171:
	movq	%rax, -8(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_Node_allocator()
	movq	%rax, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rdx
	leaq	-32(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::__allocated_ptr(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	movq	%rax, %rbx
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr()
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rbx, %r8
	movq	%rax, %rcx
.LEHB172:
	call	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
.LEHE172:
	leaq	-32(%rbp), %rax
	movl	$0, %edx
	movq	%rax, %rcx
	call	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(decltype(nullptr))
	movq	-8(%rbp), %rbx
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr()
	movq	%rbx, %rax
	jmp	.L4138
.L4137:
	movq	%rax, %rbx
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB173:
	call	_Unwind_Resume
.LEHE173:
.L4138:
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6666:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6666-.LLSDACSB6666
.LLSDACSB6666:
	.uleb128 .LEHB171-.LFB6666
	.uleb128 .LEHE171-.LEHB171
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB172-.LFB6666
	.uleb128 .LEHE172-.LEHB172
	.uleb128 .L4137-.LFB6666
	.uleb128 0
	.uleb128 .LEHB173-.LFB6666
	.uleb128 .LEHE173-.LEHB173
	.uleb128 0
	.uleb128 0
.LLSDACSE6666:
	.section	.text$_ZNSt7__cxx114listISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE14_M_create_nodeIJRKSA_EEEPSt10_List_nodeISA_EDpOT_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE11_M_inc_sizeEy,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_inc_size(unsigned long long)
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_inc_size(unsigned long long);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_inc_size(unsigned long long)
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_inc_size(unsigned long long):
.LFB6667:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	16(%rax), %rdx
	movq	24(%rbp), %rax
	addq	%rax, %rdx
	movq	16(%rbp), %rax
	movq	%rdx, 16(%rax)
	nop
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt14_List_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmmEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator--()
	.def	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator--();	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator--()
std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator--():
.LFB6668:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	8(%rax), %rdx
	movq	16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt14_List_iteratorISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
	.def	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const
std::_List_iterator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator*() const:
.LFB6669:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rcx
	call	std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_valptr()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx16__aligned_membufISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_addrEv,"x"
	.linkonce discard
	.align 2
	.globl	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr()
	.def	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr();	.scl	2;	.type	32;	.endef
	.seh_proc	__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr()
__gnu_cxx::__aligned_membuf<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_addr():
.LFB6670:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateEPSC_y,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::deallocate(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::deallocate(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::deallocate(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::deallocate(std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long):
.LFB6671:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	32(%rbp), %rdx
	movq	%rdx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	salq	$4, %rax
	movq	%rax, %rdx
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	operator delete(void*, unsigned long long)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.text
	.def	main::{lambda()#44} const& std::forward<main::{lambda()#44} const&>(std::remove_reference<main::{lambda()#44} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44} const& std::forward<main::{lambda()#44} const&>(std::remove_reference<main::{lambda()#44} const&>::type&)
main::{lambda()#44} const& std::forward<main::{lambda()#44} const&>(std::remove_reference<main::{lambda()#44} const&>::type&):
.LFB6672:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#44}>::_M_create<main::{lambda()#44} const&>(std::_Any_data&, main::{lambda()#44} const&, std::integral_constant<bool, true>):
.LFB6673:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#44} const& std::forward<main::{lambda()#44} const&>(std::remove_reference<main::{lambda()#44} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#44}& std::_Any_data::_M_access<main::{lambda()#44}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#44}& std::_Any_data::_M_access<main::{lambda()#44}>()
main::{lambda()#44}& std::_Any_data::_M_access<main::{lambda()#44}>():
.LFB6674:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#45} const& std::forward<main::{lambda()#45} const&>(std::remove_reference<main::{lambda()#45} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45} const& std::forward<main::{lambda()#45} const&>(std::remove_reference<main::{lambda()#45} const&>::type&)
main::{lambda()#45} const& std::forward<main::{lambda()#45} const&>(std::remove_reference<main::{lambda()#45} const&>::type&):
.LFB6675:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#45}>::_M_create<main::{lambda()#45} const&>(std::_Any_data&, main::{lambda()#45} const&, std::integral_constant<bool, true>):
.LFB6676:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#45} const& std::forward<main::{lambda()#45} const&>(std::remove_reference<main::{lambda()#45} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#45}& std::_Any_data::_M_access<main::{lambda()#45}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#45}& std::_Any_data::_M_access<main::{lambda()#45}>()
main::{lambda()#45}& std::_Any_data::_M_access<main::{lambda()#45}>():
.LFB6677:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#46} const& std::forward<main::{lambda()#46} const&>(std::remove_reference<main::{lambda()#46} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46} const& std::forward<main::{lambda()#46} const&>(std::remove_reference<main::{lambda()#46} const&>::type&)
main::{lambda()#46} const& std::forward<main::{lambda()#46} const&>(std::remove_reference<main::{lambda()#46} const&>::type&):
.LFB6678:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#46}>::_M_create<main::{lambda()#46} const&>(std::_Any_data&, main::{lambda()#46} const&, std::integral_constant<bool, true>):
.LFB6679:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#46} const& std::forward<main::{lambda()#46} const&>(std::remove_reference<main::{lambda()#46} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#46}& std::_Any_data::_M_access<main::{lambda()#46}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#46}& std::_Any_data::_M_access<main::{lambda()#46}>()
main::{lambda()#46}& std::_Any_data::_M_access<main::{lambda()#46}>():
.LFB6680:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#47} const& std::forward<main::{lambda()#47} const&>(std::remove_reference<main::{lambda()#47} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47} const& std::forward<main::{lambda()#47} const&>(std::remove_reference<main::{lambda()#47} const&>::type&)
main::{lambda()#47} const& std::forward<main::{lambda()#47} const&>(std::remove_reference<main::{lambda()#47} const&>::type&):
.LFB6681:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#47}>::_M_create<main::{lambda()#47} const&>(std::_Any_data&, main::{lambda()#47} const&, std::integral_constant<bool, true>):
.LFB6682:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#47} const& std::forward<main::{lambda()#47} const&>(std::remove_reference<main::{lambda()#47} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#47}& std::_Any_data::_M_access<main::{lambda()#47}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#47}& std::_Any_data::_M_access<main::{lambda()#47}>()
main::{lambda()#47}& std::_Any_data::_M_access<main::{lambda()#47}>():
.LFB6683:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#48} const& std::forward<main::{lambda()#48} const&>(std::remove_reference<main::{lambda()#48} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48} const& std::forward<main::{lambda()#48} const&>(std::remove_reference<main::{lambda()#48} const&>::type&)
main::{lambda()#48} const& std::forward<main::{lambda()#48} const&>(std::remove_reference<main::{lambda()#48} const&>::type&):
.LFB6684:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#48}>::_M_create<main::{lambda()#48} const&>(std::_Any_data&, main::{lambda()#48} const&, std::integral_constant<bool, true>):
.LFB6685:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#48} const& std::forward<main::{lambda()#48} const&>(std::remove_reference<main::{lambda()#48} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#48}& std::_Any_data::_M_access<main::{lambda()#48}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#48}& std::_Any_data::_M_access<main::{lambda()#48}>()
main::{lambda()#48}& std::_Any_data::_M_access<main::{lambda()#48}>():
.LFB6686:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#49} const& std::forward<main::{lambda()#49} const&>(std::remove_reference<main::{lambda()#49} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49} const& std::forward<main::{lambda()#49} const&>(std::remove_reference<main::{lambda()#49} const&>::type&)
main::{lambda()#49} const& std::forward<main::{lambda()#49} const&>(std::remove_reference<main::{lambda()#49} const&>::type&):
.LFB6687:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#49}>::_M_create<main::{lambda()#49} const&>(std::_Any_data&, main::{lambda()#49} const&, std::integral_constant<bool, true>):
.LFB6688:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#49} const& std::forward<main::{lambda()#49} const&>(std::remove_reference<main::{lambda()#49} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#49}& std::_Any_data::_M_access<main::{lambda()#49}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#49}& std::_Any_data::_M_access<main::{lambda()#49}>()
main::{lambda()#49}& std::_Any_data::_M_access<main::{lambda()#49}>():
.LFB6689:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#50} const& std::forward<main::{lambda()#50} const&>(std::remove_reference<main::{lambda()#50} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50} const& std::forward<main::{lambda()#50} const&>(std::remove_reference<main::{lambda()#50} const&>::type&)
main::{lambda()#50} const& std::forward<main::{lambda()#50} const&>(std::remove_reference<main::{lambda()#50} const&>::type&):
.LFB6690:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#50}>::_M_create<main::{lambda()#50} const&>(std::_Any_data&, main::{lambda()#50} const&, std::integral_constant<bool, true>):
.LFB6691:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#50} const& std::forward<main::{lambda()#50} const&>(std::remove_reference<main::{lambda()#50} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#50}& std::_Any_data::_M_access<main::{lambda()#50}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#50}& std::_Any_data::_M_access<main::{lambda()#50}>()
main::{lambda()#50}& std::_Any_data::_M_access<main::{lambda()#50}>():
.LFB6692:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#51} const& std::forward<main::{lambda()#51} const&>(std::remove_reference<main::{lambda()#51} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51} const& std::forward<main::{lambda()#51} const&>(std::remove_reference<main::{lambda()#51} const&>::type&)
main::{lambda()#51} const& std::forward<main::{lambda()#51} const&>(std::remove_reference<main::{lambda()#51} const&>::type&):
.LFB6693:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#51}>::_M_create<main::{lambda()#51} const&>(std::_Any_data&, main::{lambda()#51} const&, std::integral_constant<bool, true>):
.LFB6694:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#51} const& std::forward<main::{lambda()#51} const&>(std::remove_reference<main::{lambda()#51} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#51}& std::_Any_data::_M_access<main::{lambda()#51}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#51}& std::_Any_data::_M_access<main::{lambda()#51}>()
main::{lambda()#51}& std::_Any_data::_M_access<main::{lambda()#51}>():
.LFB6695:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#52} const& std::forward<main::{lambda()#52} const&>(std::remove_reference<main::{lambda()#52} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52} const& std::forward<main::{lambda()#52} const&>(std::remove_reference<main::{lambda()#52} const&>::type&)
main::{lambda()#52} const& std::forward<main::{lambda()#52} const&>(std::remove_reference<main::{lambda()#52} const&>::type&):
.LFB6696:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#52}>::_M_create<main::{lambda()#52} const&>(std::_Any_data&, main::{lambda()#52} const&, std::integral_constant<bool, true>):
.LFB6697:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#52} const& std::forward<main::{lambda()#52} const&>(std::remove_reference<main::{lambda()#52} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#52}& std::_Any_data::_M_access<main::{lambda()#52}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#52}& std::_Any_data::_M_access<main::{lambda()#52}>()
main::{lambda()#52}& std::_Any_data::_M_access<main::{lambda()#52}>():
.LFB6698:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#53} const& std::forward<main::{lambda()#53} const&>(std::remove_reference<main::{lambda()#53} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53} const& std::forward<main::{lambda()#53} const&>(std::remove_reference<main::{lambda()#53} const&>::type&)
main::{lambda()#53} const& std::forward<main::{lambda()#53} const&>(std::remove_reference<main::{lambda()#53} const&>::type&):
.LFB6699:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#53}>::_M_create<main::{lambda()#53} const&>(std::_Any_data&, main::{lambda()#53} const&, std::integral_constant<bool, true>):
.LFB6700:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#53} const& std::forward<main::{lambda()#53} const&>(std::remove_reference<main::{lambda()#53} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#53}& std::_Any_data::_M_access<main::{lambda()#53}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#53}& std::_Any_data::_M_access<main::{lambda()#53}>()
main::{lambda()#53}& std::_Any_data::_M_access<main::{lambda()#53}>():
.LFB6701:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#54} const& std::forward<main::{lambda()#54} const&>(std::remove_reference<main::{lambda()#54} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54} const& std::forward<main::{lambda()#54} const&>(std::remove_reference<main::{lambda()#54} const&>::type&)
main::{lambda()#54} const& std::forward<main::{lambda()#54} const&>(std::remove_reference<main::{lambda()#54} const&>::type&):
.LFB6702:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#54}>::_M_create<main::{lambda()#54} const&>(std::_Any_data&, main::{lambda()#54} const&, std::integral_constant<bool, true>):
.LFB6703:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#54} const& std::forward<main::{lambda()#54} const&>(std::remove_reference<main::{lambda()#54} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#54}& std::_Any_data::_M_access<main::{lambda()#54}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#54}& std::_Any_data::_M_access<main::{lambda()#54}>()
main::{lambda()#54}& std::_Any_data::_M_access<main::{lambda()#54}>():
.LFB6704:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#55} const& std::forward<main::{lambda()#55} const&>(std::remove_reference<main::{lambda()#55} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55} const& std::forward<main::{lambda()#55} const&>(std::remove_reference<main::{lambda()#55} const&>::type&)
main::{lambda()#55} const& std::forward<main::{lambda()#55} const&>(std::remove_reference<main::{lambda()#55} const&>::type&):
.LFB6705:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#55}>::_M_create<main::{lambda()#55} const&>(std::_Any_data&, main::{lambda()#55} const&, std::integral_constant<bool, true>):
.LFB6706:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#55} const& std::forward<main::{lambda()#55} const&>(std::remove_reference<main::{lambda()#55} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#55}& std::_Any_data::_M_access<main::{lambda()#55}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#55}& std::_Any_data::_M_access<main::{lambda()#55}>()
main::{lambda()#55}& std::_Any_data::_M_access<main::{lambda()#55}>():
.LFB6707:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#56} const& std::forward<main::{lambda()#56} const&>(std::remove_reference<main::{lambda()#56} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56} const& std::forward<main::{lambda()#56} const&>(std::remove_reference<main::{lambda()#56} const&>::type&)
main::{lambda()#56} const& std::forward<main::{lambda()#56} const&>(std::remove_reference<main::{lambda()#56} const&>::type&):
.LFB6708:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#56}>::_M_create<main::{lambda()#56} const&>(std::_Any_data&, main::{lambda()#56} const&, std::integral_constant<bool, true>):
.LFB6709:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#56} const& std::forward<main::{lambda()#56} const&>(std::remove_reference<main::{lambda()#56} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#56}& std::_Any_data::_M_access<main::{lambda()#56}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#56}& std::_Any_data::_M_access<main::{lambda()#56}>()
main::{lambda()#56}& std::_Any_data::_M_access<main::{lambda()#56}>():
.LFB6710:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#57} const& std::forward<main::{lambda()#57} const&>(std::remove_reference<main::{lambda()#57} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57} const& std::forward<main::{lambda()#57} const&>(std::remove_reference<main::{lambda()#57} const&>::type&)
main::{lambda()#57} const& std::forward<main::{lambda()#57} const&>(std::remove_reference<main::{lambda()#57} const&>::type&):
.LFB6711:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#57}>::_M_create<main::{lambda()#57} const&>(std::_Any_data&, main::{lambda()#57} const&, std::integral_constant<bool, true>):
.LFB6712:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#57} const& std::forward<main::{lambda()#57} const&>(std::remove_reference<main::{lambda()#57} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#57}& std::_Any_data::_M_access<main::{lambda()#57}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#57}& std::_Any_data::_M_access<main::{lambda()#57}>()
main::{lambda()#57}& std::_Any_data::_M_access<main::{lambda()#57}>():
.LFB6713:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#58} const& std::forward<main::{lambda()#58} const&>(std::remove_reference<main::{lambda()#58} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58} const& std::forward<main::{lambda()#58} const&>(std::remove_reference<main::{lambda()#58} const&>::type&)
main::{lambda()#58} const& std::forward<main::{lambda()#58} const&>(std::remove_reference<main::{lambda()#58} const&>::type&):
.LFB6714:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#58}>::_M_create<main::{lambda()#58} const&>(std::_Any_data&, main::{lambda()#58} const&, std::integral_constant<bool, true>):
.LFB6715:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#58} const& std::forward<main::{lambda()#58} const&>(std::remove_reference<main::{lambda()#58} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#58}& std::_Any_data::_M_access<main::{lambda()#58}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#58}& std::_Any_data::_M_access<main::{lambda()#58}>()
main::{lambda()#58}& std::_Any_data::_M_access<main::{lambda()#58}>():
.LFB6716:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#59} const& std::forward<main::{lambda()#59} const&>(std::remove_reference<main::{lambda()#59} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59} const& std::forward<main::{lambda()#59} const&>(std::remove_reference<main::{lambda()#59} const&>::type&)
main::{lambda()#59} const& std::forward<main::{lambda()#59} const&>(std::remove_reference<main::{lambda()#59} const&>::type&):
.LFB6717:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#59}>::_M_create<main::{lambda()#59} const&>(std::_Any_data&, main::{lambda()#59} const&, std::integral_constant<bool, true>):
.LFB6718:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#59} const& std::forward<main::{lambda()#59} const&>(std::remove_reference<main::{lambda()#59} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#59}& std::_Any_data::_M_access<main::{lambda()#59}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#59}& std::_Any_data::_M_access<main::{lambda()#59}>()
main::{lambda()#59}& std::_Any_data::_M_access<main::{lambda()#59}>():
.LFB6719:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#60} const& std::forward<main::{lambda()#60} const&>(std::remove_reference<main::{lambda()#60} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60} const& std::forward<main::{lambda()#60} const&>(std::remove_reference<main::{lambda()#60} const&>::type&)
main::{lambda()#60} const& std::forward<main::{lambda()#60} const&>(std::remove_reference<main::{lambda()#60} const&>::type&):
.LFB6720:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#60}>::_M_create<main::{lambda()#60} const&>(std::_Any_data&, main::{lambda()#60} const&, std::integral_constant<bool, true>):
.LFB6721:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#60} const& std::forward<main::{lambda()#60} const&>(std::remove_reference<main::{lambda()#60} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#60}& std::_Any_data::_M_access<main::{lambda()#60}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#60}& std::_Any_data::_M_access<main::{lambda()#60}>()
main::{lambda()#60}& std::_Any_data::_M_access<main::{lambda()#60}>():
.LFB6722:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#61} const& std::forward<main::{lambda()#61} const&>(std::remove_reference<main::{lambda()#61} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61} const& std::forward<main::{lambda()#61} const&>(std::remove_reference<main::{lambda()#61} const&>::type&)
main::{lambda()#61} const& std::forward<main::{lambda()#61} const&>(std::remove_reference<main::{lambda()#61} const&>::type&):
.LFB6723:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#61}>::_M_create<main::{lambda()#61} const&>(std::_Any_data&, main::{lambda()#61} const&, std::integral_constant<bool, true>):
.LFB6724:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#61} const& std::forward<main::{lambda()#61} const&>(std::remove_reference<main::{lambda()#61} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#61}& std::_Any_data::_M_access<main::{lambda()#61}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#61}& std::_Any_data::_M_access<main::{lambda()#61}>()
main::{lambda()#61}& std::_Any_data::_M_access<main::{lambda()#61}>():
.LFB6725:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#62} const& std::forward<main::{lambda()#62} const&>(std::remove_reference<main::{lambda()#62} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62} const& std::forward<main::{lambda()#62} const&>(std::remove_reference<main::{lambda()#62} const&>::type&)
main::{lambda()#62} const& std::forward<main::{lambda()#62} const&>(std::remove_reference<main::{lambda()#62} const&>::type&):
.LFB6726:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#62}>::_M_create<main::{lambda()#62} const&>(std::_Any_data&, main::{lambda()#62} const&, std::integral_constant<bool, true>):
.LFB6727:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#62} const& std::forward<main::{lambda()#62} const&>(std::remove_reference<main::{lambda()#62} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#62}& std::_Any_data::_M_access<main::{lambda()#62}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#62}& std::_Any_data::_M_access<main::{lambda()#62}>()
main::{lambda()#62}& std::_Any_data::_M_access<main::{lambda()#62}>():
.LFB6728:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#63} const& std::forward<main::{lambda()#63} const&>(std::remove_reference<main::{lambda()#63} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63} const& std::forward<main::{lambda()#63} const&>(std::remove_reference<main::{lambda()#63} const&>::type&)
main::{lambda()#63} const& std::forward<main::{lambda()#63} const&>(std::remove_reference<main::{lambda()#63} const&>::type&):
.LFB6729:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#63}>::_M_create<main::{lambda()#63} const&>(std::_Any_data&, main::{lambda()#63} const&, std::integral_constant<bool, true>):
.LFB6730:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#63} const& std::forward<main::{lambda()#63} const&>(std::remove_reference<main::{lambda()#63} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#63}& std::_Any_data::_M_access<main::{lambda()#63}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#63}& std::_Any_data::_M_access<main::{lambda()#63}>()
main::{lambda()#63}& std::_Any_data::_M_access<main::{lambda()#63}>():
.LFB6731:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#64} const& std::forward<main::{lambda()#64} const&>(std::remove_reference<main::{lambda()#64} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64} const& std::forward<main::{lambda()#64} const&>(std::remove_reference<main::{lambda()#64} const&>::type&)
main::{lambda()#64} const& std::forward<main::{lambda()#64} const&>(std::remove_reference<main::{lambda()#64} const&>::type&):
.LFB6732:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#64}>::_M_create<main::{lambda()#64} const&>(std::_Any_data&, main::{lambda()#64} const&, std::integral_constant<bool, true>):
.LFB6733:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#64} const& std::forward<main::{lambda()#64} const&>(std::remove_reference<main::{lambda()#64} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#64}& std::_Any_data::_M_access<main::{lambda()#64}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#64}& std::_Any_data::_M_access<main::{lambda()#64}>()
main::{lambda()#64}& std::_Any_data::_M_access<main::{lambda()#64}>():
.LFB6734:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#65} const& std::forward<main::{lambda()#65} const&>(std::remove_reference<main::{lambda()#65} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65} const& std::forward<main::{lambda()#65} const&>(std::remove_reference<main::{lambda()#65} const&>::type&)
main::{lambda()#65} const& std::forward<main::{lambda()#65} const&>(std::remove_reference<main::{lambda()#65} const&>::type&):
.LFB6735:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#65}>::_M_create<main::{lambda()#65} const&>(std::_Any_data&, main::{lambda()#65} const&, std::integral_constant<bool, true>):
.LFB6736:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#65} const& std::forward<main::{lambda()#65} const&>(std::remove_reference<main::{lambda()#65} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#65}& std::_Any_data::_M_access<main::{lambda()#65}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#65}& std::_Any_data::_M_access<main::{lambda()#65}>()
main::{lambda()#65}& std::_Any_data::_M_access<main::{lambda()#65}>():
.LFB6737:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#66} const& std::forward<main::{lambda()#66} const&>(std::remove_reference<main::{lambda()#66} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66} const& std::forward<main::{lambda()#66} const&>(std::remove_reference<main::{lambda()#66} const&>::type&)
main::{lambda()#66} const& std::forward<main::{lambda()#66} const&>(std::remove_reference<main::{lambda()#66} const&>::type&):
.LFB6738:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#66}>::_M_create<main::{lambda()#66} const&>(std::_Any_data&, main::{lambda()#66} const&, std::integral_constant<bool, true>):
.LFB6739:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#66} const& std::forward<main::{lambda()#66} const&>(std::remove_reference<main::{lambda()#66} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#66}& std::_Any_data::_M_access<main::{lambda()#66}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#66}& std::_Any_data::_M_access<main::{lambda()#66}>()
main::{lambda()#66}& std::_Any_data::_M_access<main::{lambda()#66}>():
.LFB6740:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#67} const& std::forward<main::{lambda()#67} const&>(std::remove_reference<main::{lambda()#67} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67} const& std::forward<main::{lambda()#67} const&>(std::remove_reference<main::{lambda()#67} const&>::type&)
main::{lambda()#67} const& std::forward<main::{lambda()#67} const&>(std::remove_reference<main::{lambda()#67} const&>::type&):
.LFB6741:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#67}>::_M_create<main::{lambda()#67} const&>(std::_Any_data&, main::{lambda()#67} const&, std::integral_constant<bool, true>):
.LFB6742:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#67} const& std::forward<main::{lambda()#67} const&>(std::remove_reference<main::{lambda()#67} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#67}& std::_Any_data::_M_access<main::{lambda()#67}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#67}& std::_Any_data::_M_access<main::{lambda()#67}>()
main::{lambda()#67}& std::_Any_data::_M_access<main::{lambda()#67}>():
.LFB6743:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#68} const& std::forward<main::{lambda()#68} const&>(std::remove_reference<main::{lambda()#68} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68} const& std::forward<main::{lambda()#68} const&>(std::remove_reference<main::{lambda()#68} const&>::type&)
main::{lambda()#68} const& std::forward<main::{lambda()#68} const&>(std::remove_reference<main::{lambda()#68} const&>::type&):
.LFB6744:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#68}>::_M_create<main::{lambda()#68} const&>(std::_Any_data&, main::{lambda()#68} const&, std::integral_constant<bool, true>):
.LFB6745:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#68} const& std::forward<main::{lambda()#68} const&>(std::remove_reference<main::{lambda()#68} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#68}& std::_Any_data::_M_access<main::{lambda()#68}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#68}& std::_Any_data::_M_access<main::{lambda()#68}>()
main::{lambda()#68}& std::_Any_data::_M_access<main::{lambda()#68}>():
.LFB6746:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#69} const& std::forward<main::{lambda()#69} const&>(std::remove_reference<main::{lambda()#69} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69} const& std::forward<main::{lambda()#69} const&>(std::remove_reference<main::{lambda()#69} const&>::type&)
main::{lambda()#69} const& std::forward<main::{lambda()#69} const&>(std::remove_reference<main::{lambda()#69} const&>::type&):
.LFB6747:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#69}>::_M_create<main::{lambda()#69} const&>(std::_Any_data&, main::{lambda()#69} const&, std::integral_constant<bool, true>):
.LFB6748:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#69} const& std::forward<main::{lambda()#69} const&>(std::remove_reference<main::{lambda()#69} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#69}& std::_Any_data::_M_access<main::{lambda()#69}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#69}& std::_Any_data::_M_access<main::{lambda()#69}>()
main::{lambda()#69}& std::_Any_data::_M_access<main::{lambda()#69}>():
.LFB6749:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#70} const& std::forward<main::{lambda()#70} const&>(std::remove_reference<main::{lambda()#70} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70} const& std::forward<main::{lambda()#70} const&>(std::remove_reference<main::{lambda()#70} const&>::type&)
main::{lambda()#70} const& std::forward<main::{lambda()#70} const&>(std::remove_reference<main::{lambda()#70} const&>::type&):
.LFB6750:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#70}>::_M_create<main::{lambda()#70} const&>(std::_Any_data&, main::{lambda()#70} const&, std::integral_constant<bool, true>):
.LFB6751:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#70} const& std::forward<main::{lambda()#70} const&>(std::remove_reference<main::{lambda()#70} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#70}& std::_Any_data::_M_access<main::{lambda()#70}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#70}& std::_Any_data::_M_access<main::{lambda()#70}>()
main::{lambda()#70}& std::_Any_data::_M_access<main::{lambda()#70}>():
.LFB6752:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#71} const& std::forward<main::{lambda()#71} const&>(std::remove_reference<main::{lambda()#71} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71} const& std::forward<main::{lambda()#71} const&>(std::remove_reference<main::{lambda()#71} const&>::type&)
main::{lambda()#71} const& std::forward<main::{lambda()#71} const&>(std::remove_reference<main::{lambda()#71} const&>::type&):
.LFB6753:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#71}>::_M_create<main::{lambda()#71} const&>(std::_Any_data&, main::{lambda()#71} const&, std::integral_constant<bool, true>):
.LFB6754:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#71} const& std::forward<main::{lambda()#71} const&>(std::remove_reference<main::{lambda()#71} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#71}& std::_Any_data::_M_access<main::{lambda()#71}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#71}& std::_Any_data::_M_access<main::{lambda()#71}>()
main::{lambda()#71}& std::_Any_data::_M_access<main::{lambda()#71}>():
.LFB6755:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#72} const& std::forward<main::{lambda()#72} const&>(std::remove_reference<main::{lambda()#72} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72} const& std::forward<main::{lambda()#72} const&>(std::remove_reference<main::{lambda()#72} const&>::type&)
main::{lambda()#72} const& std::forward<main::{lambda()#72} const&>(std::remove_reference<main::{lambda()#72} const&>::type&):
.LFB6756:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#72}>::_M_create<main::{lambda()#72} const&>(std::_Any_data&, main::{lambda()#72} const&, std::integral_constant<bool, true>):
.LFB6757:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#72} const& std::forward<main::{lambda()#72} const&>(std::remove_reference<main::{lambda()#72} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#72}& std::_Any_data::_M_access<main::{lambda()#72}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#72}& std::_Any_data::_M_access<main::{lambda()#72}>()
main::{lambda()#72}& std::_Any_data::_M_access<main::{lambda()#72}>():
.LFB6758:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#73} const& std::forward<main::{lambda()#73} const&>(std::remove_reference<main::{lambda()#73} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73} const& std::forward<main::{lambda()#73} const&>(std::remove_reference<main::{lambda()#73} const&>::type&)
main::{lambda()#73} const& std::forward<main::{lambda()#73} const&>(std::remove_reference<main::{lambda()#73} const&>::type&):
.LFB6759:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#73}>::_M_create<main::{lambda()#73} const&>(std::_Any_data&, main::{lambda()#73} const&, std::integral_constant<bool, true>):
.LFB6760:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#73} const& std::forward<main::{lambda()#73} const&>(std::remove_reference<main::{lambda()#73} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#73}& std::_Any_data::_M_access<main::{lambda()#73}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#73}& std::_Any_data::_M_access<main::{lambda()#73}>()
main::{lambda()#73}& std::_Any_data::_M_access<main::{lambda()#73}>():
.LFB6761:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#74} const& std::forward<main::{lambda()#74} const&>(std::remove_reference<main::{lambda()#74} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74} const& std::forward<main::{lambda()#74} const&>(std::remove_reference<main::{lambda()#74} const&>::type&)
main::{lambda()#74} const& std::forward<main::{lambda()#74} const&>(std::remove_reference<main::{lambda()#74} const&>::type&):
.LFB6762:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#74}>::_M_create<main::{lambda()#74} const&>(std::_Any_data&, main::{lambda()#74} const&, std::integral_constant<bool, true>):
.LFB6763:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#74} const& std::forward<main::{lambda()#74} const&>(std::remove_reference<main::{lambda()#74} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#74}& std::_Any_data::_M_access<main::{lambda()#74}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#74}& std::_Any_data::_M_access<main::{lambda()#74}>()
main::{lambda()#74}& std::_Any_data::_M_access<main::{lambda()#74}>():
.LFB6764:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#75} const& std::forward<main::{lambda()#75} const&>(std::remove_reference<main::{lambda()#75} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75} const& std::forward<main::{lambda()#75} const&>(std::remove_reference<main::{lambda()#75} const&>::type&)
main::{lambda()#75} const& std::forward<main::{lambda()#75} const&>(std::remove_reference<main::{lambda()#75} const&>::type&):
.LFB6765:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#75}>::_M_create<main::{lambda()#75} const&>(std::_Any_data&, main::{lambda()#75} const&, std::integral_constant<bool, true>):
.LFB6766:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#75} const& std::forward<main::{lambda()#75} const&>(std::remove_reference<main::{lambda()#75} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#75}& std::_Any_data::_M_access<main::{lambda()#75}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#75}& std::_Any_data::_M_access<main::{lambda()#75}>()
main::{lambda()#75}& std::_Any_data::_M_access<main::{lambda()#75}>():
.LFB6767:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#76} const& std::forward<main::{lambda()#76} const&>(std::remove_reference<main::{lambda()#76} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76} const& std::forward<main::{lambda()#76} const&>(std::remove_reference<main::{lambda()#76} const&>::type&)
main::{lambda()#76} const& std::forward<main::{lambda()#76} const&>(std::remove_reference<main::{lambda()#76} const&>::type&):
.LFB6768:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#76}>::_M_create<main::{lambda()#76} const&>(std::_Any_data&, main::{lambda()#76} const&, std::integral_constant<bool, true>):
.LFB6769:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#76} const& std::forward<main::{lambda()#76} const&>(std::remove_reference<main::{lambda()#76} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#76}& std::_Any_data::_M_access<main::{lambda()#76}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#76}& std::_Any_data::_M_access<main::{lambda()#76}>()
main::{lambda()#76}& std::_Any_data::_M_access<main::{lambda()#76}>():
.LFB6770:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#77} const& std::forward<main::{lambda()#77} const&>(std::remove_reference<main::{lambda()#77} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77} const& std::forward<main::{lambda()#77} const&>(std::remove_reference<main::{lambda()#77} const&>::type&)
main::{lambda()#77} const& std::forward<main::{lambda()#77} const&>(std::remove_reference<main::{lambda()#77} const&>::type&):
.LFB6771:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#77}>::_M_create<main::{lambda()#77} const&>(std::_Any_data&, main::{lambda()#77} const&, std::integral_constant<bool, true>):
.LFB6772:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#77} const& std::forward<main::{lambda()#77} const&>(std::remove_reference<main::{lambda()#77} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#77}& std::_Any_data::_M_access<main::{lambda()#77}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#77}& std::_Any_data::_M_access<main::{lambda()#77}>()
main::{lambda()#77}& std::_Any_data::_M_access<main::{lambda()#77}>():
.LFB6773:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#78} const& std::forward<main::{lambda()#78} const&>(std::remove_reference<main::{lambda()#78} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78} const& std::forward<main::{lambda()#78} const&>(std::remove_reference<main::{lambda()#78} const&>::type&)
main::{lambda()#78} const& std::forward<main::{lambda()#78} const&>(std::remove_reference<main::{lambda()#78} const&>::type&):
.LFB6774:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#78}>::_M_create<main::{lambda()#78} const&>(std::_Any_data&, main::{lambda()#78} const&, std::integral_constant<bool, true>):
.LFB6775:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#78} const& std::forward<main::{lambda()#78} const&>(std::remove_reference<main::{lambda()#78} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#78}& std::_Any_data::_M_access<main::{lambda()#78}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#78}& std::_Any_data::_M_access<main::{lambda()#78}>()
main::{lambda()#78}& std::_Any_data::_M_access<main::{lambda()#78}>():
.LFB6776:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	main::{lambda()#79} const& std::forward<main::{lambda()#79} const&>(std::remove_reference<main::{lambda()#79} const&>::type&);	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79} const& std::forward<main::{lambda()#79} const&>(std::remove_reference<main::{lambda()#79} const&>::type&)
main::{lambda()#79} const& std::forward<main::{lambda()#79} const&>(std::remove_reference<main::{lambda()#79} const&>::type&):
.LFB6777:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.def	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&, std::integral_constant<bool, true>);	.scl	3;	.type	32;	.endef
	.seh_proc	void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&, std::integral_constant<bool, true>)
void std::_Function_base::_Base_manager<main::{lambda()#79}>::_M_create<main::{lambda()#79} const&>(std::_Any_data&, main::{lambda()#79} const&, std::integral_constant<bool, true>):
.LFB6778:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	movq	%rax, %rdx
	movl	$1, %ecx
	call	operator new(unsigned long long, void*)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	main::{lambda()#79} const& std::forward<main::{lambda()#79} const&>(std::remove_reference<main::{lambda()#79} const&>::type&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.align 2
	.def	main::{lambda()#79}& std::_Any_data::_M_access<main::{lambda()#79}>();	.scl	3;	.type	32;	.endef
	.seh_proc	main::{lambda()#79}& std::_Any_data::_M_access<main::{lambda()#79}>()
main::{lambda()#79}& std::_Any_data::_M_access<main::{lambda()#79}>():
.LFB6779:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Any_data::_M_access()
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt7__cxx1110_List_baseISt4pairISt8functionIFbvEENS_12basic_stringIcSt11char_traitsIcESaIcEEEESaISA_EE11_M_get_nodeEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_node()
	.def	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_node();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_node()
std::__cxx11::_List_base<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_node():
.LFB6789:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movl	$1, %edx
	movq	%rax, %rcx
	call	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::allocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, unsigned long long)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__allocated_ptrISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEC1ERSD_PSC_,"x"
	.linkonce discard
	.align 2
	.globl	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::__allocated_ptr(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
	.def	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::__allocated_ptr(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::__allocated_ptr(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::__allocated_ptr(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*):
.LFB6792:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >* std::__addressof<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
	movq	16(%rbp), %rdx
	movq	%rax, (%rdx)
	movq	16(%rbp), %rax
	movq	32(%rbp), %rdx
	movq	%rdx, 8(%rax)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__allocated_ptrISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr()
	.def	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr();	.scl	2;	.type	32;	.endef
	.seh_proc	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr()
std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::~__allocated_ptr():
.LFB6795:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.L4333
	movq	16(%rbp), %rax
	movq	8(%rax), %rdx
	movq	16(%rbp), %rax
	movq	(%rax), %rax
	movl	$1, %r8d
	movq	%rax, %rcx
	call	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::deallocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long long)
.L4333:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE9constructISB_JRKSB_EEEvRSD_PT_DpOT0_,"x"
	.linkonce discard
	.globl	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
void std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB6796:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	movq	%rax, %rcx
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt15__allocated_ptrISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEaSEDn,"x"
	.linkonce discard
	.align 2
	.globl	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(decltype(nullptr))
	.def	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(decltype(nullptr));	.scl	2;	.type	32;	.endef
	.seh_proc	std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(decltype(nullptr))
std::__allocated_ptr<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(decltype(nullptr)):
.LFB6797:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE8allocateERSD_y,"x"
	.linkonce discard
	.globl	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::allocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, unsigned long long)
	.def	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::allocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, unsigned long long);	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::allocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, unsigned long long)
std::allocator_traits<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::allocate(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, unsigned long long):
.LFB6802:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	24(%rbp), %rdx
	movq	16(%rbp), %rax
	movl	$0, %r8d
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(unsigned long long, void const*)
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZSt11__addressofISaISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEPT_RSE_,"x"
	.linkonce discard
	.globl	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >* std::__addressof<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
	.def	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >* std::__addressof<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >* std::__addressof<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&)
std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >* std::__addressof<std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&):
.LFB6803:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS9_,"x"
	.linkonce discard
	.align 2
	.globl	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB6807:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	32(%rbp), %rax
	movq	40(%rbp), %rdx
	movq	%rax, %rcx
.LEHB174:
	call	std::function<bool ()>::function(std::function<bool ()> const&)
.LEHE174:
	movq	32(%rbp), %rax
	addq	$32, %rax
	movq	40(%rbp), %rdx
	addq	$32, %rdx
	movq	%rax, %rcx
.LEHB175:
	call	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
.LEHE175:
	jmp	.L4344
.L4343:
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::~function()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB176:
	call	_Unwind_Resume
	nop
.LEHE176:
.L4344:
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6807:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6807-.LLSDACSB6807
.LLSDACSB6807:
	.uleb128 .LEHB174-.LFB6807
	.uleb128 .LEHE174-.LEHB174
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB175-.LFB6807
	.uleb128 .LEHE175-.LEHB175
	.uleb128 .L4343-.LFB6807
	.uleb128 0
	.uleb128 .LEHB176-.LFB6807
	.uleb128 .LEHE176-.LEHB176
	.uleb128 0
	.uleb128 0
.LLSDACSE6807:
	.section	.text$_ZNSt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS9_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructISB_JRKSB_EEEvPT_DpOT0_,"x"
	.linkonce discard
	.align 2
	.globl	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
	.def	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&);	.scl	2;	.type	32;	.endef
	.seh_proc	void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
void std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::construct<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&):
.LFB6804:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%r12
	.seh_pushreg	%r12
	pushq	%rdi
	.seh_pushreg	%rdi
	pushq	%rsi
	.seh_pushreg	%rsi
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$32, %rsp
	.seh_stackalloc	32
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 48(%rbp)
	movq	%rdx, 56(%rbp)
	movq	%r8, 64(%rbp)
	movq	56(%rbp), %rbx
	movq	%rbx, %rdx
	movl	$64, %ecx
	call	operator new(unsigned long long, void*)
	movq	%rax, %rsi
	movl	$1, %r12d
	movq	64(%rbp), %rax
	movq	%rax, %rcx
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const& std::forward<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::remove_reference<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>::type&)
	movq	%rax, %rdx
	movq	%rsi, %rcx
.LEHB177:
	call	std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair(std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
.LEHE177:
	jmp	.L4349
.L4348:
	movq	%rax, %rdi
	testb	%r12b, %r12b
	je	.L4347
	movq	%rbx, %rdx
	movq	%rsi, %rcx
	call	operator delete(void*, void*)
.L4347:
	movq	%rdi, %rax
	movq	%rax, %rcx
.LEHB178:
	call	_Unwind_Resume
	nop
.LEHE178:
.L4349:
	addq	$32, %rsp
	popq	%rbx
	popq	%rsi
	popq	%rdi
	popq	%r12
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6804:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6804-.LLSDACSB6804
.LLSDACSB6804:
	.uleb128 .LEHB177-.LFB6804
	.uleb128 .LEHE177-.LEHB177
	.uleb128 .L4348-.LFB6804
	.uleb128 0
	.uleb128 .LEHB178-.LFB6804
	.uleb128 .LEHE178-.LEHB178
	.uleb128 0
	.uleb128 0
.LLSDACSE6804:
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructISB_JRKSB_EEEvPT_DpOT0_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateEyPKv,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(unsigned long long, void const*)
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(unsigned long long, void const*);	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(unsigned long long, void const*)
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::allocate(unsigned long long, void const*):
.LFB6808:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	movq	%r8, 32(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_max_size() const
	cmpq	24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L4351
	movabsq	$230584300921369395, %rax
	cmpq	24(%rbp), %rax
	jnb	.L4352
	call	std::__throw_bad_array_new_length()
.L4352:
	call	std::__throw_bad_alloc()
.L4351:
	movq	24(%rbp), %rdx
	movq	%rdx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	salq	$4, %rax
	movq	%rax, %rcx
	call	operator new(unsigned long long)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNSt8functionIFbvEEC1ERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	std::function<bool ()>::function(std::function<bool ()> const&)
	.def	std::function<bool ()>::function(std::function<bool ()> const&);	.scl	2;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::function(std::function<bool ()> const&)
std::function<bool ()>::function(std::function<bool ()> const&):
.LFB6811:
	pushq	%rbp
	.seh_pushreg	%rbp
	pushq	%rbx
	.seh_pushreg	%rbx
	subq	$40, %rsp
	.seh_stackalloc	40
	leaq	32(%rsp), %rbp
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)
	movq	%rdx, 40(%rbp)
	movq	32(%rbp), %rax
	pxor	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movq	%xmm0, 16(%rax)
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_Function_base()
	movq	32(%rbp), %rax
	movq	$0, 24(%rax)
	movq	40(%rbp), %rax
	movq	%rax, %rcx
	call	std::function<bool ()>::operator bool() const
	testb	%al, %al
	je	.L4358
	movq	40(%rbp), %rax
	movq	16(%rax), %r9
	movq	40(%rbp), %rdx
	movq	32(%rbp), %rax
	movl	$2, %r8d
	movq	%rax, %rcx
.LEHB179:
	call	*%r9
.LEHE179:
	movq	40(%rbp), %rax
	movq	24(%rax), %rdx
	movq	32(%rbp), %rax
	movq	%rdx, 24(%rax)
	movq	40(%rbp), %rax
	movq	16(%rax), %rdx
	movq	32(%rbp), %rax
	movq	%rdx, 16(%rax)
	jmp	.L4358
.L4357:
	movq	%rax, %rbx
	movq	32(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::~_Function_base()
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB180:
	call	_Unwind_Resume
.LEHE180:
.L4358:
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	ret
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6811:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6811-.LLSDACSB6811
.LLSDACSB6811:
	.uleb128 .LEHB179-.LFB6811
	.uleb128 .LEHE179-.LEHB179
	.uleb128 .L4357-.LFB6811
	.uleb128 0
	.uleb128 .LEHB180-.LFB6811
	.uleb128 .LEHE180-.LEHB180
	.uleb128 0
	.uleb128 0
.LLSDACSE6811:
	.section	.text$_ZNSt8functionIFbvEEC1ERKS1_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt15__new_allocatorISt10_List_nodeISt4pairISt8functionIFbvEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE11_M_max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_max_size() const
	.def	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_max_size() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_max_size() const
std::__new_allocator<std::_List_node<std::pair<std::function<bool ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_max_size() const:
.LFB6812:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movabsq	$115292150460684697, %rax
	popq	%rbp
	ret
	.seh_endproc
	.section	.text$_ZNKSt8functionIFbvEEcvbEv,"x"
	.linkonce discard
	.align 2
	.globl	std::function<bool ()>::operator bool() const
	.def	std::function<bool ()>::operator bool() const;	.scl	2;	.type	32;	.endef
	.seh_proc	std::function<bool ()>::operator bool() const
std::function<bool ()>::operator bool() const:
.LFB6813:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	16(%rbp), %rax
	movq	%rax, %rcx
	call	std::_Function_base::_M_empty() const
	xorl	$1, %eax
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section .rdata,"dr"
	.align 16
typeinfo name for main::{lambda()#79}:
	.ascii "*Z4mainEUlvE77_\0"
	.align 8
typeinfo for main::{lambda()#79}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#79}
	.align 16
typeinfo name for main::{lambda()#78}:
	.ascii "*Z4mainEUlvE76_\0"
	.align 8
typeinfo for main::{lambda()#78}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#78}
	.align 16
typeinfo name for main::{lambda()#77}:
	.ascii "*Z4mainEUlvE75_\0"
	.align 8
typeinfo for main::{lambda()#77}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#77}
	.align 16
typeinfo name for main::{lambda()#76}:
	.ascii "*Z4mainEUlvE74_\0"
	.align 8
typeinfo for main::{lambda()#76}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#76}
	.align 16
typeinfo name for main::{lambda()#75}:
	.ascii "*Z4mainEUlvE73_\0"
	.align 8
typeinfo for main::{lambda()#75}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#75}
	.align 16
typeinfo name for main::{lambda()#74}:
	.ascii "*Z4mainEUlvE72_\0"
	.align 8
typeinfo for main::{lambda()#74}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#74}
	.align 16
typeinfo name for main::{lambda()#73}:
	.ascii "*Z4mainEUlvE71_\0"
	.align 8
typeinfo for main::{lambda()#73}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#73}
	.align 16
typeinfo name for main::{lambda()#72}:
	.ascii "*Z4mainEUlvE70_\0"
	.align 8
typeinfo for main::{lambda()#72}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#72}
	.align 16
typeinfo name for main::{lambda()#71}:
	.ascii "*Z4mainEUlvE69_\0"
	.align 8
typeinfo for main::{lambda()#71}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#71}
	.align 16
typeinfo name for main::{lambda()#70}:
	.ascii "*Z4mainEUlvE68_\0"
	.align 8
typeinfo for main::{lambda()#70}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#70}
	.align 16
typeinfo name for main::{lambda()#69}:
	.ascii "*Z4mainEUlvE67_\0"
	.align 8
typeinfo for main::{lambda()#69}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#69}
	.align 16
typeinfo name for main::{lambda()#68}:
	.ascii "*Z4mainEUlvE66_\0"
	.align 8
typeinfo for main::{lambda()#68}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#68}
	.align 16
typeinfo name for main::{lambda()#67}:
	.ascii "*Z4mainEUlvE65_\0"
	.align 8
typeinfo for main::{lambda()#67}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#67}
	.align 16
typeinfo name for main::{lambda()#66}:
	.ascii "*Z4mainEUlvE64_\0"
	.align 8
typeinfo for main::{lambda()#66}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#66}
	.align 16
typeinfo name for main::{lambda()#65}:
	.ascii "*Z4mainEUlvE63_\0"
	.align 8
typeinfo for main::{lambda()#65}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#65}
	.align 16
typeinfo name for main::{lambda()#64}:
	.ascii "*Z4mainEUlvE62_\0"
	.align 8
typeinfo for main::{lambda()#64}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#64}
	.align 16
typeinfo name for main::{lambda()#63}:
	.ascii "*Z4mainEUlvE61_\0"
	.align 8
typeinfo for main::{lambda()#63}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#63}
	.align 16
typeinfo name for main::{lambda()#62}:
	.ascii "*Z4mainEUlvE60_\0"
	.align 8
typeinfo for main::{lambda()#62}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#62}
	.align 16
typeinfo name for main::{lambda()#61}:
	.ascii "*Z4mainEUlvE59_\0"
	.align 8
typeinfo for main::{lambda()#61}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#61}
	.align 16
typeinfo name for main::{lambda()#60}:
	.ascii "*Z4mainEUlvE58_\0"
	.align 8
typeinfo for main::{lambda()#60}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#60}
	.align 16
typeinfo name for main::{lambda()#59}:
	.ascii "*Z4mainEUlvE57_\0"
	.align 8
typeinfo for main::{lambda()#59}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#59}
	.align 16
typeinfo name for main::{lambda()#58}:
	.ascii "*Z4mainEUlvE56_\0"
	.align 8
typeinfo for main::{lambda()#58}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#58}
	.align 16
typeinfo name for main::{lambda()#57}:
	.ascii "*Z4mainEUlvE55_\0"
	.align 8
typeinfo for main::{lambda()#57}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#57}
	.align 16
typeinfo name for main::{lambda()#56}:
	.ascii "*Z4mainEUlvE54_\0"
	.align 8
typeinfo for main::{lambda()#56}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#56}
	.align 16
typeinfo name for main::{lambda()#55}:
	.ascii "*Z4mainEUlvE53_\0"
	.align 8
typeinfo for main::{lambda()#55}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#55}
	.align 16
typeinfo name for main::{lambda()#54}:
	.ascii "*Z4mainEUlvE52_\0"
	.align 8
typeinfo for main::{lambda()#54}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#54}
	.align 16
typeinfo name for main::{lambda()#53}:
	.ascii "*Z4mainEUlvE51_\0"
	.align 8
typeinfo for main::{lambda()#53}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#53}
	.align 16
typeinfo name for main::{lambda()#52}:
	.ascii "*Z4mainEUlvE50_\0"
	.align 8
typeinfo for main::{lambda()#52}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#52}
	.align 16
typeinfo name for main::{lambda()#51}:
	.ascii "*Z4mainEUlvE49_\0"
	.align 8
typeinfo for main::{lambda()#51}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#51}
	.align 16
typeinfo name for main::{lambda()#50}:
	.ascii "*Z4mainEUlvE48_\0"
	.align 8
typeinfo for main::{lambda()#50}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#50}
	.align 16
typeinfo name for main::{lambda()#49}:
	.ascii "*Z4mainEUlvE47_\0"
	.align 8
typeinfo for main::{lambda()#49}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#49}
	.align 16
typeinfo name for main::{lambda()#48}:
	.ascii "*Z4mainEUlvE46_\0"
	.align 8
typeinfo for main::{lambda()#48}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#48}
	.align 16
typeinfo name for main::{lambda()#47}:
	.ascii "*Z4mainEUlvE45_\0"
	.align 8
typeinfo for main::{lambda()#47}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#47}
	.align 16
typeinfo name for main::{lambda()#46}:
	.ascii "*Z4mainEUlvE44_\0"
	.align 8
typeinfo for main::{lambda()#46}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#46}
	.align 16
typeinfo name for main::{lambda()#45}:
	.ascii "*Z4mainEUlvE43_\0"
	.align 8
typeinfo for main::{lambda()#45}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#45}
	.align 16
typeinfo name for main::{lambda()#44}:
	.ascii "*Z4mainEUlvE42_\0"
	.align 8
typeinfo for main::{lambda()#44}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#44}
	.align 16
typeinfo name for main::{lambda()#43}:
	.ascii "*Z4mainEUlvE41_\0"
	.align 8
typeinfo for main::{lambda()#43}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#43}
	.align 16
typeinfo name for main::{lambda()#42}:
	.ascii "*Z4mainEUlvE40_\0"
	.align 8
typeinfo for main::{lambda()#42}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#42}
	.align 16
typeinfo name for main::{lambda()#41}:
	.ascii "*Z4mainEUlvE39_\0"
	.align 8
typeinfo for main::{lambda()#41}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#41}
	.align 16
typeinfo name for main::{lambda()#40}:
	.ascii "*Z4mainEUlvE38_\0"
	.align 8
typeinfo for main::{lambda()#40}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#40}
	.align 16
typeinfo name for main::{lambda()#39}:
	.ascii "*Z4mainEUlvE37_\0"
	.align 8
typeinfo for main::{lambda()#39}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#39}
	.align 16
typeinfo name for main::{lambda()#38}:
	.ascii "*Z4mainEUlvE36_\0"
	.align 8
typeinfo for main::{lambda()#38}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#38}
	.align 16
typeinfo name for main::{lambda()#37}:
	.ascii "*Z4mainEUlvE35_\0"
	.align 8
typeinfo for main::{lambda()#37}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#37}
	.align 16
typeinfo name for main::{lambda()#36}:
	.ascii "*Z4mainEUlvE34_\0"
	.align 8
typeinfo for main::{lambda()#36}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#36}
	.align 16
typeinfo name for main::{lambda()#35}:
	.ascii "*Z4mainEUlvE33_\0"
	.align 8
typeinfo for main::{lambda()#35}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#35}
	.align 16
typeinfo name for main::{lambda()#34}:
	.ascii "*Z4mainEUlvE32_\0"
	.align 8
typeinfo for main::{lambda()#34}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#34}
	.align 16
typeinfo name for main::{lambda()#33}:
	.ascii "*Z4mainEUlvE31_\0"
	.align 8
typeinfo for main::{lambda()#33}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#33}
	.align 16
typeinfo name for main::{lambda()#32}:
	.ascii "*Z4mainEUlvE30_\0"
	.align 8
typeinfo for main::{lambda()#32}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#32}
	.align 16
typeinfo name for main::{lambda()#31}:
	.ascii "*Z4mainEUlvE29_\0"
	.align 8
typeinfo for main::{lambda()#31}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#31}
	.align 16
typeinfo name for main::{lambda()#30}:
	.ascii "*Z4mainEUlvE28_\0"
	.align 8
typeinfo for main::{lambda()#30}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#30}
	.align 16
typeinfo name for main::{lambda()#29}:
	.ascii "*Z4mainEUlvE27_\0"
	.align 8
typeinfo for main::{lambda()#29}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#29}
	.align 16
typeinfo name for main::{lambda()#28}:
	.ascii "*Z4mainEUlvE26_\0"
	.align 8
typeinfo for main::{lambda()#28}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#28}
	.align 16
typeinfo name for main::{lambda()#27}:
	.ascii "*Z4mainEUlvE25_\0"
	.align 8
typeinfo for main::{lambda()#27}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#27}
	.align 16
typeinfo name for main::{lambda()#26}:
	.ascii "*Z4mainEUlvE24_\0"
	.align 8
typeinfo for main::{lambda()#26}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#26}
	.align 16
typeinfo name for main::{lambda()#25}:
	.ascii "*Z4mainEUlvE23_\0"
	.align 8
typeinfo for main::{lambda()#25}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#25}
	.align 16
typeinfo name for main::{lambda()#24}:
	.ascii "*Z4mainEUlvE22_\0"
	.align 8
typeinfo for main::{lambda()#24}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#24}
	.align 16
typeinfo name for main::{lambda()#23}:
	.ascii "*Z4mainEUlvE21_\0"
	.align 8
typeinfo for main::{lambda()#23}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#23}
	.align 16
typeinfo name for main::{lambda()#22}:
	.ascii "*Z4mainEUlvE20_\0"
	.align 8
typeinfo for main::{lambda()#22}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#22}
	.align 16
typeinfo name for main::{lambda()#21}:
	.ascii "*Z4mainEUlvE19_\0"
	.align 8
typeinfo for main::{lambda()#21}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#21}
	.align 16
typeinfo name for main::{lambda()#20}:
	.ascii "*Z4mainEUlvE18_\0"
	.align 8
typeinfo for main::{lambda()#20}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#20}
	.align 16
typeinfo name for main::{lambda()#19}:
	.ascii "*Z4mainEUlvE17_\0"
	.align 8
typeinfo for main::{lambda()#19}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#19}
	.align 16
typeinfo name for main::{lambda()#18}:
	.ascii "*Z4mainEUlvE16_\0"
	.align 8
typeinfo for main::{lambda()#18}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#18}
	.align 16
typeinfo name for main::{lambda()#17}:
	.ascii "*Z4mainEUlvE15_\0"
	.align 8
typeinfo for main::{lambda()#17}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#17}
	.align 16
typeinfo name for main::{lambda()#16}:
	.ascii "*Z4mainEUlvE14_\0"
	.align 8
typeinfo for main::{lambda()#16}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#16}
	.align 16
typeinfo name for main::{lambda()#15}:
	.ascii "*Z4mainEUlvE13_\0"
	.align 8
typeinfo for main::{lambda()#15}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#15}
	.align 16
typeinfo name for main::{lambda()#14}:
	.ascii "*Z4mainEUlvE12_\0"
	.align 8
typeinfo for main::{lambda()#14}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#14}
	.align 16
typeinfo name for main::{lambda()#13}:
	.ascii "*Z4mainEUlvE11_\0"
	.align 8
typeinfo for main::{lambda()#13}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#13}
	.align 16
typeinfo name for main::{lambda()#12}:
	.ascii "*Z4mainEUlvE10_\0"
	.align 8
typeinfo for main::{lambda()#12}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#12}
	.align 8
typeinfo name for main::{lambda()#11}:
	.ascii "*Z4mainEUlvE9_\0"
	.align 8
typeinfo for main::{lambda()#11}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#11}
	.align 8
typeinfo name for main::{lambda()#10}:
	.ascii "*Z4mainEUlvE8_\0"
	.align 8
typeinfo for main::{lambda()#10}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#10}
	.align 8
typeinfo name for main::{lambda()#9}:
	.ascii "*Z4mainEUlvE7_\0"
	.align 8
typeinfo for main::{lambda()#9}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#9}
	.align 8
typeinfo name for main::{lambda()#8}:
	.ascii "*Z4mainEUlvE6_\0"
	.align 8
typeinfo for main::{lambda()#8}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#8}
	.align 8
typeinfo name for main::{lambda()#7}:
	.ascii "*Z4mainEUlvE5_\0"
	.align 8
typeinfo for main::{lambda()#7}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#7}
	.align 8
typeinfo name for main::{lambda()#6}:
	.ascii "*Z4mainEUlvE4_\0"
	.align 8
typeinfo for main::{lambda()#6}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#6}
	.align 8
typeinfo name for main::{lambda()#5}:
	.ascii "*Z4mainEUlvE3_\0"
	.align 8
typeinfo for main::{lambda()#5}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#5}
	.align 8
typeinfo name for main::{lambda()#4}:
	.ascii "*Z4mainEUlvE2_\0"
	.align 8
typeinfo for main::{lambda()#4}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#4}
	.align 8
typeinfo name for main::{lambda()#3}:
	.ascii "*Z4mainEUlvE1_\0"
	.align 8
typeinfo for main::{lambda()#3}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#3}
	.align 8
typeinfo name for main::{lambda()#2}:
	.ascii "*Z4mainEUlvE0_\0"
	.align 8
typeinfo for main::{lambda()#2}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#2}
	.align 8
typeinfo name for main::{lambda()#1}:
	.ascii "*Z4mainEUlvE_\0"
	.align 8
typeinfo for main::{lambda()#1}:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for main::{lambda()#1}
	.globl	typeinfo for std::exception
	.section	.rdata$_ZTISt9exception,"dr"
	.linkonce same_size
	.align 8
typeinfo for std::exception:
	.quad	vtable for __cxxabiv1::__class_type_info+16
	.quad	typeinfo name for std::exception
	.globl	typeinfo name for std::exception
	.section	.rdata$_ZTSSt9exception,"dr"
	.linkonce same_size
	.align 8
typeinfo name for std::exception:
	.ascii "St9exception\0"
	.text
	.def	__tcf_0;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_0
__tcf_0:
.LFB6815:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	leaq	std::__ioinit(%rip), %rax
	movq	%rax, %rcx
	call	std::ios_base::Init::~Init()
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	__static_initialization_and_destruction_0(int, int);	.scl	3;	.type	32;	.endef
	.seh_proc	__static_initialization_and_destruction_0(int, int)
__static_initialization_and_destruction_0(int, int):
.LFB6814:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	movl	%edx, 24(%rbp)
	cmpl	$1, 16(%rbp)
	jne	.L4366
	cmpl	$65535, 24(%rbp)
	jne	.L4366
	leaq	std::__ioinit(%rip), %rax
	movq	%rax, %rcx
	call	std::ios_base::Init::Init()
	leaq	__tcf_0(%rip), %rax
	movq	%rax, %rcx
	call	atexit
.L4366:
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.def	_GLOBAL__sub_I_main;	.scl	3;	.type	32;	.endef
	.seh_proc	_GLOBAL__sub_I_main
_GLOBAL__sub_I_main:
.LFB6816:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movl	$65535, %edx
	movl	$1, %ecx
	call	__static_initialization_and_destruction_0(int, int)
	nop
	addq	$32, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.section	.ctors,"w"
	.align 8
	.quad	_GLOBAL__sub_I_main
	.data
	.align 8
.LDFCM0:
	.quad	typeinfo for std::exception
	.ident	"GCC: (Rev6, Built by MSYS2 project) 12.2.0"
	.def	strlen;	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string();	.scl	2;	.type	32;	.endef
	.def	std::allocator<char>::allocator();	.scl	2;	.type	32;	.endef
	.def	std::allocator<char>::~allocator();	.scl	2;	.type	32;	.endef
	.def	_Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	__cpu_indicator_init;	.scl	2;	.type	32;	.endef
	.def	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);	.scl	2;	.type	32;	.endef
	.def	std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&));	.scl	2;	.type	32;	.endef
	.def	__cxa_begin_catch;	.scl	2;	.type	32;	.endef
	.def	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*);	.scl	2;	.type	32;	.endef
	.def	__cxa_end_catch;	.scl	2;	.type	32;	.endef
	.def	std::allocator<char>::~allocator();	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data();	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&);	.scl	2;	.type	32;	.endef
	.def	std::__throw_logic_error(char const*);	.scl	2;	.type	32;	.endef
	.def	std::__throw_bad_function_call();	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose();	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long);	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*);	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long);	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const;	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*);	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long);	.scl	2;	.type	32;	.endef
	.def	std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*);	.scl	2;	.type	32;	.endef
	.def	operator delete(void*, unsigned long long);	.scl	2;	.type	32;	.endef
	.def	std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);	.scl	2;	.type	32;	.endef
	.def	std::__throw_bad_array_new_length();	.scl	2;	.type	32;	.endef
	.def	std::__throw_bad_alloc();	.scl	2;	.type	32;	.endef
	.def	operator new(unsigned long long);	.scl	2;	.type	32;	.endef
	.def	std::ios_base::Init::~Init();	.scl	2;	.type	32;	.endef
	.def	std::ios_base::Init::Init();	.scl	2;	.type	32;	.endef
	.def	atexit;	.scl	2;	.type	32;	.endef
	.section	.rdata$.refptr._ZSt4cerr, "dr"
	.globl	.refptr._ZSt4cerr
	.linkonce	discard
.refptr._ZSt4cerr:
	.quad	std::cerr
	.section	.rdata$.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, "dr"
	.globl	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
	.linkonce	discard
.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:
	.quad	std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)
	.section	.rdata$.refptr._ZSt4cout, "dr"
	.globl	.refptr._ZSt4cout
	.linkonce	discard
.refptr._ZSt4cout:
	.quad	std::cout
	.section	.rdata$.refptr.__cpu_features2, "dr"
	.globl	.refptr.__cpu_features2
	.linkonce	discard
.refptr.__cpu_features2:
	.quad	__cpu_features2
	.section	.rdata$.refptr.__cpu_model, "dr"
	.globl	.refptr.__cpu_model
	.linkonce	discard
.refptr.__cpu_model:
	.quad	__cpu_model
